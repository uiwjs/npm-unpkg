{"version":3,"file":"static/js/372.48fa44ed.chunk.js","mappings":"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A,GAAO8nC,EAAU,EAAG,EAAGtoC,EACzB,8BCnEO,SAASuoC,EAAoBriD,GAClC,OACEA,EAEGqB,QAAQ,cAAe,KAEvBA,QAAQ,SAAU,IAOlBywB,cACAurB,aAEP,+CCjBO,SAASiF,EAAWH,EAAYI,EAAQj8C,GAE7C,MAAMk8C,EAAS,GACf,IAAIlvC,GAAS,EAEb,OAASA,EAAQ6uC,EAAWznD,QAAQ,CAClC,MAAMiU,EAAUwzC,EAAW7uC,GAAOgvC,WAE9B3zC,IAAY6zC,EAAOxmD,SAAS2S,KAC9B4zC,EAAS5zC,EAAQ4zC,EAAQj8C,GACzBk8C,EAAOz/C,KAAK4L,GAEhB,CAEA,OAAO4zC,CACT,gEC5BO,MAAME,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IA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","sources":["../node_modules/@wcj/dark-mode/dist/dark-mode.min.js","../node_modules/boolbase/index.js","../node_modules/extend/index.js","../node_modules/inline-style-parser/index.js","../node_modules/parse-numeric-range/index.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/config.js","../node_modules/react-transition-group/esm/TransitionGroupContext.js","../node_modules/react-transition-group/esm/utils/reflow.js","../node_modules/react-transition-group/esm/Transition.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@lezer/common/dist/index.js","../node_modules/@lezer/css/dist/index.js","../node_modules/@lezer/highlight/dist/index.js","../node_modules/@lezer/html/dist/index.js","../node_modules/@lezer/javascript/dist/index.js","../node_modules/@lezer/json/dist/index.js","../node_modules/@lezer/lr/dist/index.js","../node_modules/@lezer/xml/dist/index.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/index.js","../node_modules/comma-separated-tokens/index.js","../node_modules/crelt/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/devlop/lib/default.js","../node_modules/hast-util-heading-rank/lib/index.js","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-html.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/generated/decode-data-xml.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode_codepoint.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/decode.ts","../https:/raw.githubusercontent.com/fb55/entities/61afd4701eaa736978b13c7351cd3de9a96b04bc/src/escape.ts","../node_modules/css-selector-parser/dist/mjs/indexes.js","../node_modules/css-selector-parser/dist/mjs/pseudo-signatures.js","../node_modules/css-selector-parser/dist/mjs/syntax-definitions.js","../node_modules/css-selector-parser/dist/mjs/utils.js","../node_modules/css-selector-parser/dist/mjs/parser.js","../node_modules/css-selector-parser/dist/mjs/ast.js","../node_modules/hast-util-select/lib/parse.js","../node_modules/direction/index.js","../node_modules/hast-util-select/lib/enter-state.js","../node_modules/hast-util-select/lib/attribute.js","../node_modules/hast-util-select/lib/class-name.js","../node_modules/hast-util-select/lib/id.js","../node_modules/hast-util-select/lib/name.js","../node_modules/bcp-47-match/index.js","../node_modules/hast-util-has-property/lib/index.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../node_modules/hast-util-select/lib/pseudo.js","../node_modules/hast-util-select/lib/test.js","../node_modules/hast-util-select/lib/walk.js","../node_modules/hast-util-select/lib/index.js","../node_modules/hast-util-to-string/lib/index.js","../node_modules/hast-util-whitespace/lib/index.js","../node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hastscript/lib/core.js","../node_modules/hastscript/lib/html.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-reference-invalid/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/vfile-message/lib/index.js","../node_modules/hast-util-to-jsx-runtime/lib/index.js","../node_modules/html-url-attributes/lib/index.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/remark-rehype/lib/index.js","../node_modules/bail/index.js","../node_modules/unified/node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/unified/lib/callable-instance.js","../node_modules/unified/lib/index.js","../node_modules/react-markdown/lib/index.js","../node_modules/rehype-attr/src/utils.ts","../node_modules/rehype-attr/src/index.ts","../node_modules/hast-util-is-element/lib/index.js","../node_modules/rehype-autolink-headings/lib/index.js","../node_modules/rehype-ignore/src/index.ts","../node_modules/rehype-prism-plus/node_modules/unist-util-is/lib/index.js","../node_modules/rehype-prism-plus/node_modules/unist-util-visit-parents/lib/index.js","../node_modules/rehype-prism-plus/node_modules/hast-util-to-string/index.js","../node_modules/unist-util-filter/node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-filter/lib/index.js","../../src/generator.js","../node_modules/rehype-prism-plus/node_modules/unist-util-visit/lib/index.js","../../src/all.js","../../src/common.js","../node_modules/hast-util-raw/node_modules/hast-util-parse-selector/lib/index.js","../node_modules/hast-util-raw/node_modules/hastscript/lib/create-h.js","../node_modules/hast-util-raw/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../node_modules/hast-util-raw/node_modules/hastscript/lib/index.js","../node_modules/hast-util-raw/node_modules/vfile-location/lib/index.js","../node_modules/web-namespaces/index.js","../node_modules/hast-util-raw/node_modules/hast-util-from-parse5/lib/index.js","../node_modules/hast-util-to-parse5/lib/index.js","../node_modules/html-void-elements/index.js","../node_modules/hast-util-raw/lib/index.js","../node_modules/rehype-raw/lib/index.js","../node_modules/github-slugger/regex.js","../node_modules/github-slugger/index.js","../node_modules/rehype-slug/lib/index.js","../node_modules/rehype-video/src/index.ts","../node_modules/rehype-video/src/detailsNode.ts","../node_modules/ccount/index.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/handle/break.js","../node_modules/mdast-util-to-markdown/lib/handle/code.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../node_modules/mdast-util-to-markdown/lib/handle/html.js","../node_modules/mdast-util-to-markdown/lib/handle/image.js","../node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../node_modules/mdast-util-to-markdown/lib/handle/link.js","../node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../node_modules/mdast-util-phrasing/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/strong.js","../node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../node_modules/mdast-util-to-markdown/lib/handle/index.js","../node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../node_modules/longest-streak/index.js","../node_modules/mdast-util-to-markdown/lib/handle/definition.js","../node_modules/mdast-util-to-markdown/lib/handle/heading.js","../node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../node_modules/mdast-util-to-markdown/lib/handle/list.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../node_modules/mdast-util-to-markdown/lib/handle/root.js","../node_modules/mdast-util-to-markdown/lib/handle/text.js","../node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/edit-map.js","../node_modules/micromark-extension-gfm-table/lib/infer.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/remark-gfm/lib/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/style-mod/src/style-mod.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/w3c-keyname/index.js","../node_modules/zwitch/index.js"],"sourcesContent":["/**\n * @package @wcj/dark-mode\n * Web Component that toggles dark mode 🌒\n * Github: https://github.com/jaywcjlove/dark-mode.git\n * Website: https://jaywcjlove.github.io/dark-mode\n * \n * Licensed under the MIT license.\n * @license Copyright © 2022. Licensed under the MIT License\n * @author kenny wong <wowohoo@qq.com>\n */\nconst t=document;const e=\"_dark_mode_theme_\";const s=\"permanent\";const o=\"colorschemechange\";const i=\"permanentcolorscheme\";const h=\"light\";const r=\"dark\";const n=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){const t=this.getAttribute(e);return t===null?\"\":t},set(t){this.setAttribute(e,t)}})};const c=(t,e,s=e)=>{Object.defineProperty(t,s,{enumerable:true,get(){return this.hasAttribute(e)},set(t){if(t){this.setAttribute(e,\"\")}else{this.removeAttribute(e)}}})};class a extends HTMLElement{static get observedAttributes(){return[\"mode\",h,r,s]}LOCAL_NANE=e;constructor(){super();this.t()}connectedCallback(){n(this,\"mode\");n(this,r);n(this,h);c(this,s);const a=localStorage.getItem(e);if(a&&[h,r].includes(a)){this.mode=a;this.permanent=true}if(this.permanent&&!a){localStorage.setItem(e,this.mode)}const l=[h,r].includes(a);if(this.permanent&&a){this.o()}else{if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: dark)\").matches){this.mode=r;this.o()}if(window.matchMedia&&window.matchMedia(\"(prefers-color-scheme: light)\").matches){this.mode=h;this.o()}}if(!this.permanent&&!l){window.matchMedia(\"(prefers-color-scheme: light)\").onchange=t=>{this.mode=t.matches?h:r;this.o()};window.matchMedia(\"(prefers-color-scheme: dark)\").onchange=t=>{this.mode=t.matches?r:h;this.o()}}const d=new MutationObserver(((s,h)=>{this.mode=t.documentElement.dataset.colorMode;if(this.permanent&&l){localStorage.setItem(e,this.mode);this.i(i,{permanent:this.permanent})}this.h();this.i(o,{colorScheme:this.mode})}));d.observe(t.documentElement,{attributes:true});this.i(o,{colorScheme:this.mode});this.h()}attributeChangedCallback(t,s,o){if(t===\"mode\"&&s!==o&&[h,r].includes(o)){const t=localStorage.getItem(e);if(this.mode===t){this.mode=o;this.h();this.o()}else if(this.mode&&this.mode!==t){this.h();this.o()}}else if((t===h||t===r)&&s!==o){this.h()}if(t===\"permanent\"&&typeof this.permanent===\"boolean\"){this.permanent?localStorage.setItem(e,this.mode):localStorage.removeItem(e)}}o(){t.documentElement.setAttribute(\"data-color-mode\",this.mode)}h(){this.icon.textContent=this.mode===h?\"🌒\":\"🌞\";this.text.textContent=this.mode===h?this.getAttribute(r):this.getAttribute(h);if(!this.text.textContent&&this.text.parentElement&&this.text){this.text.parentElement.removeChild(this.text)}}t(){var s=this.attachShadow({mode:\"open\"});this.label=t.createElement(\"span\");this.label.setAttribute(\"class\",\"wrapper\");this.label.onclick=()=>{this.mode=this.mode===h?r:h;if(this.permanent){localStorage.setItem(e,this.mode)}this.o();this.h()};s.appendChild(this.label);this.icon=t.createElement(\"span\");this.label.appendChild(this.icon);this.text=t.createElement(\"span\");this.label.appendChild(this.text);const o=`\\n[data-color-mode*='dark'], [data-color-mode*='dark'] body {\\n  color-scheme: dark;\\n  --color-theme-bg: #0d1117;\\n  --color-theme-text: #c9d1d9;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}\\n\\n[data-color-mode*='light'], [data-color-mode*='light'] body {\\n  color-scheme: light;\\n  --color-theme-bg: #fff;\\n  --color-theme-text: #24292f;\\n  background-color: var(--color-theme-bg);\\n  color: var(--color-theme-text);\\n}`;const i=\"_dark_mode_style_\";const n=t.getElementById(i);if(!n){var c=t.createElement(\"style\");c.id=i;c.textContent=o;t.head.appendChild(c)}var a=t.createElement(\"style\");a.textContent=`\\n    .wrapper { cursor: pointer; user-select: none; position: relative; }\\n    .wrapper > span + span { margin-left: .4rem; }\\n    `;s.appendChild(a)}i(t,e){this.dispatchEvent(new CustomEvent(t,{bubbles:true,composed:true,detail:e}))}}customElements.define(\"dark-mode\",a);","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import React from 'react';\nexport default React.createContext(null);","export var forceReflow = function forceReflow(node) {\n  return node.scrollTop;\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { forceReflow } from './utils/reflow';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props.in) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref.in;\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  } // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n  ;\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props.in) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n\n      if (nextStatus === ENTERING) {\n        if (this.props.unmountOnExit || this.props.mountOnEnter) {\n          var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this); // https://github.com/reactjs/react-transition-group/pull/749\n          // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.\n          // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.\n\n          if (node) forceReflow(node);\n        }\n\n        this.performEnter(mounting);\n      } else {\n        this.performExit();\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n\n    var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],\n        maybeNode = _ref2[0],\n        maybeAppearing = _ref2[1];\n\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onEnter(maybeNode, maybeAppearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(maybeNode, maybeAppearing);\n\n      _this2.onTransitionEnd(enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(maybeNode, maybeAppearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit() {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts();\n    var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(maybeNode);\n      });\n      return;\n    }\n\n    this.props.onExit(maybeNode);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(maybeNode);\n\n      _this3.onTransitionEnd(timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(maybeNode);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {\n    this.setNextCallback(handler);\n    var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],\n          maybeNode = _ref3[0],\n          maybeNextCallback = _ref3[1];\n\n      this.props.addEndListener(maybeNode, maybeNextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        _in = _this$props.in,\n        _mountOnEnter = _this$props.mountOnEnter,\n        _unmountOnExit = _this$props.unmountOnExit,\n        _appear = _this$props.appear,\n        _enter = _this$props.enter,\n        _exit = _this$props.exit,\n        _timeout = _this$props.timeout,\n        _addEndListener = _this$props.addEndListener,\n        _onEnter = _this$props.onEnter,\n        _onEntering = _this$props.onEntering,\n        _onEntered = _this$props.onEntered,\n        _onExit = _this$props.onExit,\n        _onExiting = _this$props.onExiting,\n        _onExited = _this$props.onExited,\n        _nodeRef = _this$props.nodeRef,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\", \"mountOnEnter\", \"unmountOnExit\", \"appear\", \"enter\", \"exit\", \"timeout\", \"addEndListener\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"nodeRef\"]);\n\n    return (\n      /*#__PURE__*/\n      // allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, typeof children === 'function' ? children(status, childProps) : React.cloneElement(React.Children.only(children), childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A React reference to DOM element that need to transition:\n   * https://stackoverflow.com/a/51127130/4671932\n   *\n   *   - When `nodeRef` prop is used, `node` is not passed to callback functions\n   *      (e.g. `onEnter`) because user already has direct access to the node.\n   *   - When changing `key` prop of `Transition` in a `TransitionGroup` a new\n   *     `nodeRef` need to be provided to `Transition` with changed `key` prop\n   *     (see\n   *     [test/CSSTransition-test.js](https://github.com/reactjs/react-transition-group/blob/13435f897b3ab71f6e19d724f145596f5910581c/test/CSSTransition-test.js#L362-L437)).\n   */\n  nodeRef: PropTypes.shape({\n    current: typeof Element === 'undefined' ? PropTypes.any : function (propValue, key, componentName, location, propFullName, secret) {\n      var value = propValue[key];\n      return PropTypes.instanceOf(value && 'ownerDocument' in value ? value.ownerDocument.defaultView.Element : Element)(propValue, key, componentName, location, propFullName, secret);\n    }\n  }),\n\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  in: PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * By default the child component does not perform the enter transition when\n   * it first mounts, regardless of the value of `in`. If you want this\n   * behavior, set both `appear` and `in` to `true`.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. Timeouts are still used as a fallback if provided.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func\n} : {}; // Name the function so it is clearer in the documentation\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  in: false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = UNMOUNTED;\nTransition.EXITED = EXITED;\nTransition.ENTERING = ENTERING;\nTransition.ENTERED = ENTERED;\nTransition.EXITING = EXITING;\nexport default Transition;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\nimport { forceReflow } from './utils/reflow';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      if (node) forceReflow(node);\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","/**\nThe default maximum length of a `TreeBuffer` node.\n*/\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/**\nEach [node type](#common.NodeType) or [individual tree](#common.Tree)\ncan have metadata associated with it in props. Instances of this\nclass represent prop names.\n*/\nclass NodeProp {\n    /**\n    Create a new node prop type.\n    */\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /**\n    This is meant to be used with\n    [`NodeSet.extend`](#common.NodeSet.extend) or\n    [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    prop values for each node type in the set. Takes a [match\n    object](#common.NodeType^match) or function that returns undefined\n    if the node type doesn't get this prop, and the prop's value if\n    it does.\n    */\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/**\nProp that is used to describe matching delimiters. For opening\ndelimiters, this holds an array of node names (written as a\nspace-separated string when declaring this prop in a grammar)\nfor the node types of closing delimiters that match it.\n*/\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe inverse of [`closedBy`](#common.NodeProp^closedBy). This is\nattached to closing delimiters, holding an array of node names\nof types of matching opening delimiters.\n*/\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nUsed to assign node types to groups (for example, all node\ntypes that represent an expression could be tagged with an\n`\"Expression\"` group).\n*/\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/**\nThe hash of the [context](#lr.ContextTracker.constructor)\nthat the node was parsed in, if any. Used to limit reuse of\ncontextual nodes.\n*/\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/**\nThe distance beyond the end of the node that the tokenizer\nlooked ahead for any of the tokens inside the node. (The LR\nparser only stores this when it is larger than 25, for\nefficiency reasons.)\n*/\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/**\nThis per-node prop is used to replace a given node, or part of a\nnode, with another tree. This is useful to include trees from\ndifferent languages in mixed-language parsers.\n*/\nNodeProp.mounted = new NodeProp({ perNode: true });\n/**\nA mounted tree, which can be [stored](#common.NodeProp^mounted) on\na tree node to indicate that parts of its content are\nrepresented by another tree.\n*/\nclass MountedTree {\n    constructor(\n    /**\n    The inner tree.\n    */\n    tree, \n    /**\n    If this is null, this tree replaces the entire node (it will\n    be included in the regular iteration instead of its host\n    node). If not, only the given ranges are considered to be\n    covered by this tree. This is used for trees that are mixed in\n    a way that isn't strictly hierarchical. Such mounted trees are\n    only entered by [`resolveInner`](#common.Tree.resolveInner)\n    and [`enter`](#common.SyntaxNode.enter).\n    */\n    overlay, \n    /**\n    The parser used to create this subtree.\n    */\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n    /**\n    @internal\n    */\n    static get(tree) {\n        return tree && tree.props && tree.props[NodeProp.mounted.id];\n    }\n}\nconst noProps = Object.create(null);\n/**\nEach node in a syntax tree has a node type associated with it.\n*/\nclass NodeType {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The name of the node type. Not necessarily unique, but if the\n    grammar was written properly, different node types with the\n    same name within a node set should play the same semantic\n    role.\n    */\n    name, \n    /**\n    @internal\n    */\n    props, \n    /**\n    The id of this node in its set. Corresponds to the term ids\n    used in the parser.\n    */\n    id, \n    /**\n    @internal\n    */\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    /**\n    Define a node type.\n    */\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* NodeFlag.Top */ : 0) | (spec.skipped ? 2 /* NodeFlag.Skipped */ : 0) |\n            (spec.error ? 4 /* NodeFlag.Error */ : 0) | (spec.name == null ? 8 /* NodeFlag.Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /**\n    Retrieves a node prop for this type. Will return `undefined` if\n    the prop isn't present on this node.\n    */\n    prop(prop) { return this.props[prop.id]; }\n    /**\n    True when this is the top node of a grammar.\n    */\n    get isTop() { return (this.flags & 1 /* NodeFlag.Top */) > 0; }\n    /**\n    True when this node is produced by a skip rule.\n    */\n    get isSkipped() { return (this.flags & 2 /* NodeFlag.Skipped */) > 0; }\n    /**\n    Indicates whether this is an error node.\n    */\n    get isError() { return (this.flags & 4 /* NodeFlag.Error */) > 0; }\n    /**\n    When true, this node type doesn't correspond to a user-declared\n    named node, for example because it is used to cache repetition.\n    */\n    get isAnonymous() { return (this.flags & 8 /* NodeFlag.Anonymous */) > 0; }\n    /**\n    Returns true when this node's name or one of its\n    [groups](#common.NodeProp^group) matches the given string.\n    */\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /**\n    Create a function from node types to arbitrary values by\n    specifying an object whose property names are node or\n    [group](#common.NodeProp^group) names. Often useful with\n    [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    names, separated by spaces, in a single property name to map\n    multiple node names to a single value.\n    */\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/**\nAn empty dummy node type to use when no actual type is available.\n*/\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* NodeFlag.Anonymous */);\n/**\nA node set holds a collection of node types. It is used to\ncompactly represent trees by storing their type ids, rather than a\nfull pointer to the type object, in a numeric array. Each parser\n[has](#lr.LRParser.nodeSet) a node set, and [tree\nbuffers](#common.TreeBuffer) can only store collections of nodes\nfrom the same set. A set can have a maximum of 2**16 (65536) node\ntypes in it, so that the ids fit into 16-bit typed array slots.\n*/\nclass NodeSet {\n    /**\n    Create a set with the given types. The `id` property of each\n    type should correspond to its position within the array.\n    */\n    constructor(\n    /**\n    The node types in this set, by id.\n    */\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /**\n    Create a copy of this set with some node properties added. The\n    arguments to this method can be created with\n    [`NodeProp.add`](#common.NodeProp.add).\n    */\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/**\nOptions that control iteration. Can be combined with the `|`\noperator to enable multiple ones.\n*/\nvar IterMode;\n(function (IterMode) {\n    /**\n    When enabled, iteration will only visit [`Tree`](#common.Tree)\n    objects, not nodes packed into\n    [`TreeBuffer`](#common.TreeBuffer)s.\n    */\n    IterMode[IterMode[\"ExcludeBuffers\"] = 1] = \"ExcludeBuffers\";\n    /**\n    Enable this to make iteration include anonymous nodes (such as\n    the nodes that wrap repeated grammar constructs into a balanced\n    tree).\n    */\n    IterMode[IterMode[\"IncludeAnonymous\"] = 2] = \"IncludeAnonymous\";\n    /**\n    By default, regular [mounted](#common.NodeProp^mounted) nodes\n    replace their base node in iteration. Enable this to ignore them\n    instead.\n    */\n    IterMode[IterMode[\"IgnoreMounts\"] = 4] = \"IgnoreMounts\";\n    /**\n    This option only applies in\n    [`enter`](#common.SyntaxNode.enter)-style methods. It tells the\n    library to not enter mounted overlays if one covers the given\n    position.\n    */\n    IterMode[IterMode[\"IgnoreOverlays\"] = 8] = \"IgnoreOverlays\";\n})(IterMode || (IterMode = {}));\n/**\nA piece of syntax tree. There are two ways to approach these\ntrees: the way they are actually stored in memory, and the\nconvenient way.\n\nSyntax trees are stored as a tree of `Tree` and `TreeBuffer`\nobjects. By packing detail information into `TreeBuffer` leaf\nnodes, the representation is made a lot more memory-efficient.\n\nHowever, when you want to actually work with tree nodes, this\nrepresentation is very awkward, so most client code will want to\nuse the [`TreeCursor`](#common.TreeCursor) or\n[`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\na view on some part of this data structure, and can be used to\nmove around to adjacent nodes.\n*/\nclass Tree {\n    /**\n    Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    */\n    constructor(\n    /**\n    The type of the top node.\n    */\n    type, \n    /**\n    This node's child nodes.\n    */\n    children, \n    /**\n    The positions (offsets relative to the start of this tree) of\n    the children.\n    */\n    positions, \n    /**\n    The total length of this tree\n    */\n    length, \n    /**\n    Per-node [node props](#common.NodeProp) to associate with this node.\n    */\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /**\n        @internal\n        */\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let mounted = MountedTree.get(this);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) positioned at the top of\n    the tree. Mode can be used to [control](#common.IterMode) which\n    nodes the cursor visits.\n    */\n    cursor(mode = 0) {\n        return new TreeCursor(this.topNode, mode);\n    }\n    /**\n    Get a [tree cursor](#common.TreeCursor) pointing into this tree\n    at the given position and side (see\n    [`moveTo`](#common.TreeCursor.moveTo).\n    */\n    cursorAt(pos, side = 0, mode = 0) {\n        let scope = CachedNode.get(this) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        cursor.moveTo(pos, side);\n        CachedNode.set(this, cursor._tree);\n        return cursor;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) object for the top of the\n    tree.\n    */\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /**\n    Get the [syntax node](#common.SyntaxNode) at the given position.\n    If `side` is -1, this will move into nodes that end at the\n    position. If 1, it'll move into nodes that start at the\n    position. With 0, it'll only enter nodes that cover the position\n    from both sides.\n    \n    Note that this will not enter\n    [overlays](#common.MountedTree.overlay), and you often want\n    [`resolveInner`](#common.Tree.resolveInner) instead.\n    */\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /**\n    Like [`resolve`](#common.Tree.resolve), but will enter\n    [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    pointing into the innermost overlaid tree at the given position\n    (with parent links going through all parent structure, including\n    the host trees).\n    */\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /**\n    In some situations, it can be useful to iterate through all\n    nodes around a position, including those in overlays that don't\n    directly cover the position. This method gives you an iterator\n    that will produce all nodes, from small to big, around the given\n    position.\n    */\n    resolveStack(pos, side = 0) {\n        return stackIterator(this, pos, side);\n    }\n    /**\n    Iterate over the tree and its children, calling `enter` for any\n    node that touches the `from`/`to` region (if given) before\n    running over such a node's children, and `leave` (if given) when\n    leaving the node. When `enter` returns `false`, that node will\n    not have its children iterated over (or `leave` called).\n    */\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        let mode = spec.mode || 0, anon = (mode & IterMode.IncludeAnonymous) > 0;\n        for (let c = this.cursor(mode | IterMode.IncludeAnonymous);;) {\n            let entered = false;\n            if (c.from <= to && c.to >= from && (!anon && c.type.isAnonymous || enter(c) !== false)) {\n                if (c.firstChild())\n                    continue;\n                entered = true;\n            }\n            for (;;) {\n                if (entered && leave && (anon || !c.type.isAnonymous))\n                    leave(c);\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                entered = true;\n            }\n        }\n    }\n    /**\n    Get the value of the given [node prop](#common.NodeProp) for this\n    node. Works with both per-node and per-type props.\n    */\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /**\n    Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    format that can be passed to the [`Tree`](#common.Tree)\n    constructor.\n    */\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /**\n    Balance the direct children of this tree, producing a copy of\n    which may have children grouped into subtrees with type\n    [`NodeType.none`](#common.NodeType^none).\n    */\n    balance(config = {}) {\n        return this.children.length <= 8 /* Balance.BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /**\n    Build a tree from a postfix-ordered buffer of node information,\n    or a cursor over such a buffer.\n    */\n    static build(data) { return buildTree(data); }\n}\n/**\nThe empty tree\n*/\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/**\nTree buffers contain (type, start, end, endIndex) quads for each\nnode. In such a buffer, nodes are stored in prefix order (parents\nbefore children, with the endIndex of the parent indicating which\nchildren belong to it).\n*/\nclass TreeBuffer {\n    /**\n    Create a tree buffer.\n    */\n    constructor(\n    /**\n    The buffer's content.\n    */\n    buffer, \n    /**\n    The total length of the group of nodes in the buffer.\n    */\n    length, \n    /**\n    The node set used in this buffer.\n    */\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /**\n    @internal\n    */\n    get type() { return NodeType.none; }\n    /**\n    @internal\n    */\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /**\n    @internal\n    */\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /**\n    @internal\n    */\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /**\n    @internal\n    */\n    slice(startI, endI, from) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI), len = 0;\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            let to = copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n            len = Math.max(len, to);\n        }\n        return new TreeBuffer(copy, len, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Side.Before */: return from < pos;\n        case -1 /* Side.AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Side.Around */: return from < pos && to > pos;\n        case 1 /* Side.AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* Side.After */: return to > pos;\n        case 4 /* Side.DontCare */: return true;\n    }\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    let mode = overlays ? 0 : IterMode.IgnoreOverlays;\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, mode)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, mode);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass BaseNode {\n    cursor(mode = 0) { return new TreeCursor(this, mode); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    matchContext(context) {\n        return matchNodeContext(this, context);\n    }\n    enterUnfinishedNodesBefore(pos) {\n        let scan = this.childBefore(pos), node = this;\n        while (scan) {\n            let last = scan.lastChild;\n            if (!last || last.to != scan.to)\n                break;\n            if (last.type.isError && last.from == last.to) {\n                node = scan;\n                scan = last.prevSibling;\n            }\n            else {\n                scan = last;\n            }\n        }\n        return node;\n    }\n    get node() { return this; }\n    get next() { return this.parent; }\n}\nclass TreeNode extends BaseNode {\n    constructor(_tree, from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        super();\n        this._tree = _tree;\n        this.from = from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this._tree.type; }\n    get name() { return this._tree.type.name; }\n    get to() { return this.from + this._tree.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent._tree, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent.from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & IterMode.ExcludeBuffers)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & IterMode.IncludeAnonymous) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & IterMode.IgnoreMounts) && (mounted = MountedTree.get(next)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & IterMode.IncludeAnonymous) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & IterMode.IncludeAnonymous) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent._tree.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.nextChild(this._tree.children.length - 1, -1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.nextChild(this._tree.children.length - 1, -1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        let mounted;\n        if (!(mode & IterMode.IgnoreOverlays) && (mounted = MountedTree.get(this._tree)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, mode);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* Side.DontCare */) : null;\n    }\n    get tree() { return this._tree; }\n    toTree() { return this._tree; }\n    /**\n    @internal\n    */\n    toString() { return this._tree.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor(), result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nfunction matchNodeContext(node, context, i = context.length - 1) {\n    for (let p = node.parent; i >= 0; p = p.parent) {\n        if (!p)\n            return false;\n        if (!p.type.isAnonymous) {\n            if (context[i] && context[i] != p.name)\n                return false;\n            i--;\n        }\n    }\n    return true;\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode extends BaseNode {\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    constructor(context, _parent, index) {\n        super();\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* Side.DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* Side.DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* Side.After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Side.Before */); }\n    enter(pos, side, mode = 0) {\n        if (mode & IterMode.ExcludeBuffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* Side.DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n    }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1];\n            children.push(buffer.slice(startI, endI, from));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.context.buffer.childString(this.index); }\n}\nfunction iterStack(heads) {\n    if (!heads.length)\n        return null;\n    let pick = 0, picked = heads[0];\n    for (let i = 1; i < heads.length; i++) {\n        let node = heads[i];\n        if (node.from > picked.from || node.to < picked.to) {\n            picked = node;\n            pick = i;\n        }\n    }\n    let next = picked instanceof TreeNode && picked.index < 0 ? null : picked.parent;\n    let newHeads = heads.slice();\n    if (next)\n        newHeads[pick] = next;\n    else\n        newHeads.splice(pick, 1);\n    return new StackIterator(newHeads, picked);\n}\nclass StackIterator {\n    constructor(heads, node) {\n        this.heads = heads;\n        this.node = node;\n    }\n    get next() { return iterStack(this.heads); }\n}\nfunction stackIterator(tree, pos, side) {\n    let inner = tree.resolveInner(pos, side), layers = null;\n    for (let scan = inner instanceof TreeNode ? inner : inner.context.parent; scan; scan = scan.parent) {\n        if (scan.index < 0) { // This is an overlay root\n            let parent = scan.parent;\n            (layers || (layers = [inner])).push(parent.resolve(pos, side));\n            scan = parent;\n        }\n        else {\n            let mount = MountedTree.get(scan.tree);\n            // Relevant overlay branching off\n            if (mount && mount.overlay && mount.overlay[0].from <= pos && mount.overlay[mount.overlay.length - 1].to >= pos) {\n                let root = new TreeNode(mount.tree, mount.overlay[0].from + scan.from, -1, scan);\n                (layers || (layers = [inner])).push(resolveNode(root, pos, side, false));\n            }\n        }\n    }\n    return layers ? iterStack(layers) : inner;\n}\n/**\nA tree cursor object focuses on a given node in a syntax tree, and\nallows you to move to adjacent nodes.\n*/\nclass TreeCursor {\n    /**\n    Shorthand for `.type.name`.\n    */\n    get name() { return this.type.name; }\n    /**\n    @internal\n    */\n    constructor(node, \n    /**\n    @internal\n    */\n    mode = 0) {\n        this.mode = mode;\n        /**\n        @internal\n        */\n        this.buffer = null;\n        this.stack = [];\n        /**\n        @internal\n        */\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    /**\n    @internal\n    */\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /**\n    @internal\n    */\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree._tree.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /**\n    Move the cursor to this node's first child. When this returns\n    false, the node has no child, and the cursor has not been moved.\n    */\n    firstChild() { return this.enterChild(1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to this node's last child.\n    */\n    lastChild() { return this.enterChild(-1, 0, 4 /* Side.DontCare */); }\n    /**\n    Move the cursor to the first child that ends after `pos`.\n    */\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* Side.After */); }\n    /**\n    Move to the last child that starts before `pos`.\n    */\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Side.Before */); }\n    /**\n    Move the cursor to the child around `pos`. If side is -1 the\n    child may end at that position, when 1 it may start there. This\n    will also enter [overlaid](#common.MountedTree.overlay)\n    [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    set to false.\n    */\n    enter(pos, side, mode = this.mode) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, mode));\n        return mode & IterMode.ExcludeBuffers ? false : this.enterChild(1, pos, side);\n    }\n    /**\n    Move to the node's parent node, if this isn't the top node.\n    */\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & IterMode.IncludeAnonymous) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & IterMode.IncludeAnonymous) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /**\n    @internal\n    */\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* Side.DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* Side.DontCare */, this.mode)) : false;\n    }\n    /**\n    Move to this node's next sibling, if any.\n    */\n    nextSibling() { return this.sibling(1); }\n    /**\n    Move to this node's previous sibling, if any.\n    */\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent._tree.children.length; i != e; i += dir) {\n                    let child = parent._tree.children[i];\n                    if ((this.mode & IterMode.IncludeAnonymous) ||\n                        child instanceof TreeBuffer ||\n                        !child.type.isAnonymous ||\n                        hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* Side.DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /**\n    Move to the next node in a\n    [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order,_NLR)\n    traversal, going from a node to its first child or, if the\n    current node is empty or `enter` is false, its next sibling or\n    the next sibling of the first parent node that has one.\n    */\n    next(enter = true) { return this.move(1, enter); }\n    /**\n    Move to the next node in a last-to-first pre-order traveral. A\n    node is followed by its last child or, if it has none, its\n    previous sibling or the previous sibling of the first parent\n    node that has one.\n    */\n    prev(enter = true) { return this.move(-1, enter); }\n    /**\n    Move the cursor to the innermost node that covers `pos`. If\n    `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    it will enter nodes that start at `pos`.\n    */\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /**\n    Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    position.\n    */\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /**\n    Get the [tree](#common.Tree) that represents the current node, if\n    any. Will return null when the node is in a [tree\n    buffer](#common.TreeBuffer).\n    */\n    get tree() {\n        return this.buffer ? null : this._tree._tree;\n    }\n    /**\n    Iterate over the current node and all its descendants, calling\n    `enter` when entering a node and `leave`, if given, when leaving\n    one. When `enter` returns `false`, any children of that node are\n    skipped, and `leave` isn't called for it.\n    */\n    iterate(enter, leave) {\n        for (let depth = 0;;) {\n            let mustLeave = false;\n            if (this.type.isAnonymous || enter(this) !== false) {\n                if (this.firstChild()) {\n                    depth++;\n                    continue;\n                }\n                if (!this.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(this);\n                mustLeave = this.type.isAnonymous;\n                if (this.nextSibling())\n                    break;\n                if (!depth)\n                    return;\n                this.parent();\n                depth--;\n                mustLeave = true;\n            }\n        }\n    }\n    /**\n    Test whether the current node matches a given context—a sequence\n    of direct parent node names. Empty strings in the context array\n    are treated as wildcards.\n    */\n    matchContext(context) {\n        if (!this.buffer)\n            return matchNodeContext(this.node, context);\n        let { buffer } = this.buffer, { types } = buffer.set;\n        for (let i = context.length - 1, d = this.stack.length - 1; i >= 0; d--) {\n            if (d < 0)\n                return matchNodeContext(this.node, context, i);\n            let type = types[buffer.buffer[this.stack[d]]];\n            if (!type.isAnonymous) {\n                if (context[i] && context[i] != type.name)\n                    return false;\n                i--;\n            }\n        }\n        return true;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat, depth) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* SpecialRecord.Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* SpecialRecord.ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* SpecialRecord.LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else if (depth > 2500 /* CutOff.Depth */) {\n                    takeFlatNode(start, endPos, localChildren, localPositions);\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat, depth + 1);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function takeFlatNode(parentStart, minPos, children, positions) {\n        let nodes = []; // Temporary, inverted array of leaf nodes found, with absolute positions\n        let nodeCount = 0, stopAt = -1;\n        while (cursor.pos > minPos) {\n            let { id, start, end, size } = cursor;\n            if (size > 4) { // Not a leaf\n                cursor.next();\n            }\n            else if (stopAt > -1 && start < stopAt) {\n                break;\n            }\n            else {\n                if (stopAt < 0)\n                    stopAt = end - maxBufferLength;\n                nodes.push(id, start, end);\n                nodeCount++;\n                cursor.next();\n            }\n        }\n        if (nodeCount) {\n            let buffer = new Uint16Array(nodeCount * 4);\n            let start = nodes[nodes.length - 2];\n            for (let i = nodes.length - 3, j = 0; i >= 0; i -= 3) {\n                buffer[j++] = nodes[i];\n                buffer[j++] = nodes[i + 1] - start;\n                buffer[j++] = nodes[i + 2] - start;\n                buffer[j++] = j;\n            }\n            children.push(new TreeBuffer(buffer, nodes[2] - start, nodeSet));\n            positions.push(start - parentStart);\n        }\n    }\n    function makeBalanced(type) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead = 0, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* SpecialRecord.ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* SpecialRecord.ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* SpecialRecord.LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1, 0);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* Balance.BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n/**\nProvides a way to associate values with pieces of trees. As long\nas that part of the tree is reused, the associated values can be\nretrieved from an updated tree.\n*/\nclass NodeWeakMap {\n    constructor() {\n        this.map = new WeakMap();\n    }\n    setBuffer(buffer, index, value) {\n        let inner = this.map.get(buffer);\n        if (!inner)\n            this.map.set(buffer, inner = new Map);\n        inner.set(index, value);\n    }\n    getBuffer(buffer, index) {\n        let inner = this.map.get(buffer);\n        return inner && inner.get(index);\n    }\n    /**\n    Set the value for this syntax node.\n    */\n    set(node, value) {\n        if (node instanceof BufferNode)\n            this.setBuffer(node.context.buffer, node.index, value);\n        else if (node instanceof TreeNode)\n            this.map.set(node.tree, value);\n    }\n    /**\n    Retrieve value for this syntax node, if it exists in the map.\n    */\n    get(node) {\n        return node instanceof BufferNode ? this.getBuffer(node.context.buffer, node.index)\n            : node instanceof TreeNode ? this.map.get(node.tree) : undefined;\n    }\n    /**\n    Set the value for the node that a cursor currently points to.\n    */\n    cursorSet(cursor, value) {\n        if (cursor.buffer)\n            this.setBuffer(cursor.buffer.buffer, cursor.index, value);\n        else\n            this.map.set(cursor.tree, value);\n    }\n    /**\n    Retrieve the value for the node that a cursor currently points\n    to.\n    */\n    cursorGet(cursor) {\n        return cursor.buffer ? this.getBuffer(cursor.buffer.buffer, cursor.index) : this.map.get(cursor.tree);\n    }\n}\n\n/**\nTree fragments are used during [incremental\nparsing](#common.Parser.startParse) to track parts of old trees\nthat can be reused in a new parse. An array of fragments is used\nto track regions of an old tree whose nodes might be reused in new\nparses. Use the static\n[`applyChanges`](#common.TreeFragment^applyChanges) method to\nupdate fragments for document changes.\n*/\nclass TreeFragment {\n    /**\n    Construct a tree fragment. You'll usually want to use\n    [`addTree`](#common.TreeFragment^addTree) and\n    [`applyChanges`](#common.TreeFragment^applyChanges) instead of\n    calling this directly.\n    */\n    constructor(\n    /**\n    The start of the unchanged range pointed to by this fragment.\n    This refers to an offset in the _updated_ document (as opposed\n    to the original tree).\n    */\n    from, \n    /**\n    The end of the unchanged range.\n    */\n    to, \n    /**\n    The tree that this fragment is based on.\n    */\n    tree, \n    /**\n    The offset between the fragment's tree and the document that\n    this fragment can be used against. Add this when going from\n    document to tree positions, subtract it to go from tree to\n    document positions.\n    */\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Open.Start */ : 0) | (openEnd ? 2 /* Open.End */ : 0);\n    }\n    /**\n    Whether the start of the fragment represents the start of a\n    parse, or the end of a change. (In the second case, it may not\n    be safe to reuse some nodes at the start, depending on the\n    parsing algorithm.)\n    */\n    get openStart() { return (this.open & 1 /* Open.Start */) > 0; }\n    /**\n    Whether the end of the fragment represents the end of a\n    full-document parse, or the start of a change.\n    */\n    get openEnd() { return (this.open & 2 /* Open.End */) > 0; }\n    /**\n    Create a set of fragments from a freshly parsed tree, or update\n    an existing set of fragments by replacing the ones that overlap\n    with a tree with content from the new tree. When `partial` is\n    true, the parse is treated as incomplete, and the resulting\n    fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    true.\n    */\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /**\n    Apply a set of edits to an array of fragments, removing or\n    splitting fragments as necessary to remove edited ranges, and\n    adjusting offsets for fragments that moved.\n    */\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/**\nA superclass that parsers should extend.\n*/\nclass Parser {\n    /**\n    Start a parse, returning a [partial parse](#common.PartialParse)\n    object. [`fragments`](#common.TreeFragment) can be passed in to\n    make the parse incremental.\n    \n    By default, the entire input is parsed. You can pass `ranges`,\n    which should be a sorted array of non-empty, non-overlapping\n    ranges, to parse only those ranges. The tree returned in that\n    case will start at `ranges[0].from`.\n    */\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /**\n    Run a full parse, returning the resulting tree.\n    */\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/**\nCreate a parse wrapper that, after the inner parse completes,\nscans its tree for mixed language regions with the `nest`\nfunction, runs the resulting [inner parses](#common.NestedParse),\nand then [mounts](#common.NodeProp^mounted) their results onto the\ntree.\n*/\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, from) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.from = from;\n    }\n}\nfunction checkRanges(ranges) {\n    if (!ranges.length || ranges.some(r => r.from >= r.to))\n        throw new RangeError(\"Invalid inner parse ranges given: \" + JSON.stringify(ranges));\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n        scan: for (let nest, isCovered;;) {\n            let enter = true, range;\n            if (this.stoppedAt != null && cursor.from >= this.stoppedAt) {\n                enter = false;\n            }\n            else if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to && !overlay.ranges.some(r => r.from < to && r.to > from))\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Cover.Full */;\n            }\n            else if (!cursor.type.isAnonymous && (nest = this.nest(cursor, this.input)) &&\n                (cursor.from < cursor.to || !nest.overlay)) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay ||\n                        (cursor.from < cursor.to ? [new Range(cursor.from, cursor.to)] : []));\n                    if (ranges.length)\n                        checkRanges(ranges);\n                    if (ranges.length || !nest.overlay)\n                        this.inner.push(new InnerParse(nest.parser, ranges.length ? nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges)\n                            : nest.parser.startParse(\"\"), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges.length ? ranges[0].from : cursor.from));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to)\n                    overlay.ranges.push(range);\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length) {\n                            checkRanges(ranges);\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges[0].from));\n                        }\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Cover.Full */ : 1 /* Cover.Partial */;\n    }\n    return 0 /* Cover.None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1];\n        nodes.push(buf.slice(startI, endI, from));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, stack = [];\n    // Scan up to the nearest tree\n    do {\n        stack.push(cursor.index);\n        cursor.parent();\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let i = 0, base = cursor.tree, off = 0;\n    for (;; i++) {\n        off = base.positions[i] + cursor.from;\n        if (off <= node.from && off + base.children[i].length >= node.to)\n            break;\n    }\n    let buf = base.children[i], b = buf.buffer, newStack = [i];\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length, stackPos) {\n        let targetI = stack[stackPos];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, targetI, children, positions, innerOffset);\n        let from = b[targetI + 1], to = b[targetI + 2];\n        newStack.push(children.length);\n        let child = stackPos\n            ? split(targetI + 4, b[targetI + 3], buf.set.types[b[targetI]], from, to - from, stackPos - 1)\n            : node.toTree();\n        children.push(child);\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[targetI + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length, stack.length - 1);\n    // Move the cursor back to the target node\n    for (let index of newStack) {\n        let tree = cursor.tree.children[index], pos = cursor.tree.positions[index];\n        cursor.yield(new TreeNode(tree, pos + cursor.from, index, cursor._tree));\n    }\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.cursor(IterMode.IncludeAnonymous | IterMode.IgnoreMounts);\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, IterMode.IgnoreOverlays | IterMode.ExcludeBuffers)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos || frag.openStart, frag.to <= end || frag.openEnd));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos || frag.openStart, frag.to <= endPos || frag.openEnd));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, IterMode, MountedTree, NodeProp, NodeSet, NodeType, NodeWeakMap, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { ExternalTokenizer, LRParser, LocalTokenGroup } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst descendantOp = 96,\n  Unit = 1,\n  callee = 97,\n  identifier = 98,\n  VariableName = 2;\n\n/* Hand-written tokenizers for CSS tokens that can't be\n   expressed by Lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,\n               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\nconst colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,\n      hash = 35, percent = 37, ampersand = 38, backslash = 92, newline = 10;\n\nfunction isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }\n\nfunction isDigit(ch) { return ch >= 48 && ch <= 57 }\n\nconst identifiers = new ExternalTokenizer((input, stack) => {\n  for (let inside = false, dashes = 0, i = 0;; i++) {\n    let {next} = input;\n    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {\n      if (!inside && (next != dash || i > 0)) inside = true;\n      if (dashes === i && next == dash) dashes++;\n      input.advance();\n    } else if (next == backslash && input.peek(1) != newline) {\n      input.advance();\n      if (input.next > -1) input.advance();\n      inside = true;\n    } else {\n      if (inside)\n        input.acceptToken(next == parenL ? callee : dashes == 2 && stack.canShift(VariableName) ? VariableName : identifier);\n      break\n    }\n  }\n});\n\nconst descendant = new ExternalTokenizer(input => {\n  if (space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (isAlpha(next) || next == underscore || next == hash || next == period ||\n        next == bracketL || next == colon || next == dash || next == ampersand)\n      input.acceptToken(descendantOp);\n  }\n});\n\nconst unitToken = new ExternalTokenizer(input => {\n  if (!space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (next == percent) { input.advance(); input.acceptToken(Unit); }\n    if (isAlpha(next)) {\n      do { input.advance(); } while (isAlpha(input.next))\n      input.acceptToken(Unit);\n    }\n  }\n});\n\nconst cssHighlighting = styleTags({\n  \"AtKeyword import charset namespace keyframes media supports\": tags.definitionKeyword,\n  \"from to selector\": tags.keyword,\n  NamespaceName: tags.namespace,\n  KeyframeName: tags.labelName,\n  KeyframeRangeName: tags.operatorKeyword,\n  TagName: tags.tagName,\n  ClassName: tags.className,\n  PseudoClassName: tags.constant(tags.className),\n  IdName: tags.labelName,\n  \"FeatureName PropertyName\": tags.propertyName,\n  AttributeName: tags.attributeName,\n  NumberLiteral: tags.number,\n  KeywordQuery: tags.keyword,\n  UnaryQueryOp: tags.operatorKeyword,\n  \"CallTag ValueName\": tags.atom,\n  VariableName: tags.variableName,\n  Callee: tags.operatorKeyword,\n  Unit: tags.unit,\n  \"UniversalSelector NestingSelector\": tags.definitionOperator,\n  MatchOp: tags.compareOperator,\n  \"ChildOp SiblingOp, LogicOp\": tags.logicOperator,\n  BinOp: tags.arithmeticOperator,\n  Important: tags.modifier,\n  Comment: tags.blockComment,\n  ColorLiteral: tags.color,\n  \"ParenthesizedContent StringLiteral\": tags.string,\n  \":\": tags.punctuation,\n  \"PseudoOp #\": tags.derefOperator,\n  \"; ,\": tags.separator,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_callee = {__proto__:null,lang:32, \"nth-child\":32, \"nth-last-child\":32, \"nth-of-type\":32, \"nth-last-of-type\":32, dir:32, \"host-context\":32, url:60, \"url-prefix\":60, domain:60, regexp:60, selector:134};\nconst spec_AtKeyword = {__proto__:null,\"@import\":114, \"@media\":138, \"@charset\":142, \"@namespace\":146, \"@keyframes\":152, \"@supports\":164};\nconst spec_identifier = {__proto__:null,not:128, only:128};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"9bQYQ[OOO#_Q[OOP#fOWOOOOQP'#Cd'#CdOOQP'#Cc'#CcO#kQ[O'#CfO$_QXO'#CaO$fQ[O'#ChO$qQ[O'#DPO$vQ[O'#DTOOQP'#Ej'#EjO${QdO'#DeO%gQ[O'#DrO${QdO'#DtO%xQ[O'#DvO&TQ[O'#DyO&]Q[O'#EPO&kQ[O'#EROOQS'#Ei'#EiOOQS'#EU'#EUQYQ[OOO&rQXO'#CdO'gQWO'#DaO'lQWO'#EpO'wQ[O'#EpQOQWOOP(RO#tO'#C_POOO)C@X)C@XOOQP'#Cg'#CgOOQP,59Q,59QO#kQ[O,59QO(^Q[O'#EXO(xQWO,58{O)QQ[O,59SO$qQ[O,59kO$vQ[O,59oO(^Q[O,59sO(^Q[O,59uO(^Q[O,59vO)]Q[O'#D`OOQS,58{,58{OOQP'#Ck'#CkOOQO'#C}'#C}OOQP,59S,59SO)dQWO,59SO)iQWO,59SOOQP'#DR'#DROOQP,59k,59kOOQO'#DV'#DVO)nQ`O,59oOOQS'#Cp'#CpO${QdO'#CqO)vQvO'#CsO+TQtO,5:POOQO'#Cx'#CxO)iQWO'#CwO+iQWO'#CyOOQS'#Em'#EmOOQO'#Dh'#DhO+nQ[O'#DoO+|QWO'#EqO&]Q[O'#DmO,[QWO'#DpOOQO'#Er'#ErO({QWO,5:^O,aQpO,5:`OOQS'#Dx'#DxO,iQWO,5:bO,nQ[O,5:bOOQO'#D{'#D{O,vQWO,5:eO,{QWO,5:kO-TQWO,5:mOOQS-E8S-E8SO${QdO,59{O-]Q[O'#EZO-jQWO,5;[O-jQWO,5;[POOO'#ET'#ETP-uO#tO,58yPOOO,58y,58yOOQP1G.l1G.lO.lQXO,5:sOOQO-E8V-E8VOOQS1G.g1G.gOOQP1G.n1G.nO)dQWO1G.nO)iQWO1G.nOOQP1G/V1G/VO.yQ`O1G/ZO/dQXO1G/_O/zQXO1G/aO0bQXO1G/bO0xQWO,59zO0}Q[O'#DOO1UQdO'#CoOOQP1G/Z1G/ZO${QdO1G/ZO1]QpO,59]OOQS,59_,59_O${QdO,59aO1eQWO1G/kOOQS,59c,59cO1jQ!bO,59eO1rQWO'#DhO1}QWO,5:TO2SQWO,5:ZO&]Q[O,5:VO&]Q[O'#E[O2[QWO,5;]O2gQWO,5:XO(^Q[O,5:[OOQS1G/x1G/xOOQS1G/z1G/zOOQS1G/|1G/|O2xQWO1G/|O2}QdO'#D|OOQS1G0P1G0POOQS1G0V1G0VOOQS1G0X1G0XO3YQtO1G/gOOQO,5:u,5:uO3pQ[O,5:uOOQO-E8X-E8XO3}QWO1G0vPOOO-E8R-E8RPOOO1G.e1G.eOOQP7+$Y7+$YOOQP7+$u7+$uO${QdO7+$uOOQS1G/f1G/fO4YQXO'#EoO4aQWO,59jO4fQtO'#EVO5ZQdO'#ElO5eQWO,59ZO5jQpO7+$uOOQS1G.w1G.wOOQS1G.{1G.{OOQS7+%V7+%VO5rQWO1G/PO${QdO1G/oOOQO1G/u1G/uOOQO1G/q1G/qO5wQWO,5:vOOQO-E8Y-E8YO6VQXO1G/vOOQS7+%h7+%hO6^QYO'#CsOOQO'#EO'#EOO6iQ`O'#D}OOQO'#D}'#D}O6tQWO'#E]O6|QdO,5:hOOQS,5:h,5:hO7XQtO'#EYO${QdO'#EYO8VQdO7+%ROOQO7+%R7+%ROOQO1G0a1G0aO8jQpO<<HaO8rQWO,5;ZOOQP1G/U1G/UOOQS-E8T-E8TO${QdO'#EWO8zQWO,5;WOOQT1G.u1G.uOOQP<<Ha<<HaOOQS7+$k7+$kO9SQdO7+%ZOOQO7+%b7+%bOOQO,5:i,5:iO3QQdO'#E^O6tQWO,5:wOOQS,5:w,5:wOOQS-E8Z-E8ZOOQS1G0S1G0SO9ZQtO,5:tOOQS-E8W-E8WOOQO<<Hm<<HmOOQPAN={AN={O:XQdO,5:rOOQO-E8U-E8UOOQO<<Hu<<HuOOQO,5:x,5:xOOQO-E8[-E8[OOQS1G0c1G0c\",\n  stateData: \":k~O#WOS#XQQ~OUYOXYO]VO^VOtWOxXO!YaO!ZZO!g[O!i]O!k^O!n_O!t`O#URO#_TO~OQfOUYOXYO]VO^VOtWOxXO!YaO!ZZO!g[O!i]O!k^O!n_O!t`O#UeO#_TO~O#R#dP~P!ZO#XjO~O#UlO~O]qO^qOpoOtrOxsO|tO!PvO#SuO#_nO~O!RwO~P#pO`}O#TzO#UyO~O#U!OO~O#U!QO~OQ!ZOb!TOf!ZOh!ZOn!YO#T!WO#U!SO#b!UO~Ob!]O!b!_O!e!`O#U![O!R#eP~Oh!eOn!YO#U!dO~Oh!gO#U!gO~Ob!]O!b!_O!e!`O#U![O~O!W#eP~P%gO]WX]!UX^WXpWXtWXxWX|WX!PWX!RWX#SWX#_WX~O]!lO~O!W!mO#R#dX!Q#dX~O#R#dX!Q#dX~P!ZO#Y!pO#Z!pO#[!rO~OUYOXYO]VO^VOtWOxXO#URO#_TO~OpoO!RwO~O`!yO#TzO#UyO~O!Q#dP~P!ZOb#QO~Ob#RO~Ov#SOz#TO~OP#VObgXjgX!WgX!bgX!egX#UgXagXQgXfgXhgXngXpgX!VgX#RgX#TgX#bgXvgX!QgX~Ob!]Oj#WO!b!_O!e!`O#U![O!W#eP~Ob#ZO~Ob!]O!b!_O!e!`O#U#[O~Op#`O!`#_O!R#eX!W#eX~Ob#cO~Oj#WO!W#eO~O!W#fO~Oh#gOn!YO~O!R#hO~O!RwO!`#_O~O!RwO!W#kO~O!W!}X#R!}X!Q!}X~P!ZO!W!mO#R#da!Q#da~O#Y!pO#Z!pO#[#rO~O]qO^qOtrOxsO|tO!PvO#SuO#_nO~Op!{a!R!{aa!{a~P.QOv#tOz#uO~O]qO^qOtrOxsO#_nO~Op{i|{i!P{i!R{i#S{ia{i~P/ROp}i|}i!P}i!R}i#S}ia}i~P/ROp!Oi|!Oi!P!Oi!R!Oi#S!Oia!Oi~P/RO!Q#vO~Oa#cP~P(^Oa#`P~P${Oa#}Oj#WO~O!W$PO~Oh$QOo$QO~O]!^Xa![X!`![X~O]$RO~Oa$SO!`#_O~Op#`O!R#ea!W#ea~O!`#_Op!aa!R!aa!W!aaa!aa~O!W$XO~O!Q$`O#U$ZO#b$YO~Oj#WOp$bO!V$dO!W!Ti#R!Ti!Q!Ti~P${O!W!}a#R!}a!Q!}a~P!ZO!W!mO#R#di!Q#di~Oa#cX~P#pOa$hO~Oj#WOQ!yXa!yXb!yXf!yXh!yXn!yXp!yX#T!yX#U!yX#b!yX~Op$jOa#`X~P${Oa$lO~Oj#WOv$mO~Oa$nO~O!`#_Op#Oa!R#Oa!W#Oa~Oa$pO~P.QOP#VOpgX!RgX~O#b$YOp!qX!R!qX~Op$rO!RwO~O!Q$vO#U$ZO#b$YO~Oj#WOQ!|Xb!|Xf!|Xh!|Xn!|Xp!|X!V!|X!W!|X#R!|X#T!|X#U!|X#b!|X!Q!|X~Op$bO!V$yO!W!Tq#R!Tq!Q!Tq~P${Oj#WOv$zO~OpoOa#ca~Op$jOa#`a~Oa$}O~P${Oj#WOQ!|ab!|af!|ah!|an!|ap!|a!V!|a!W!|a#R!|a#T!|a#U!|a#b!|a!Q!|a~Oa!zap!za~P${O#Wo#X#bj!P#b~\",\n  goto: \"-Y#gPPP#hP#kP#t$TP#t$d#tPP$jPPP$p$y$yP%]P$yP$y%w&ZPPP&s&y#tP'PP#tP'VP#tP#t#tPPP']'r(PPP#kPP(W(W(b(WP(WP(W(WP#kP#kP#kP(e#kP(h(k(n(u#kP#kP(z)Q)a)o)u*P*V*a*g*mPPPPPPPPPP*s*|P+i+lP,b,e,k,tRkQ_bOPdhw!m#nkYOPdhotuvw!m#Q#c#nkSOPdhotuvw!m#Q#c#nQmTR!snQ{VR!wqQ!w}Q#Y!XR#s!yq!ZZ]!T!l#R#T#W#l#u#z$R$b$c$j$o${p!ZZ]!T!l#R#T#W#l#u#z$R$b$c$j$o${U$]#h$_$rR$q$[q!XZ]!T!l#R#T#W#l#u#z$R$b$c$j$o${p!ZZ]!T!l#R#T#W#l#u#z$R$b$c$j$o${Q!e^R#g!fQ|VR!xqQ!w|R#s!xQ!PWR!zrQ!RXR!{sQxUQ!vpQ#d!bQ#j!iQ#k!jQ$t$^R%Q$sSgPwQ!ohQ#m!mR$e#nZfPhw!m#na!a[`a!V!]!_#_#`R#]!]R!f^R!h_R#i!hS$^#h$_R%O$rV$[#h$_$rQ!qjR#q!qQdOShPwU!kdh#nR#n!mQ#z#RU$i#z$o${Q$o$RR${$jQ$k#zR$|$kQpUS!up$gR$g#wQ$c#lR$x$cQ!ngS#o!n#pR#p!oQ#a!^R$V#aQ$_#hR$u$_Q$s$^R%P$s_cOPdhw!m#n^UOPdhw!m#nQ!toQ!|tQ!}uQ#OvQ#w#QR$W#cR#{#RQ!VZQ!c]Q#U!TQ#l!l[#y#R#z$R$j$o${Q#|#TQ$O#WS$a#l$cQ$f#uR$w$bR#x#QQiPR#PwQ!b[Q!jaR#X!VU!^[a!VQ!i`Q#^!]Q#b!_Q$T#_R$U#`\",\n  nodeNames: \"⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent , PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList KeyframeSelector KeyframeRangeName SupportsStatement supports AtRule Styles\",\n  maxTerm: 114,\n  nodeProps: [\n    [\"openedBy\", 17,\"(\",48,\"{\"],\n    [\"closedBy\", 18,\")\",49,\"}\"]\n  ],\n  propSources: [cssHighlighting],\n  skippedNodes: [0,3,85],\n  repeatNodeCount: 10,\n  tokenData: \"J^~R!^OX$}X^%u^p$}pq%uqr)Xrs.Rst/utu6duv$}vw7^wx7oxy9^yz9oz{9t{|:_|}?Q}!O?c!O!P@Q!P!Q@i!Q![Ab![!]B]!]!^CX!^!_$}!_!`Cj!`!aC{!a!b$}!b!cDw!c!}$}!}#OFa#O#P$}#P#QFr#Q#R6d#R#T$}#T#UGT#U#c$}#c#dHf#d#o$}#o#pH{#p#q6d#q#rI^#r#sIo#s#y$}#y#z%u#z$f$}$f$g%u$g#BY$}#BY#BZ%u#BZ$IS$}$IS$I_%u$I_$I|$}$I|$JO%u$JO$JT$}$JT$JU%u$JU$KV$}$KV$KW%u$KW&FU$}&FU&FV%u&FV;'S$};'S;=`JW<%lO$}`%QSOy%^z;'S%^;'S;=`%o<%lO%^`%cSo`Oy%^z;'S%^;'S;=`%o<%lO%^`%rP;=`<%l%^~%zh#W~OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^~'mh#W~o`OX%^X^'f^p%^pq'fqy%^z#y%^#y#z'f#z$f%^$f$g'f$g#BY%^#BY#BZ'f#BZ$IS%^$IS$I_'f$I_$I|%^$I|$JO'f$JO$JT%^$JT$JU'f$JU$KV%^$KV$KW'f$KW&FU%^&FU&FV'f&FV;'S%^;'S;=`%o<%lO%^l)[UOy%^z#]%^#]#^)n#^;'S%^;'S;=`%o<%lO%^l)sUo`Oy%^z#a%^#a#b*V#b;'S%^;'S;=`%o<%lO%^l*[Uo`Oy%^z#d%^#d#e*n#e;'S%^;'S;=`%o<%lO%^l*sUo`Oy%^z#c%^#c#d+V#d;'S%^;'S;=`%o<%lO%^l+[Uo`Oy%^z#f%^#f#g+n#g;'S%^;'S;=`%o<%lO%^l+sUo`Oy%^z#h%^#h#i,V#i;'S%^;'S;=`%o<%lO%^l,[Uo`Oy%^z#T%^#T#U,n#U;'S%^;'S;=`%o<%lO%^l,sUo`Oy%^z#b%^#b#c-V#c;'S%^;'S;=`%o<%lO%^l-[Uo`Oy%^z#h%^#h#i-n#i;'S%^;'S;=`%o<%lO%^l-uS!V[o`Oy%^z;'S%^;'S;=`%o<%lO%^~.UWOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o<%lO.R~.sOh~~.vRO;'S.R;'S;=`/P;=`O.R~/SXOY.RZr.Rrs.ns#O.R#O#P.s#P;'S.R;'S;=`/o;=`<%l.R<%lO.R~/rP;=`<%l.Rn/zYtQOy%^z!Q%^!Q![0j![!c%^!c!i0j!i#T%^#T#Z0j#Z;'S%^;'S;=`%o<%lO%^l0oYo`Oy%^z!Q%^!Q![1_![!c%^!c!i1_!i#T%^#T#Z1_#Z;'S%^;'S;=`%o<%lO%^l1dYo`Oy%^z!Q%^!Q![2S![!c%^!c!i2S!i#T%^#T#Z2S#Z;'S%^;'S;=`%o<%lO%^l2ZYf[o`Oy%^z!Q%^!Q![2y![!c%^!c!i2y!i#T%^#T#Z2y#Z;'S%^;'S;=`%o<%lO%^l3QYf[o`Oy%^z!Q%^!Q![3p![!c%^!c!i3p!i#T%^#T#Z3p#Z;'S%^;'S;=`%o<%lO%^l3uYo`Oy%^z!Q%^!Q![4e![!c%^!c!i4e!i#T%^#T#Z4e#Z;'S%^;'S;=`%o<%lO%^l4lYf[o`Oy%^z!Q%^!Q![5[![!c%^!c!i5[!i#T%^#T#Z5[#Z;'S%^;'S;=`%o<%lO%^l5aYo`Oy%^z!Q%^!Q![6P![!c%^!c!i6P!i#T%^#T#Z6P#Z;'S%^;'S;=`%o<%lO%^l6WSf[o`Oy%^z;'S%^;'S;=`%o<%lO%^d6gUOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^d7QSzSo`Oy%^z;'S%^;'S;=`%o<%lO%^b7cSXQOy%^z;'S%^;'S;=`%o<%lO%^~7rWOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W<%lO7o~8_RO;'S7o;'S;=`8h;=`O7o~8kXOY7oZw7owx.nx#O7o#O#P8[#P;'S7o;'S;=`9W;=`<%l7o<%lO7o~9ZP;=`<%l7on9cSb^Oy%^z;'S%^;'S;=`%o<%lO%^~9tOa~n9{UUQjWOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^n:fWjW!PQOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^l;TUo`Oy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^l;nYo`#b[Oy%^z!Q%^!Q![;g![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^l<cYo`Oy%^z{%^{|=R|}%^}!O=R!O!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=WUo`Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l=qUo`#b[Oy%^z!Q%^!Q![=j![;'S%^;'S;=`%o<%lO%^l>[[o`#b[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^n?VSp^Oy%^z;'S%^;'S;=`%o<%lO%^l?hWjWOy%^z!O%^!O!P;O!P!Q%^!Q![>T![;'S%^;'S;=`%o<%lO%^n@VU#_QOy%^z!Q%^!Q![;g![;'S%^;'S;=`%o<%lO%^~@nTjWOy%^z{@}{;'S%^;'S;=`%o<%lO%^~AUSo`#X~Oy%^z;'S%^;'S;=`%o<%lO%^lAg[#b[Oy%^z!O%^!O!P;g!P!Q%^!Q![>T![!g%^!g!h<^!h#X%^#X#Y<^#Y;'S%^;'S;=`%o<%lO%^bBbU]QOy%^z![%^![!]Bt!];'S%^;'S;=`%o<%lO%^bB{S^Qo`Oy%^z;'S%^;'S;=`%o<%lO%^nC^S!W^Oy%^z;'S%^;'S;=`%o<%lO%^dCoSzSOy%^z;'S%^;'S;=`%o<%lO%^bDQU|QOy%^z!`%^!`!aDd!a;'S%^;'S;=`%o<%lO%^bDkS|Qo`Oy%^z;'S%^;'S;=`%o<%lO%^bDzWOy%^z!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^bEk[!YQo`Oy%^z}%^}!OEd!O!Q%^!Q![Ed![!c%^!c!}Ed!}#T%^#T#oEd#o;'S%^;'S;=`%o<%lO%^bFfSxQOy%^z;'S%^;'S;=`%o<%lO%^lFwSv[Oy%^z;'S%^;'S;=`%o<%lO%^bGWUOy%^z#b%^#b#cGj#c;'S%^;'S;=`%o<%lO%^bGoUo`Oy%^z#W%^#W#XHR#X;'S%^;'S;=`%o<%lO%^bHYS!`Qo`Oy%^z;'S%^;'S;=`%o<%lO%^bHiUOy%^z#f%^#f#gHR#g;'S%^;'S;=`%o<%lO%^fIQS!RUOy%^z;'S%^;'S;=`%o<%lO%^nIcS!Q^Oy%^z;'S%^;'S;=`%o<%lO%^fItU!PQOy%^z!_%^!_!`6y!`;'S%^;'S;=`%o<%lO%^`JZP;=`<%l$}\",\n  tokenizers: [descendant, unitToken, identifiers, 1, 2, 3, 4, new LocalTokenGroup(\"m~RRYZ[z{a~~g~aO#Z~~dP!P!Qg~lO#[~~\", 28, 102)],\n  topRules: {\"StyleSheet\":[0,4],\"Styles\":[1,84]},\n  specialized: [{term: 97, get: (value) => spec_callee[value] || -1},{term: 56, get: (value) => spec_AtKeyword[value] || -1},{term: 98, get: (value) => spec_identifier[value] || -1}],\n  tokenPrec: 1169\n});\n\nexport { parser };\n","import { NodeProp } from '@lezer/common';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlighter](#highlight.Highlighter).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The set of this tag and all its parent tags, starting with\n    this one itself and sorted in order of decreasing specificity.\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    /**\n    Define a new tag. If `parent` is given, the tag is treated as a\n    sub-tag of that parent, and\n    [highlighters](#highlight.tagHighlighter) that don't mention\n    this tag will try to fall back to the parent tag (or grandparent\n    tag, etc).\n    */\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = powerSet(mods);\n        for (let parent of base.set)\n            if (!parent.modified.length)\n                for (let config of configs)\n                    set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction powerSet(array) {\n    let sets = [[]];\n    for (let i = 0; i < array.length; i++) {\n        for (let j = 0, e = sets.length; j < e; j++) {\n            sets.push(sets[j].concat(array[i]));\n        }\n    }\n    return sets.sort((a, b) => b.length - a.length);\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia [`NodeSet.extend`](#common.NodeSet.extend) or\n[`LRParser.configure`](#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node name](#common.NodeType.name), or\nmultiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Mode.Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Mode.Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? \"\" : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Mode.Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = new NodeProp();\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    get opaque() { return this.mode == 0 /* Mode.Opaque */; }\n    get inherit() { return this.mode == 1 /* Mode.Inherit */; }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\nRule.empty = new Rule([], 2 /* Mode.Normal */, null);\n/**\nDefine a [highlighter](#highlight.Highlighter) from an array of\ntag/class pairs. Classes associated with more specific tags will\ntake precedence.\n*/\nfunction tagHighlighter(tags, options) {\n    let map = Object.create(null);\n    for (let style of tags) {\n        if (!Array.isArray(style.tag))\n            map[style.tag.id] = style.class;\n        else\n            for (let tag of style.tag)\n                map[tag.id] = style.class;\n    }\n    let { scope, all = null } = options || {};\n    return {\n        style: (tags) => {\n            let cls = all;\n            for (let tag of tags) {\n                for (let sub of tag.set) {\n                    let tagClass = map[sub.id];\n                    if (tagClass) {\n                        cls = cls ? cls + \" \" + tagClass : tagClass;\n                        break;\n                    }\n                }\n            }\n            return cls;\n        },\n        scope\n    };\n}\nfunction highlightTags(highlighters, tags) {\n    let result = null;\n    for (let highlighter of highlighters) {\n        let value = highlighter.style(tags);\n        if (value)\n            result = result ? result + \" \" + value : value;\n    }\n    return result;\n}\n/**\nHighlight the given [tree](#common.Tree) with the given\n[highlighter](#highlight.Highlighter). Often, the higher-level\n[`highlightCode`](#highlight.highlightCode) function is easier to\nuse.\n*/\nfunction highlightTree(tree, highlighter, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    let builder = new HighlightBuilder(from, Array.isArray(highlighter) ? highlighter : [highlighter], putStyle);\n    builder.highlightRange(tree.cursor(), from, to, \"\", builder.highlighters);\n    builder.flush(to);\n}\n/**\nHighlight the given tree with the given highlighter, calling\n`putText` for every piece of text, either with a set of classes or\nwith the empty string when unstyled, and `putBreak` for every line\nbreak.\n*/\nfunction highlightCode(code, tree, highlighter, putText, putBreak, from = 0, to = code.length) {\n    let pos = from;\n    function writeTo(p, classes) {\n        if (p <= pos)\n            return;\n        for (let text = code.slice(pos, p), i = 0;;) {\n            let nextBreak = text.indexOf(\"\\n\", i);\n            let upto = nextBreak < 0 ? text.length : nextBreak;\n            if (upto > i)\n                putText(text.slice(i, upto), classes);\n            if (nextBreak < 0)\n                break;\n            putBreak();\n            i = nextBreak + 1;\n        }\n        pos = p;\n    }\n    highlightTree(tree, highlighter, (from, to, classes) => {\n        writeTo(from, \"\");\n        writeTo(to, classes);\n    }, from, to);\n    writeTo(to, \"\");\n}\nclass HighlightBuilder {\n    constructor(at, highlighters, span) {\n        this.at = at;\n        this.highlighters = highlighters;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, highlighters) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        if (type.isTop)\n            highlighters = this.highlighters.filter(h => !h.scope || h.scope(type));\n        let cls = inheritedClass;\n        let rule = getStyleTags(cursor) || Rule.empty;\n        let tagCls = highlightTags(highlighters, rule.tags);\n        if (tagCls) {\n            if (cls)\n                cls += \" \";\n            cls += tagCls;\n            if (rule.mode == 1 /* Mode.Inherit */)\n                inheritedClass += (inheritedClass ? \" \" : \"\") + tagCls;\n        }\n        this.startSpan(Math.max(from, start), cls);\n        if (rule.opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let innerHighlighters = this.highlighters.filter(h => !h.scope || h.scope(mounted.tree.type));\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, highlighters);\n                        this.startSpan(Math.min(rangeTo, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor(), Math.max(from, next.from + start), Math.min(to, pos), \"\", innerHighlighters);\n                    this.startSpan(Math.min(to, pos), cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            if (mounted)\n                inheritedClass = \"\";\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, highlighters);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\n/**\nMatch a syntax node's [highlight rules](#highlight.styleTags). If\nthere's a match, return its set of tags, and whether it is\nopaque (uses a `!`) or applies to all child nodes (`/...`).\n*/\nfunction getStyleTags(node) {\n    let rule = node.type.prop(ruleNodeProp);\n    while (rule && rule.context && !node.matchContext(rule.context))\n        rule = rule.next;\n    return rule || null;\n}\nconst t = Tag.define;\nconst comment = t(), name = t(), typeName = t(name), propertyName = t(name), literal = t(), string = t(literal), number = t(literal), content = t(), heading = t(content), keyword = t(), operator = t(), punctuation = t(), bracket = t(punctuation), meta = t();\n/**\nThe default set of highlighting [tags](#highlight.Tag).\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](#highlight.tags.comment).\n    */\n    lineComment: t(comment),\n    /**\n    A block [comment](#highlight.tags.comment).\n    */\n    blockComment: t(comment),\n    /**\n    A documentation [comment](#highlight.tags.comment).\n    */\n    docComment: t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](#highlight.tags.name) of a variable.\n    */\n    variableName: t(name),\n    /**\n    A type [name](#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](#highlight.tags.typeName)).\n    */\n    tagName: t(typeName),\n    /**\n    A property or field [name](#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](#highlight.tags.propertyName)).\n    */\n    attributeName: t(propertyName),\n    /**\n    The [name](#highlight.tags.name) of a class.\n    */\n    className: t(name),\n    /**\n    A label [name](#highlight.tags.name).\n    */\n    labelName: t(name),\n    /**\n    A namespace [name](#highlight.tags.name).\n    */\n    namespace: t(name),\n    /**\n    The [name](#highlight.tags.name) of a macro.\n    */\n    macroName: t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](#highlight.tags.string).\n    */\n    docString: t(string),\n    /**\n    A character literal (subtag of [string](#highlight.tags.string)).\n    */\n    character: t(string),\n    /**\n    An attribute value (subtag of [string](#highlight.tags.string)).\n    */\n    attributeValue: t(string),\n    /**\n    A number [literal](#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](#highlight.tags.number) literal.\n    */\n    integer: t(number),\n    /**\n    A floating-point [number](#highlight.tags.number) literal.\n    */\n    float: t(number),\n    /**\n    A boolean [literal](#highlight.tags.literal).\n    */\n    bool: t(literal),\n    /**\n    Regular expression [literal](#highlight.tags.literal).\n    */\n    regexp: t(literal),\n    /**\n    An escape [literal](#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: t(literal),\n    /**\n    A color [literal](#highlight.tags.literal).\n    */\n    color: t(literal),\n    /**\n    A URL [literal](#highlight.tags.literal).\n    */\n    url: t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: t(keyword),\n    /**\n    The [keyword](#highlight.tags.keyword) for null.\n    */\n    null: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that represents a unit.\n    */\n    unit: t(keyword),\n    /**\n    A modifier [keyword](#highlight.tags.keyword).\n    */\n    modifier: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: t(keyword),\n    /**\n    A control-flow related [keyword](#highlight.tags.keyword).\n    */\n    controlKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: t(keyword),\n    /**\n    A [keyword](#highlight.tags.keyword) related to defining or\n    interfacing with modules.\n    */\n    moduleKeyword: t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](#highlight.tags.operator) that dereferences something.\n    */\n    derefOperator: t(operator),\n    /**\n    Arithmetic-related [operator](#highlight.tags.operator).\n    */\n    arithmeticOperator: t(operator),\n    /**\n    Logical [operator](#highlight.tags.operator).\n    */\n    logicOperator: t(operator),\n    /**\n    Bit [operator](#highlight.tags.operator).\n    */\n    bitwiseOperator: t(operator),\n    /**\n    Comparison [operator](#highlight.tags.operator).\n    */\n    compareOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: t(operator),\n    /**\n    [Operator](#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: t(operator),\n    /**\n    Type-related [operator](#highlight.tags.operator).\n    */\n    typeOperator: t(operator),\n    /**\n    Control-flow [operator](#highlight.tags.operator).\n    */\n    controlOperator: t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: t(punctuation),\n    /**\n    Bracket-style [punctuation](#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: t(bracket),\n    /**\n    Square [brackets](#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    paren: t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](#highlight.tags.bracket).\n    */\n    brace: t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](#highlight.tags.heading).\n    */\n    heading1: t(heading),\n    /**\n    A level 2 [heading](#highlight.tags.heading).\n    */\n    heading2: t(heading),\n    /**\n    A level 3 [heading](#highlight.tags.heading).\n    */\n    heading3: t(heading),\n    /**\n    A level 4 [heading](#highlight.tags.heading).\n    */\n    heading4: t(heading),\n    /**\n    A level 5 [heading](#highlight.tags.heading).\n    */\n    heading5: t(heading),\n    /**\n    A level 6 [heading](#highlight.tags.heading).\n    */\n    heading6: t(heading),\n    /**\n    A prose separator (such as a horizontal rule).\n    */\n    contentSeparator: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a list.\n    */\n    list: t(content),\n    /**\n    [Content](#highlight.tags.content) that represents a quote.\n    */\n    quote: t(content),\n    /**\n    [Content](#highlight.tags.content) that is emphasized.\n    */\n    emphasis: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled strong.\n    */\n    strong: t(content),\n    /**\n    [Content](#highlight.tags.content) that is part of a link.\n    */\n    link: t(content),\n    /**\n    [Content](#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: t(content),\n    /**\n    [Content](#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: t(),\n    /**\n    Deleted text.\n    */\n    deleted: t(),\n    /**\n    Changed text.\n    */\n    changed: t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: t(meta),\n    /**\n    [Metadata](#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](#highlight.tags.meta).\n    */\n    processingInstruction: t(meta),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](#highlight.tags.name) tags.\n    */\n    definition: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](#highlight.tags.variableName).\n    */\n    constant: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) used to indicate that\n    a [variable](#highlight.tags.variableName) or [property\n    name](#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that can be applied to\n    [names](#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: Tag.defineModifier(),\n    /**\n    [Modifier](#highlight.Tag^defineModifier) that indicates a given\n    [names](#highlight.tags.name) is local to some scope.\n    */\n    local: Tag.defineModifier(),\n    /**\n    A generic variant [modifier](#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](#highlight.tags.string) and\n    [variable name](#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: Tag.defineModifier()\n};\n/**\nThis is a highlighter that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThe following tags are mapped to their name prefixed with `\"tok-\"`\n(for example `\"tok-comment\"`):\n\n* [`link`](#highlight.tags.link)\n* [`heading`](#highlight.tags.heading)\n* [`emphasis`](#highlight.tags.emphasis)\n* [`strong`](#highlight.tags.strong)\n* [`keyword`](#highlight.tags.keyword)\n* [`atom`](#highlight.tags.atom)\n* [`bool`](#highlight.tags.bool)\n* [`url`](#highlight.tags.url)\n* [`labelName`](#highlight.tags.labelName)\n* [`inserted`](#highlight.tags.inserted)\n* [`deleted`](#highlight.tags.deleted)\n* [`literal`](#highlight.tags.literal)\n* [`string`](#highlight.tags.string)\n* [`number`](#highlight.tags.number)\n* [`variableName`](#highlight.tags.variableName)\n* [`typeName`](#highlight.tags.typeName)\n* [`namespace`](#highlight.tags.namespace)\n* [`className`](#highlight.tags.className)\n* [`macroName`](#highlight.tags.macroName)\n* [`propertyName`](#highlight.tags.propertyName)\n* [`operator`](#highlight.tags.operator)\n* [`comment`](#highlight.tags.comment)\n* [`meta`](#highlight.tags.meta)\n* [`punctuation`](#highlight.tags.punctuation)\n* [`invalid`](#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](#highlight.tags.regexp),\n  [`escape`](#highlight.tags.escape), and\n  [`special`](#highlight.tags.special)[`(string)`](#highlight.tags.string)\n  are mapped to `\"tok-string2\"`\n* [`special`](#highlight.tags.special)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName2\"`\n* [`local`](#highlight.tags.local)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-local\"`\n* [`definition`](#highlight.tags.definition)[`(variableName)`](#highlight.tags.variableName)\n  to `\"tok-variableName tok-definition\"`\n* [`definition`](#highlight.tags.definition)[`(propertyName)`](#highlight.tags.propertyName)\n  to `\"tok-propertyName tok-definition\"`\n*/\nconst classHighlighter = tagHighlighter([\n    { tag: tags.link, class: \"tok-link\" },\n    { tag: tags.heading, class: \"tok-heading\" },\n    { tag: tags.emphasis, class: \"tok-emphasis\" },\n    { tag: tags.strong, class: \"tok-strong\" },\n    { tag: tags.keyword, class: \"tok-keyword\" },\n    { tag: tags.atom, class: \"tok-atom\" },\n    { tag: tags.bool, class: \"tok-bool\" },\n    { tag: tags.url, class: \"tok-url\" },\n    { tag: tags.labelName, class: \"tok-labelName\" },\n    { tag: tags.inserted, class: \"tok-inserted\" },\n    { tag: tags.deleted, class: \"tok-deleted\" },\n    { tag: tags.literal, class: \"tok-literal\" },\n    { tag: tags.string, class: \"tok-string\" },\n    { tag: tags.number, class: \"tok-number\" },\n    { tag: [tags.regexp, tags.escape, tags.special(tags.string)], class: \"tok-string2\" },\n    { tag: tags.variableName, class: \"tok-variableName\" },\n    { tag: tags.local(tags.variableName), class: \"tok-variableName tok-local\" },\n    { tag: tags.definition(tags.variableName), class: \"tok-variableName tok-definition\" },\n    { tag: tags.special(tags.variableName), class: \"tok-variableName2\" },\n    { tag: tags.definition(tags.propertyName), class: \"tok-propertyName tok-definition\" },\n    { tag: tags.typeName, class: \"tok-typeName\" },\n    { tag: tags.namespace, class: \"tok-namespace\" },\n    { tag: tags.className, class: \"tok-className\" },\n    { tag: tags.macroName, class: \"tok-macroName\" },\n    { tag: tags.propertyName, class: \"tok-propertyName\" },\n    { tag: tags.operator, class: \"tok-operator\" },\n    { tag: tags.comment, class: \"tok-comment\" },\n    { tag: tags.meta, class: \"tok-meta\" },\n    { tag: tags.invalid, class: \"tok-invalid\" },\n    { tag: tags.punctuation, class: \"tok-punctuation\" }\n]);\n\nexport { Tag, classHighlighter, getStyleTags, highlightCode, highlightTree, styleTags, tagHighlighter, tags };\n","import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\nimport { parseMixed } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst scriptText = 54,\n  StartCloseScriptTag = 1,\n  styleText = 55,\n  StartCloseStyleTag = 2,\n  textareaText = 56,\n  StartCloseTextareaTag = 3,\n  EndTag = 4,\n  SelfClosingEndTag = 5,\n  StartTag = 6,\n  StartScriptTag = 7,\n  StartStyleTag = 8,\n  StartTextareaTag = 9,\n  StartSelfClosingTag = 10,\n  StartCloseTag = 11,\n  NoMatchStartCloseTag = 12,\n  MismatchedStartCloseTag = 13,\n  missingCloseTag = 57,\n  IncompleteCloseTag = 14,\n  commentContent$1 = 58,\n  Element = 20,\n  TagName = 22,\n  Attribute = 23,\n  AttributeName = 24,\n  AttributeValue = 26,\n  UnquotedAttributeValue = 27,\n  ScriptText = 28,\n  StyleText = 31,\n  TextareaText = 34,\n  OpenTag = 36,\n  CloseTag = 37,\n  Dialect_noMatch = 0,\n  Dialect_selfClosing = 1;\n\n/* Hand-written tokenizers for HTML. */\n\nconst selfClosers = {\n  area: true, base: true, br: true, col: true, command: true,\n  embed: true, frame: true, hr: true, img: true, input: true,\n  keygen: true, link: true, meta: true, param: true, source: true,\n  track: true, wbr: true, menuitem: true\n};\n\nconst implicitlyClosed = {\n  dd: true, li: true, optgroup: true, option: true, p: true,\n  rp: true, rt: true, tbody: true, td: true, tfoot: true,\n  th: true, tr: true\n};\n\nconst closeOnOpen = {\n  dd: {dd: true, dt: true},\n  dt: {dd: true, dt: true},\n  li: {li: true},\n  option: {option: true, optgroup: true},\n  optgroup: {optgroup: true},\n  p: {\n    address: true, article: true, aside: true, blockquote: true, dir: true,\n    div: true, dl: true, fieldset: true, footer: true, form: true,\n    h1: true, h2: true, h3: true, h4: true, h5: true, h6: true,\n    header: true, hgroup: true, hr: true, menu: true, nav: true, ol: true,\n    p: true, pre: true, section: true, table: true, ul: true\n  },\n  rp: {rp: true, rt: true},\n  rt: {rp: true, rt: true},\n  tbody: {tbody: true, tfoot: true},\n  td: {td: true, th: true},\n  tfoot: {tbody: true},\n  th: {td: true, th: true},\n  thead: {tbody: true, tfoot: true},\n  tr: {tr: true}\n};\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedPos == pos && cachedInput == input) return cachedName\n  let next = input.peek(offset);\n  while (isSpace(next)) next = input.peek(++offset);\n  let name = \"\";\n  for (;;) {\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    next = input.peek(++offset);\n  }\n  // Undefined to signal there's a <? or <!, null for just missing\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name ? name.toLowerCase() : next == question || next == bang ? undefined : null\n}\n\nconst lessThan = 60, greaterThan = 62, slash = 47, question = 63, bang = 33, dash = 45;\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst startTagTerms = [StartTag, StartSelfClosingTag, StartScriptTag, StartStyleTag, StartTextareaTag];\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return startTagTerms.indexOf(term) > -1 ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst tagStart = new ExternalTokenizer((input, stack) => {\n  if (input.next != lessThan) {\n    // End of file, close any open tags\n    if (input.next < 0 && stack.context) input.acceptToken(missingCloseTag);\n    return\n  }\n  input.advance();\n  let close = input.next == slash;\n  if (close) input.advance();\n  let name = tagNameAfter(input, 0);\n  if (name === undefined) return\n  if (!name) return input.acceptToken(close ? IncompleteCloseTag : StartTag)\n\n  let parent = stack.context ? stack.context.name : null;\n  if (close) {\n    if (name == parent) return input.acceptToken(StartCloseTag)\n    if (parent && implicitlyClosed[parent]) return input.acceptToken(missingCloseTag, -2)\n    if (stack.dialectEnabled(Dialect_noMatch)) return input.acceptToken(NoMatchStartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return\n    input.acceptToken(MismatchedStartCloseTag);\n  } else {\n    if (name == \"script\") return input.acceptToken(StartScriptTag)\n    if (name == \"style\") return input.acceptToken(StartStyleTag)\n    if (name == \"textarea\") return input.acceptToken(StartTextareaTag)\n    if (selfClosers.hasOwnProperty(name)) return input.acceptToken(StartSelfClosingTag)\n    if (parent && closeOnOpen[parent] && closeOnOpen[parent][name]) input.acceptToken(missingCloseTag, -1);\n    else input.acceptToken(StartTag);\n  }\n}, {contextual: true});\n\nconst commentContent = new ExternalTokenizer(input => {\n  for (let dashes = 0, i = 0;; i++) {\n    if (input.next < 0) {\n      if (i) input.acceptToken(commentContent$1);\n      break\n    }\n    if (input.next == dash) {\n      dashes++;\n    } else if (input.next == greaterThan && dashes >= 2) {\n      if (i >= 3) input.acceptToken(commentContent$1, -2);\n      break\n    } else {\n      dashes = 0;\n    }\n    input.advance();\n  }\n});\n\nfunction inForeignElement(context) {\n  for (; context; context = context.parent)\n    if (context.name == \"svg\" || context.name == \"math\") return true\n  return false\n}\n\nconst endTag = new ExternalTokenizer((input, stack) => {\n  if (input.next == slash && input.peek(1) == greaterThan) {\n    let selfClosing = stack.dialectEnabled(Dialect_selfClosing) || inForeignElement(stack.context);\n    input.acceptToken(selfClosing ? SelfClosingEndTag : EndTag, 2);\n  } else if (input.next == greaterThan) {\n    input.acceptToken(EndTag, 1);\n  }\n});\n\nfunction contentTokenizer(tag, textToken, endToken) {\n  let lastState = 2 + tag.length;\n  return new ExternalTokenizer(input => {\n    // state means:\n    // - 0 nothing matched\n    // - 1 '<' matched\n    // - 2 '</' + possibly whitespace matched\n    // - 3-(1+tag.length) part of the tag matched\n    // - lastState whole tag + possibly whitespace matched\n    for (let state = 0, matchedLen = 0, i = 0;; i++) {\n      if (input.next < 0) {\n        if (i) input.acceptToken(textToken);\n        break\n      }\n      if (state == 0 && input.next == lessThan ||\n          state == 1 && input.next == slash ||\n          state >= 2 && state < lastState && input.next == tag.charCodeAt(state - 2)) {\n        state++;\n        matchedLen++;\n      } else if ((state == 2 || state == lastState) && isSpace(input.next)) {\n        matchedLen++;\n      } else if (state == lastState && input.next == greaterThan) {\n        if (i > matchedLen)\n          input.acceptToken(textToken, -matchedLen);\n        else\n          input.acceptToken(endToken, -(matchedLen - 2));\n        break\n      } else if ((input.next == 10 /* '\\n' */ || input.next == 13 /* '\\r' */) && i) {\n        input.acceptToken(textToken, 1);\n        break\n      } else {\n        state = matchedLen = 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst scriptTokens = contentTokenizer(\"script\", scriptText, StartCloseScriptTag);\n\nconst styleTokens = contentTokenizer(\"style\", styleText, StartCloseStyleTag);\n\nconst textareaTokens = contentTokenizer(\"textarea\", textareaText, StartCloseTextareaTag);\n\nconst htmlHighlighting = styleTags({\n  \"Text RawText\": tags.content,\n  \"StartTag StartCloseTag SelfClosingEndTag EndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/TagName\": [tags.tagName,  tags.invalid],\n  AttributeName: tags.attributeName,\n  \"AttributeValue UnquotedAttributeValue\": tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",xOVO!rOOO!WQ#tO'#CqO!]Q#tO'#CzO!bQ#tO'#C}O!gQ#tO'#DQO!lQ#tO'#DSO!qOaO'#CpO!|ObO'#CpO#XOdO'#CpO$eO!rO'#CpOOO`'#Cp'#CpO$lO$fO'#DTO$tQ#tO'#DVO$yQ#tO'#DWOOO`'#Dk'#DkOOO`'#DY'#DYQVO!rOOO%OQ&rO,59]O%WQ&rO,59fO%`Q&rO,59iO%hQ&rO,59lO%sQ&rO,59nOOOa'#D^'#D^O%{OaO'#CxO&WOaO,59[OOOb'#D_'#D_O&`ObO'#C{O&kObO,59[OOOd'#D`'#D`O&sOdO'#DOO'OOdO,59[OOO`'#Da'#DaO'WO!rO,59[O'_Q#tO'#DROOO`,59[,59[OOOp'#Db'#DbO'dO$fO,59oOOO`,59o,59oO'lQ#|O,59qO'qQ#|O,59rOOO`-E7W-E7WO'vQ&rO'#CsOOQW'#DZ'#DZO(UQ&rO1G.wOOOa1G.w1G.wO(^Q&rO1G/QOOOb1G/Q1G/QO(fQ&rO1G/TOOOd1G/T1G/TO(nQ&rO1G/WOOO`1G/W1G/WOOO`1G/Y1G/YO(yQ&rO1G/YOOOa-E7[-E7[O)RQ#tO'#CyOOO`1G.v1G.vOOOb-E7]-E7]O)WQ#tO'#C|OOOd-E7^-E7^O)]Q#tO'#DPOOO`-E7_-E7_O)bQ#|O,59mOOOp-E7`-E7`OOO`1G/Z1G/ZOOO`1G/]1G/]OOO`1G/^1G/^O)gQ,UO,59_OOQW-E7X-E7XOOOa7+$c7+$cOOOb7+$l7+$lOOOd7+$o7+$oOOO`7+$r7+$rOOO`7+$t7+$tO)rQ#|O,59eO)wQ#|O,59hO)|Q#|O,59kOOO`1G/X1G/XO*RO7[O'#CvO*dOMhO'#CvOOQW1G.y1G.yOOO`1G/P1G/POOO`1G/S1G/SOOO`1G/V1G/VOOOO'#D['#D[O*uO7[O,59bOOQW,59b,59bOOOO'#D]'#D]O+WOMhO,59bOOOO-E7Y-E7YOOQW1G.|1G.|OOOO-E7Z-E7Z\",\n  stateData: \"+s~O!^OS~OUSOVPOWQOXROYTO[]O][O^^O`^Oa^Ob^Oc^Ox^O{_O!dZO~OfaO~OfbO~OfcO~OfdO~OfeO~O!WfOPlP!ZlP~O!XiOQoP!ZoP~O!YlORrP!ZrP~OUSOVPOWQOXROYTOZqO[]O][O^^O`^Oa^Ob^Oc^Ox^O!dZO~O!ZrO~P#dO![sO!euO~OfvO~OfwO~OS|OhyO~OS!OOhyO~OS!QOhyO~OS!SOT!TOhyO~OS!TOhyO~O!WfOPlX!ZlX~OP!WO!Z!XO~O!XiOQoX!ZoX~OQ!ZO!Z!XO~O!YlORrX!ZrX~OR!]O!Z!XO~O!Z!XO~P#dOf!_O~O![sO!e!aO~OS!bO~OS!cO~Oi!dOSgXhgXTgX~OS!fOhyO~OS!gOhyO~OS!hOhyO~OS!iOT!jOhyO~OS!jOhyO~Of!kO~Of!lO~Of!mO~OS!nO~Ok!qO!`!oO!b!pO~OS!rO~OS!sO~OS!tO~Oa!uOb!uOc!uO!`!wO!a!uO~Oa!xOb!xOc!xO!b!wO!c!xO~Oa!uOb!uOc!uO!`!{O!a!uO~Oa!xOb!xOc!xO!b!{O!c!xO~OT~bac!dx{!d~\",\n  goto: \"%p!`PPPPPPPPPPPPPPPPPPPP!a!gP!mPP!yP!|#P#S#Y#]#`#f#i#l#r#x!aP!a!aP$O$U$l$r$x%O%U%[%bPPPPPPPP%hX^OX`pXUOX`pezabcde{}!P!R!UR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ}bQ!PcQ!RdQ!UeZ!e{}!P!R!UQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp\",\n  nodeNames: \"⚠ StartCloseTag StartCloseTag StartCloseTag EndTag SelfClosingEndTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl\",\n  maxTerm: 67,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", -10,1,2,3,7,8,9,10,11,12,13,\"EndTag\",6,\"EndTag SelfClosingEndTag\",-4,21,30,33,36,\"CloseTag\"],\n    [\"openedBy\", 4,\"StartTag StartCloseTag\",5,\"StartTag\",-4,29,32,35,37,\"OpenTag\"],\n    [\"group\", -9,14,17,18,19,20,39,40,41,42,\"Entity\",16,\"Entity TextContent\",-3,28,31,34,\"TextContent Entity\"]\n  ],\n  propSources: [htmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 9,\n  tokenData: \"!<p!aR!YOX$qXY,QYZ,QZ[$q[]&X]^,Q^p$qpq,Qqr-_rs3_sv-_vw3}wxHYx}-_}!OH{!O!P-_!P!Q$q!Q![-_![!]Mz!]!^-_!^!_!$S!_!`!;x!`!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4U-_4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!Z$|c`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr$qrs&}sv$qvw+Pwx(tx!^$q!^!_*V!_!a&X!a#S$q#S#T&X#T;'S$q;'S;=`+z<%lO$q!R&bX`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&Xq'UV`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}P'pT`POv'kw!^'k!_;'S'k;'S;=`(P<%lO'kP(SP;=`<%l'kp([S!cpOv(Vx;'S(V;'S;=`(h<%lO(Vp(kP;=`<%l(Vq(qP;=`<%l&}a({W`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t`)jT!a`Or)esv)ew;'S)e;'S;=`)y<%lO)e`)|P;=`<%l)ea*SP;=`<%l(t!Q*^V!a`!cpOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!Q*vP;=`<%l*V!R*|P;=`<%l&XW+UYkWOX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+PW+wP;=`<%l+P!Z+}P;=`<%l$q!a,]``P!a`!cp!^^OX&XXY,QYZ,QZ]&X]^,Q^p&Xpq,Qqr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!_-ljhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q[/ebhSkWOX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+PS0rXhSqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0mS1bP;=`<%l0m[1hP;=`<%l/^!V1vchS`P!a`!cpOq&Xqr1krs&}sv1kvw0mwx(tx!P1k!P!Q&X!Q!^1k!^!_*V!_!a&X!a#s1k#s$f&X$f;'S1k;'S;=`3R<%l?Ah1k?Ah?BY&X?BY?Mn1k?MnO&X!V3UP;=`<%l1k!_3[P;=`<%l-_!Z3hV!`h`P!cpOv&}wx'kx!^&}!^!_(V!_;'S&};'S;=`(n<%lO&}!_4WihSkWc!ROX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst>]tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^/^!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!Z5zbkWOX5uXZ7SZ[5u[^7S^p5uqr5urs7Sst+Ptw5uwx7Sx!]5u!]!^7w!^!a7S!a#S5u#S#T7S#T;'S5u;'S;=`8n<%lO5u!R7VVOp7Sqs7St!]7S!]!^7l!^;'S7S;'S;=`7q<%lO7S!R7qOa!R!R7tP;=`<%l7S!Z8OYkWa!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!Z8qP;=`<%l5u!_8{ihSkWOX5uXZ7SZ[5u[^7S^p5uqr8trs7Sst/^tw8twx7Sx!P8t!P!Q5u!Q!]8t!]!^:j!^!a7S!a#S8t#S#T;{#T#s8t#s$f5u$f;'S8t;'S;=`>V<%l?Ah8t?Ah?BY5u?BY?Mn8t?MnO5u!_:sbhSkWa!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!V<QchSOp7Sqr;{rs7Sst0mtw;{wx7Sx!P;{!P!Q7S!Q!];{!]!^=]!^!a7S!a#s;{#s$f7S$f;'S;{;'S;=`>P<%l?Ah;{?Ah?BY7S?BY?Mn;{?MnO7S!V=dXhSa!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!V>SP;=`<%l;{!_>YP;=`<%l8t!_>dhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^/^!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!Z@TakWOX@OXZAYZ[@O[^AY^p@Oqr@OrsAYsw@OwxAYx!]@O!]!^Az!^!aAY!a#S@O#S#TAY#T;'S@O;'S;=`Bq<%lO@O!RA]UOpAYq!]AY!]!^Ao!^;'SAY;'S;=`At<%lOAY!RAtOb!R!RAwP;=`<%lAY!ZBRYkWb!ROX+PZ[+P^p+Pqr+Psw+Px!^+P!a#S+P#T;'S+P;'S;=`+t<%lO+P!ZBtP;=`<%l@O!_COhhSkWOX@OXZAYZ[@O[^AY^p@OqrBwrsAYswBwwxAYx!PBw!P!Q@O!Q!]Bw!]!^Dj!^!aAY!a#SBw#S#TE{#T#sBw#s$f@O$f;'SBw;'S;=`HS<%l?AhBw?Ah?BY@O?BY?MnBw?MnO@O!_DsbhSkWb!ROX+PZ[+P^p+Pqr/^sw/^x!P/^!P!Q+P!Q!^/^!a#S/^#S#T0m#T#s/^#s$f+P$f;'S/^;'S;=`1e<%l?Ah/^?Ah?BY+P?BY?Mn/^?MnO+P!VFQbhSOpAYqrE{rsAYswE{wxAYx!PE{!P!QAY!Q!]E{!]!^GY!^!aAY!a#sE{#s$fAY$f;'SE{;'S;=`G|<%l?AhE{?Ah?BYAY?BY?MnE{?MnOAY!VGaXhSb!Rqr0msw0mx!P0m!Q!^0m!a#s0m$f;'S0m;'S;=`1_<%l?Ah0m?BY?Mn0m!VHPP;=`<%lE{!_HVP;=`<%lBw!ZHcW!bx`P!a`Or(trs'ksv(tw!^(t!^!_)e!_;'S(t;'S;=`*P<%lO(t!aIYlhS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OKQ!O!P-_!P!Q$q!Q!^-_!^!_*V!_!a&X!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!aK_khS`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx!P-_!P!Q$q!Q!^-_!^!_*V!_!`&X!`!aMS!a#S-_#S#T1k#T#s-_#s$f$q$f;'S-_;'S;=`3X<%l?Ah-_?Ah?BY$q?BY?Mn-_?MnO$q!TM_X`P!a`!cp!eQOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X!aNZ!ZhSfQ`PkW!a`!cpOX$qXZ&XZ[$q[^&X^p$qpq&Xqr-_rs&}sv-_vw/^wx(tx}-_}!OMz!O!PMz!P!Q$q!Q![Mz![!]Mz!]!^-_!^!_*V!_!a&X!a!c-_!c!}Mz!}#R-_#R#SMz#S#T1k#T#oMz#o#s-_#s$f$q$f$}-_$}%OMz%O%W-_%W%oMz%o%p-_%p&aMz&a&b-_&b1pMz1p4UMz4U4dMz4d4e-_4e$ISMz$IS$I`-_$I`$IbMz$Ib$Je-_$Je$JgMz$Jg$Kh-_$Kh%#tMz%#t&/x-_&/x&EtMz&Et&FV-_&FV;'SMz;'S;:j!#|;:j;=`3X<%l?&r-_?&r?AhMz?Ah?BY$q?BY?MnMz?MnO$q!a!$PP;=`<%lMz!R!$ZY!a`!cpOq*Vqr!$yrs(Vsv*Vwx)ex!a*V!a!b!4t!b;'S*V;'S;=`*s<%lO*V!R!%Q]!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!%y!O!f*V!f!g!']!g#W*V#W#X!0`#X;'S*V;'S;=`*s<%lO*V!R!&QX!a`!cpOr*Vrs(Vsv*Vwx)ex}*V}!O!&m!O;'S*V;'S;=`*s<%lO*V!R!&vV!a`!cp!dPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!'dX!a`!cpOr*Vrs(Vsv*Vwx)ex!q*V!q!r!(P!r;'S*V;'S;=`*s<%lO*V!R!(WX!a`!cpOr*Vrs(Vsv*Vwx)ex!e*V!e!f!(s!f;'S*V;'S;=`*s<%lO*V!R!(zX!a`!cpOr*Vrs(Vsv*Vwx)ex!v*V!v!w!)g!w;'S*V;'S;=`*s<%lO*V!R!)nX!a`!cpOr*Vrs(Vsv*Vwx)ex!{*V!{!|!*Z!|;'S*V;'S;=`*s<%lO*V!R!*bX!a`!cpOr*Vrs(Vsv*Vwx)ex!r*V!r!s!*}!s;'S*V;'S;=`*s<%lO*V!R!+UX!a`!cpOr*Vrs(Vsv*Vwx)ex!g*V!g!h!+q!h;'S*V;'S;=`*s<%lO*V!R!+xY!a`!cpOr!+qrs!,hsv!+qvw!-Swx!.[x!`!+q!`!a!/j!a;'S!+q;'S;=`!0Y<%lO!+qq!,mV!cpOv!,hvx!-Sx!`!,h!`!a!-q!a;'S!,h;'S;=`!.U<%lO!,hP!-VTO!`!-S!`!a!-f!a;'S!-S;'S;=`!-k<%lO!-SP!-kO{PP!-nP;=`<%l!-Sq!-xS!cp{POv(Vx;'S(V;'S;=`(h<%lO(Vq!.XP;=`<%l!,ha!.aX!a`Or!.[rs!-Ssv!.[vw!-Sw!`!.[!`!a!.|!a;'S!.[;'S;=`!/d<%lO!.[a!/TT!a`{POr)esv)ew;'S)e;'S;=`)y<%lO)ea!/gP;=`<%l!.[!R!/sV!a`!cp{POr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!0]P;=`<%l!+q!R!0gX!a`!cpOr*Vrs(Vsv*Vwx)ex#c*V#c#d!1S#d;'S*V;'S;=`*s<%lO*V!R!1ZX!a`!cpOr*Vrs(Vsv*Vwx)ex#V*V#V#W!1v#W;'S*V;'S;=`*s<%lO*V!R!1}X!a`!cpOr*Vrs(Vsv*Vwx)ex#h*V#h#i!2j#i;'S*V;'S;=`*s<%lO*V!R!2qX!a`!cpOr*Vrs(Vsv*Vwx)ex#m*V#m#n!3^#n;'S*V;'S;=`*s<%lO*V!R!3eX!a`!cpOr*Vrs(Vsv*Vwx)ex#d*V#d#e!4Q#e;'S*V;'S;=`*s<%lO*V!R!4XX!a`!cpOr*Vrs(Vsv*Vwx)ex#X*V#X#Y!+q#Y;'S*V;'S;=`*s<%lO*V!R!4{Y!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!a!4t!a!b!:]!b;'S!4t;'S;=`!;r<%lO!4tq!5pV!cpOv!5kvx!6Vx!a!5k!a!b!7W!b;'S!5k;'S;=`!8V<%lO!5kP!6YTO!a!6V!a!b!6i!b;'S!6V;'S;=`!7Q<%lO!6VP!6lTO!`!6V!`!a!6{!a;'S!6V;'S;=`!7Q<%lO!6VP!7QOxPP!7TP;=`<%l!6Vq!7]V!cpOv!5kvx!6Vx!`!5k!`!a!7r!a;'S!5k;'S;=`!8V<%lO!5kq!7yS!cpxPOv(Vx;'S(V;'S;=`(h<%lO(Vq!8YP;=`<%l!5ka!8bX!a`Or!8]rs!6Vsv!8]vw!6Vw!a!8]!a!b!8}!b;'S!8];'S;=`!:V<%lO!8]a!9SX!a`Or!8]rs!6Vsv!8]vw!6Vw!`!8]!`!a!9o!a;'S!8];'S;=`!:V<%lO!8]a!9vT!a`xPOr)esv)ew;'S)e;'S;=`)y<%lO)ea!:YP;=`<%l!8]!R!:dY!a`!cpOr!4trs!5ksv!4tvw!6Vwx!8]x!`!4t!`!a!;S!a;'S!4t;'S;=`!;r<%lO!4t!R!;]V!a`!cpxPOr*Vrs(Vsv*Vwx)ex;'S*V;'S;=`*s<%lO*V!R!;uP;=`<%l!4t!V!<TXiS`P!a`!cpOr&Xrs&}sv&Xwx(tx!^&X!^!_*V!_;'S&X;'S;=`*y<%lO&X\",\n  tokenizers: [scriptTokens, styleTokens, textareaTokens, endTag, tagStart, commentContent, 0, 1, 2, 3, 4, 5],\n  topRules: {\"Document\":[0,15]},\n  dialects: {noMatch: 0, selfClosing: 485},\n  tokenPrec: 487\n});\n\nfunction getAttrs(openTag, input) {\n  let attrs = Object.create(null);\n  for (let att of openTag.getChildren(Attribute)) {\n    let name = att.getChild(AttributeName), value = att.getChild(AttributeValue) || att.getChild(UnquotedAttributeValue);\n    if (name) attrs[input.read(name.from, name.to)] =\n      !value ? \"\" : value.type.id == AttributeValue ? input.read(value.from + 1, value.to - 1) : input.read(value.from, value.to);\n  }\n  return attrs\n}\n\nfunction findTagName(openTag, input) {\n  let tagNameNode = openTag.getChild(TagName);\n  return tagNameNode ? input.read(tagNameNode.from, tagNameNode.to) : \" \"\n}\n\nfunction maybeNest(node, input, tags) {\n  let attrs;\n  for (let tag of tags) {\n    if (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(node.node.parent.firstChild, input))))\n      return {parser: tag.parser}\n  }\n  return null\n}\n\n// tags?: {\n//   tag: string,\n//   attrs?: ({[attr: string]: string}) => boolean,\n//   parser: Parser\n// }[]\n// attributes?: {\n//   name: string,\n//   tagName?: string,\n//   parser: Parser\n// }[]\n \nfunction configureNesting(tags = [], attributes = []) {\n  let script = [], style = [], textarea = [], other = [];\n  for (let tag of tags) {\n    let array = tag.tag == \"script\" ? script : tag.tag == \"style\" ? style : tag.tag == \"textarea\" ? textarea : other;\n    array.push(tag);\n  }\n  let attrs = attributes.length ? Object.create(null) : null;\n  for (let attr of attributes) (attrs[attr.name] || (attrs[attr.name] = [])).push(attr);\n\n  return parseMixed((node, input) => {\n    let id = node.type.id;\n    if (id == ScriptText) return maybeNest(node, input, script)\n    if (id == StyleText) return maybeNest(node, input, style)\n    if (id == TextareaText) return maybeNest(node, input, textarea)\n\n    if (id == Element && other.length) {\n      let n = node.node, open = n.firstChild, tagName = open && findTagName(open, input), attrs;\n      if (tagName) for (let tag of other) {\n        if (tag.tag == tagName && (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(n, input))))) {\n          let close = n.lastChild;\n          let to = close.type.id == CloseTag ? close.from : n.to;\n          if (to > open.to)\n            return {parser: tag.parser, overlay: [{from: open.to, to}]}\n        }\n      }\n    }\n\n    if (attrs && id == Attribute) {\n      let n = node.node, nameNode;\n      if (nameNode = n.firstChild) {\n        let matches = attrs[input.read(nameNode.from, nameNode.to)];\n        if (matches) for (let attr of matches) {\n          if (attr.tagName && attr.tagName != findTagName(n.parent, input)) continue\n          let value = n.lastChild;\n          if (value.type.id == AttributeValue) {\n            let from = value.from + 1;\n            let last = value.lastChild, to = value.to - (last && last.isError ? 0 : 1);\n            if (to > from) return {parser: attr.parser, overlay: [{from, to}]}\n          } else if (value.type.id == UnquotedAttributeValue) {\n            return {parser: attr.parser, overlay: [{from: value.from, to: value.to}]}\n          }\n        }\n      }\n    }\n    return null\n  })\n}\n\nexport { configureNesting, parser };\n","import { ContextTracker, ExternalTokenizer, LRParser, LocalTokenGroup } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst noSemi = 304,\n  incdec = 1,\n  incdecPrefix = 2,\n  insertSemi = 305,\n  spaces = 307,\n  newline = 308,\n  LineComment = 3,\n  BlockComment = 4;\n\n/* Hand-written tokenizers for JavaScript tokens that can't be\n   expressed by lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,\n               8201, 8202, 8232, 8233, 8239, 8287, 12288];\n\nconst braceR = 125, semicolon = 59, slash = 47, star = 42, plus = 43, minus = 45;\n\nconst trackNewline = new ContextTracker({\n  start: false,\n  shift(context, term) {\n    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline\n  },\n  strict: false\n});\n\nconst insertSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if (next == braceR || next == -1 || stack.context)\n    input.acceptToken(insertSemi);\n}, {contextual: true, fallback: true});\n\nconst noSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input, after;\n  if (space.indexOf(next) > -1) return\n  if (next == slash && ((after = input.peek(1)) == slash || after == star)) return\n  if (next != braceR && next != semicolon && next != -1 && !stack.context)\n    input.acceptToken(noSemi);\n}, {contextual: true});\n\nconst incdecToken = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if (next == plus || next == minus) {\n    input.advance();\n    if (next == input.next) {\n      input.advance();\n      let mayPostfix = !stack.context && stack.canShift(incdec);\n      input.acceptToken(mayPostfix ? incdec : incdecPrefix);\n    }\n  }\n}, {contextual: true});\n\nconst jsHighlight = styleTags({\n  \"get set async static\": tags.modifier,\n  \"for while do if else switch try catch finally return throw break continue default case\": tags.controlKeyword,\n  \"in of await yield void typeof delete instanceof\": tags.operatorKeyword,\n  \"let var const using function class extends\": tags.definitionKeyword,\n  \"import export from\": tags.moduleKeyword,\n  \"with debugger as new\": tags.keyword,\n  TemplateString: tags.special(tags.string),\n  super: tags.atom,\n  BooleanLiteral: tags.bool,\n  this: tags.self,\n  null: tags.null,\n  Star: tags.modifier,\n  VariableName: tags.variableName,\n  \"CallExpression/VariableName TaggedTemplateExpression/VariableName\": tags.function(tags.variableName),\n  VariableDefinition: tags.definition(tags.variableName),\n  Label: tags.labelName,\n  PropertyName: tags.propertyName,\n  PrivatePropertyName: tags.special(tags.propertyName),\n  \"CallExpression/MemberExpression/PropertyName\": tags.function(tags.propertyName),\n  \"FunctionDeclaration/VariableDefinition\": tags.function(tags.definition(tags.variableName)),\n  \"ClassDeclaration/VariableDefinition\": tags.definition(tags.className),\n  PropertyDefinition: tags.definition(tags.propertyName),\n  PrivatePropertyDefinition: tags.definition(tags.special(tags.propertyName)),\n  UpdateOp: tags.updateOperator,\n  \"LineComment Hashbang\": tags.lineComment,\n  BlockComment: tags.blockComment,\n  Number: tags.number,\n  String: tags.string,\n  Escape: tags.escape,\n  ArithOp: tags.arithmeticOperator,\n  LogicOp: tags.logicOperator,\n  BitOp: tags.bitwiseOperator,\n  CompareOp: tags.compareOperator,\n  RegExp: tags.regexp,\n  Equals: tags.definitionOperator,\n  Arrow: tags.function(tags.punctuation),\n  \": Spread\": tags.punctuation,\n  \"( )\": tags.paren,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace,\n  \"InterpolationStart InterpolationEnd\": tags.special(tags.brace),\n  \".\": tags.derefOperator,\n  \", ;\": tags.separator,\n  \"@\": tags.meta,\n\n  TypeName: tags.typeName,\n  TypeDefinition: tags.definition(tags.typeName),\n  \"type enum interface implements namespace module declare\": tags.definitionKeyword,\n  \"abstract global Privacy readonly override\": tags.modifier,\n  \"is keyof unique infer\": tags.operatorKeyword,\n\n  JSXAttributeValue: tags.attributeValue,\n  JSXText: tags.content,\n  \"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag\": tags.angleBracket,\n  \"JSXIdentifier JSXNameSpacedName\": tags.tagName,\n  \"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName\": tags.attributeName,\n  \"JSXBuiltin/JSXIdentifier\": tags.standard(tags.tagName)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {__proto__:null,export:16, as:21, from:29, default:32, async:37, function:38, extends:48, this:52, true:60, false:60, null:72, void:76, typeof:80, super:98, new:132, delete:148, yield:157, await:161, class:166, public:223, private:223, protected:223, readonly:225, instanceof:244, satisfies:247, in:248, const:250, import:282, keyof:337, unique:341, infer:347, is:383, abstract:403, implements:405, type:407, let:410, var:412, using:415, interface:421, enum:425, namespace:431, module:433, declare:437, global:441, for:460, of:469, while:472, with:476, do:480, if:484, else:486, switch:490, case:496, try:502, catch:506, finally:510, return:514, throw:518, break:522, continue:526, debugger:530};\nconst spec_word = {__proto__:null,async:119, get:121, set:123, declare:183, public:185, private:185, protected:185, static:187, abstract:189, override:191, readonly:197, accessor:199, new:387};\nconst spec_LessThan = {__proto__:null,\"<\":139};\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$6zO%TQUOOO%[QUOOO'_QWOOP(lOSOOO*zQ(CjO'#CgO+ROpO'#ChO+aO!bO'#ChO+oO07`O'#D[O.QQUO'#DbO.bQUO'#DmO%[QUO'#DwO0fQUO'#EPOOQ(CY'#EX'#EXO1PQSO'#EUOOQO'#Ej'#EjOOQO'#Id'#IdO1XQSO'#GlO1dQSO'#EiO1iQSO'#EiO3kQ(CjO'#JeO6[Q(CjO'#JfO6xQSO'#FXO6}Q#tO'#FpOOQ(CY'#Fa'#FaO7YO&jO'#FaO7hQ,UO'#FwO9OQSO'#FvOOQ(CY'#Jf'#JfOOQ(CW'#Je'#JeO9TQSO'#GpOOQQ'#KQ'#KQO9`QSO'#IQO9eQ(C[O'#IROOQQ'#JR'#JROOQQ'#IV'#IVQ`QUOOO`QUOOO%[QUO'#DoO9mQUO'#D{O9tQUO'#D}O9ZQSO'#GlO9{Q,UO'#CmO:ZQSO'#EhO:fQSO'#EsO:kQ,UO'#F`O;YQSO'#GlOOQO'#KR'#KRO;_QSO'#KRO;mQSO'#GtO;mQSO'#GuO;mQSO'#GwO9ZQSO'#GzO<dQSO'#G}O={QSO'#CcO>]QSO'#HZO>eQSO'#HaO>eQSO'#HcO`QUO'#HeO>eQSO'#HgO>eQSO'#HjO>jQSO'#HpO>oQ(C]O'#HvO%[QUO'#HxO>zQ(C]O'#HzO?VQ(C]O'#H|O9eQ(C[O'#IOO?bQ(CjO'#CgO@dQWO'#DgQOQSOOO%[QUO'#D}O@zQSO'#EQO9{Q,UO'#EhOAVQSO'#EhOAbQ`O'#F`OOQQ'#Ce'#CeOOQ(CW'#Dl'#DlOOQ(CW'#Ji'#JiO%[QUO'#JiOOQO'#Jm'#JmOOQO'#Ia'#IaOBbQWO'#EaOOQ(CW'#E`'#E`OC^Q(C`O'#EaOChQWO'#ETOOQO'#Jl'#JlOC|QWO'#JmOEZQWO'#ETOChQWO'#EaPEhO?MpO'#C`POOO)CDp)CDpOOOO'#IW'#IWOEsOpO,59SOOQ(CY,59S,59SOOOO'#IX'#IXOFRO!bO,59SO%[QUO'#D^OOOO'#IZ'#IZOFaO07`O,59vOOQ(CY,59v,59vOFoQUO'#I[OGSQSO'#JgOIUQbO'#JgO+}QUO'#JgOI]QSO,59|OIsQSO'#EjOJQQSO'#JuOJ]QSO'#JtOJ]QSO'#JtOJeQSO,5;WOJjQSO'#JsOOQ(CY,5:X,5:XOJqQUO,5:XOLrQ(CjO,5:cOMcQSO,5:kOM|Q(C[O'#JrONTQSO'#JqO9TQSO'#JqONiQSO'#JqONqQSO,5;VONvQSO'#JqO!#OQbO'#JfOOQ(CY'#Cg'#CgO%[QUO'#EPO!#nQ`O,5:pOOQO'#Jn'#JnOOQO-E<b-E<bO9ZQSO,5=WO!$UQSO,5=WO!$ZQUO,5;TO!&^Q,UO'#EeO!'qQSO,5;TO!)ZQ,UO'#DqO!)bQUO'#DvO!)lQWO,5;^O!)tQWO,5;^O%[QUO,5;^OOQQ'#FP'#FPOOQQ'#FR'#FRO%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_O%[QUO,5;_OOQQ'#FV'#FVO!*SQUO,5;pOOQ(CY,5;u,5;uOOQ(CY,5;v,5;vO!,VQSO,5;vOOQ(CY,5;w,5;wO%[QUO'#IhO!,_Q(C[O,5<dO!&^Q,UO,5;_O!,|Q,UO,5;_O%[QUO,5;sO!-TQ#tO'#FfO!.QQ#tO'#JyO!-lQ#tO'#JyO!.XQ#tO'#JyOOQO'#Jy'#JyO!.mQ#tO,5<OOOOO,5<[,5<[O!/OQUO'#FrOOOO'#Ig'#IgO7YO&jO,5;{O!/VQ#tO'#FtOOQ(CY,5;{,5;{O!/vQ7[O'#CsOOQ(CY'#Cw'#CwO!0ZQSO'#CwO!0`O07`O'#C{O!0|Q,UO,5<aO!1TQSO,5<cO!2jQMhO'#GRO!2wQSO'#GSO!2|QSO'#GSO!3RQMhO'#GWO!4QQWO'#G[O!4sQ7[O'#J`OOQ(CY'#J`'#J`O!4}QSO'#J_O!5]QSO'#J^O!5eQSO'#CrOOQ(CY'#Cu'#CuOOQ(CY'#DP'#DPOOQ(CY'#DR'#DRO1SQSO'#DTO!'vQ,UO'#FyO!'vQ,UO'#F{O!5mQSO'#F}O!5rQSO'#GOO!2|QSO'#GUO!'vQ,UO'#GZO!5wQSO'#EkO!6fQSO,5<bOOQ(CW'#Cp'#CpO!6nQSO'#ElO!7hQWO'#EmOOQ(CW'#Js'#JsO!7oQ(C[O'#KSO9eQ(C[O,5=[O`QUO,5>lOOQQ'#JZ'#JZOOQQ,5>m,5>mOOQQ-E<T-E<TO!9qQ(CjO,5:ZO!<_Q(CjO,5:gO%[QUO,5:gO!>xQ(CjO,5:iOOQO,5@m,5@mO!?iQ,UO,5=WO!?wQ(C[O'#J[O9OQSO'#J[O!@YQ(C[O,59XO!@eQWO,59XO!@mQ,UO,59XO9{Q,UO,59XO!@xQSO,5;TO!AQQSO'#HYO!AfQSO'#KVO%[QUO,5;xO!7cQWO,5;zO!AnQSO,5=sO!AsQSO,5=sO!AxQSO,5=sO9eQ(C[O,5=sO;mQSO,5=cOOQO'#Cs'#CsO!BWQWO,5=`O!B`Q,UO,5=aO!BkQSO,5=cO!BpQ`O,5=fO!BxQSO'#KRO>jQSO'#HPO9ZQSO'#HRO!B}QSO'#HRO9{Q,UO'#HTO!CSQSO'#HTOOQQ,5=i,5=iO!CXQSO'#HUO!CjQSO'#CmO!CoQSO,58}O!CyQSO,58}O!FOQUO,58}OOQQ,58},58}O!F`Q(C[O,58}O%[QUO,58}O!HkQUO'#H]OOQQ'#H^'#H^OOQQ'#H_'#H_O`QUO,5=uO!IRQSO,5=uO`QUO,5={O`QUO,5=}O!IWQSO,5>PO`QUO,5>RO!I]QSO,5>UO!IbQUO,5>[OOQQ,5>b,5>bO%[QUO,5>bO9eQ(C[O,5>dOOQQ,5>f,5>fO!MlQSO,5>fOOQQ,5>h,5>hO!MlQSO,5>hOOQQ,5>j,5>jO!MqQWO'#DYO%[QUO'#JiO!N`QWO'#JiO!N}QWO'#DhO# `QWO'#DhO##qQUO'#DhO##xQSO'#JhO#$QQSO,5:RO#$VQSO'#EnO#$eQSO'#JvO#$mQSO,5;XO#$rQWO'#DhO#%PQWO'#ESOOQ(CY,5:l,5:lO%[QUO,5:lO#%WQSO,5:lO>jQSO,5;SO!@eQWO,5;SO!@mQ,UO,5;SO9{Q,UO,5;SO#%`QSO,5@TO#%eQ!LQO,5:pOOQO-E<_-E<_O#&kQ(C`O,5:{OChQWO,5:oO#&uQWO,5:oOChQWO,5:{O!@YQ(C[O,5:oOOQ(CW'#Ed'#EdOOQO,5:{,5:{O%[QUO,5:{O#'SQ(C[O,5:{O#'_Q(C[O,5:{O!@eQWO,5:oOOQO,5;R,5;RO#'mQ(C[O,5:{POOO'#IU'#IUP#(RO?MpO,58zPOOO,58z,58zOOOO-E<U-E<UOOQ(CY1G.n1G.nOOOO-E<V-E<VO#(^Q`O,59xOOOO-E<X-E<XOOQ(CY1G/b1G/bO#(cQbO,5>vO+}QUO,5>vOOQO,5>|,5>|O#(mQUO'#I[OOQO-E<Y-E<YO#(zQSO,5@RO#)SQbO,5@RO#)ZQSO,5@`OOQ(CY1G/h1G/hO%[QUO,5@aO#)cQSO'#IbOOQO-E<`-E<`O#)ZQSO,5@`OOQ(CW1G0r1G0rOOQ(CY1G/s1G/sOOQ(CY1G0V1G0VO%[QUO,5@^O#)wQ(C[O,5@^O#*YQ(C[O,5@^O#*aQSO,5@]O9TQSO,5@]O#*iQSO,5@]O#*wQSO'#IeO#*aQSO,5@]OOQ(CW1G0q1G0qO!)lQWO,5:rO!)wQWO,5:rOOQO,5:t,5:tO#+iQSO,5:tO#+qQ,UO1G2rO9ZQSO1G2rOOQ(CY1G0o1G0oO#,PQ(CjO1G0oO#-UQ(ChO,5;POOQ(CY'#GQ'#GQO#-rQ(CjO'#J`O!$ZQUO1G0oO#/zQ,UO'#JjO#0UQSO,5:]O#0ZQbO'#JkO%[QUO'#JkO#0eQSO,5:bOOQ(CY'#DY'#DYOOQ(CY1G0x1G0xO%[QUO1G0xOOQ(CY1G1b1G1bO#0jQSO1G0xO#3RQ(CjO1G0yO#3YQ(CjO1G0yO#5sQ(CjO1G0yO#5zQ(CjO1G0yO#8UQ(CjO1G0yO#8lQ(CjO1G0yO#;fQ(CjO1G0yO#;mQ(CjO1G0yO#>WQ(CjO1G0yO#>_Q(CjO1G0yO#@VQ(CjO1G0yO#CVQ$IUO'#CgO#ETQ$IUO1G1[O#E[Q$IUO'#JfO!,YQSO1G1bO#ElQ(CjO,5?SOOQ(CW-E<f-E<fO#F`Q(CjO1G0yOOQ(CY1G0y1G0yO#HkQ(CjO1G1_O#I_Q#tO,5<SO#IgQ#tO,5<TO#IoQ#tO'#FkO#JWQSO'#FjOOQO'#Jz'#JzOOQO'#If'#IfO#J]Q#tO1G1jOOQ(CY1G1j1G1jOOOO1G1u1G1uO#JnQ$IUO'#JeO#JxQSO,5<^O!*SQUO,5<^OOOO-E<e-E<eOOQ(CY1G1g1G1gO#J}QWO'#JyOOQ(CY,5<`,5<`O#KVQWO,5<`OOQ(CY,59c,59cO!&^Q,UO'#C}OOOO'#IY'#IYO#K[O07`O,59gOOQ(CY,59g,59gO%[QUO1G1{O!5rQSO'#IjO#KgQ,UO,5<tOOQ(CY,5<q,5<qOOQO'#Gg'#GgO!'vQ,UO,5=QOOQO'#Gi'#GiO!'vQ,UO,5=SO!&^Q,UO,5=UOOQO1G1}1G1}O#KnQ`O'#CpO#LRQ`O,5<mO#LYQSO'#J}O9ZQSO'#J}O#LhQSO,5<oO!'vQ,UO,5<nO#LmQSO'#GTO#LxQSO,5<nO#L}Q`O'#GQO#M[Q`O'#KOO#MfQSO'#KOO!&^Q,UO'#KOO#MkQSO,5<rO#MpQWO'#G]O!3{QWO'#G]O#NRQSO'#G_O#NWQSO'#GaO!2|QSO'#GdO#N]Q(C[O'#IlO#NhQWO,5<vOOQ(CY,5<v,5<vO#NoQWO'#G]O#N}QWO'#G^O$ VQWO'#G^OOQ(CY,5=V,5=VO!'vQ,UO,5?yO!'vQ,UO,5?yO$ [QSO'#ImO$ gQSO,5?xO$ oQSO,59^O$!`Q,UO,59oOOQ(CY,59o,59oO$#RQ,UO,5<eO$#tQ,UO,5<gO@[QSO,5<iOOQ(CY,5<j,5<jO$$OQSO,5<pO$$TQ,UO,5<uO$$eQSO'#JqO!$ZQUO1G1|O$$jQSO1G1|O9TQSO'#JtO9TQSO'#EnO%[QUO'#EnO9TQSO'#IoO$$oQ(C[O,5@nOOQQ1G2v1G2vOOQQ1G4W1G4WOOQ(CY1G/u1G/uO!,VQSO1G/uO$&tQ(CjO1G0ROOQQ1G2r1G2rO!&^Q,UO1G2rO%[QUO1G2rO$'eQSO1G2rO$'pQ,UO'#EeOOQ(CW,5?v,5?vO$'zQ(C[O,5?vOOQQ1G.s1G.sO!@YQ(C[O1G.sO!@eQWO1G.sO!@mQ,UO1G.sO$(]QSO1G0oO$(bQSO'#CgO$(mQSO'#KWO$(uQSO,5=tO$(zQSO'#KWO$)PQSO'#KWO$)_QSO'#IuO$)mQSO,5@qO$)uQbO1G1dOOQ(CY1G1f1G1fO9ZQSO1G3_O@[QSO1G3_O$)|QSO1G3_O$*RQSO1G3_OOQQ1G3_1G3_O!BkQSO1G2}O!&^Q,UO1G2zO$*WQSO1G2zOOQQ1G2{1G2{O!&^Q,UO1G2{O$*]QSO1G2{O$*eQWO'#GyOOQQ1G2}1G2}O!3{QWO'#IqO!BpQ`O1G3QOOQQ1G3Q1G3QOOQQ,5=k,5=kO$*mQ,UO,5=mO9ZQSO,5=mO#NWQSO,5=oO9OQSO,5=oO!@eQWO,5=oO!@mQ,UO,5=oO9{Q,UO,5=oO$*{QSO'#KUO$+WQSO,5=pOOQQ1G.i1G.iO$+]Q(C[O1G.iO@[QSO1G.iO$+hQSO1G.iO9eQ(C[O1G.iO$-mQbO,5@sO$-}QSO,5@sO9TQSO,5@sO$.YQUO,5=wO$.aQSO,5=wOOQQ1G3a1G3aO`QUO1G3aOOQQ1G3g1G3gOOQQ1G3i1G3iO>eQSO1G3kO$.fQUO1G3mO$2jQUO'#HlOOQQ1G3p1G3pO$2wQSO'#HrO>jQSO'#HtOOQQ1G3v1G3vO$3PQUO1G3vO9eQ(C[O1G3|OOQQ1G4O1G4OOOQ(CW'#GX'#GXO9eQ(C[O1G4QO9eQ(C[O1G4SO$7WQSO,5@TO!*SQUO,5;YO9TQSO,5;YO>jQSO,5:SO!*SQUO,5:SO!@eQWO,5:SO$7]Q$IUO,5:SOOQO,5;Y,5;YO$7gQWO'#I]O$7}QSO,5@SOOQ(CY1G/m1G/mO$8VQWO'#IcO$8aQSO,5@bOOQ(CW1G0s1G0sO# `QWO,5:SOOQO'#I`'#I`O$8iQWO,5:nOOQ(CY,5:n,5:nO#%ZQSO1G0WOOQ(CY1G0W1G0WO%[QUO1G0WOOQ(CY1G0n1G0nO>jQSO1G0nO!@eQWO1G0nO!@mQ,UO1G0nOOQ(CW1G5o1G5oO!@YQ(C[O1G0ZOOQO1G0g1G0gO%[QUO1G0gO$8pQ(C[O1G0gO$8{Q(C[O1G0gO!@eQWO1G0ZOChQWO1G0ZO$9ZQ(C[O1G0gOOQO1G0Z1G0ZO$9oQ(CjO1G0gPOOO-E<S-E<SPOOO1G.f1G.fOOOO1G/d1G/dO$9yQ`O,5<dO$:RQbO1G4bOOQO1G4h1G4hO%[QUO,5>vO$:]QSO1G5mO$:eQSO1G5zO$:mQbO1G5{O9TQSO,5>|O$:wQ(CjO1G5xO%[QUO1G5xO$;XQ(C[O1G5xO$;jQSO1G5wO$;jQSO1G5wO9TQSO1G5wO$;rQSO,5?PO9TQSO,5?POOQO,5?P,5?PO$<WQSO,5?PO$$eQSO,5?POOQO-E<c-E<cOOQO1G0^1G0^OOQO1G0`1G0`O!,YQSO1G0`OOQQ7+(^7+(^O!&^Q,UO7+(^O%[QUO7+(^O$<fQSO7+(^O$<qQ,UO7+(^O$=PQ(CjO,59oO$?XQ(CjO,5<eO$AdQ(CjO,5<gO$CoQ(CjO,5<uOOQ(CY7+&Z7+&ZO$FQQ(CjO7+&ZO$FtQ,UO'#I^O$GOQSO,5@UOOQ(CY1G/w1G/wO$GWQUO'#I_O$GeQSO,5@VO$GmQbO,5@VOOQ(CY1G/|1G/|O$GwQSO7+&dOOQ(CY7+&d7+&dO$G|Q$IUO,5:cO%[QUO7+&vO$HWQ$IUO,5:ZO$HeQ$IUO,5:gO$HoQ$IUO,5:iOOQ(CY7+&|7+&|OOQO1G1n1G1nOOQO1G1o1G1oO$HyQ#tO,5<VO!*SQUO,5<UOOQO-E<d-E<dOOQ(CY7+'U7+'UOOOO7+'a7+'aOOOO1G1x1G1xO$IUQSO1G1xOOQ(CY1G1z1G1zO$IZQ`O,59iOOOO-E<W-E<WOOQ(CY1G/R1G/RO$IbQ(CjO7+'gOOQ(CY,5?U,5?UO$JUQ`O,5?UOOQ(CY1G2`1G2`P!&^Q,UO'#IjPOQ(CY-E<h-E<hO$JtQ,UO1G2lO$KgQ,UO1G2nO$KqQ`O1G2pOOQ(CY1G2X1G2XO$KxQSO'#IiO$LWQSO,5@iO$LWQSO,5@iO$L`QSO,5@iO$LkQSO,5@iOOQO1G2Z1G2ZO$LyQ,UO1G2YO!'vQ,UO1G2YO$MZQMhO'#IkO$MkQSO,5@jO!&^Q,UO,5@jO$MsQ`O,5@jOOQ(CY1G2^1G2^OOQ(CW,5<w,5<wOOQ(CW,5<x,5<xO$$eQSO,5<xOCXQSO,5<xO!@eQWO,5<wOOQO'#G`'#G`O$M}QSO,5<yOOQ(CW,5<{,5<{O$$eQSO,5=OOOQO,5?W,5?WOOQO-E<j-E<jOOQ(CY1G2b1G2bO!3{QWO,5<wO$NVQSO,5<xO#NRQSO,5<yO!3{QWO,5<xO$NbQ,UO1G5eO$NlQ,UO1G5eOOQO,5?X,5?XOOQO-E<k-E<kOOQO1G.x1G.xO!7cQWO,59qO%[QUO,59qO$NyQSO1G2TO!'vQ,UO1G2[O% OQ(CjO7+'hOOQ(CY7+'h7+'hO!$ZQUO7+'hO% rQSO,5;YOOQ(CW,5?Z,5?ZOOQ(CW-E<m-E<mOOQ(CY7+%a7+%aO% wQ`O'#KPO#%ZQSO7+(^O%!RQbO7+(^O$<iQSO7+(^O%!YQ(ChO'#CgO%!mQ(ChO,5<|O%#_QSO,5<|OOQ(CW1G5b1G5bOOQQ7+$_7+$_O!@YQ(C[O7+$_O!@eQWO7+$_O!$ZQUO7+&ZO%#dQSO'#ItO%#{QSO,5@rOOQO1G3`1G3`O9ZQSO,5@rO%#{QSO,5@rO%$TQSO,5@rOOQO,5?a,5?aOOQO-E<s-E<sOOQ(CY7+'O7+'OO%$YQSO7+(yO9eQ(C[O7+(yO9ZQSO7+(yO@[QSO7+(yOOQQ7+(i7+(iO%$_Q(ChO7+(fO!&^Q,UO7+(fO%$iQ`O7+(gOOQQ7+(g7+(gO!&^Q,UO7+(gO%$pQSO'#KTO%${QSO,5=eOOQO,5?],5?]OOQO-E<o-E<oOOQQ7+(l7+(lO%&[QWO'#HSOOQQ1G3X1G3XO!&^Q,UO1G3XO%[QUO1G3XO%&cQSO1G3XO%&nQ,UO1G3XO9eQ(C[O1G3ZO#NWQSO1G3ZO9OQSO1G3ZO!@eQWO1G3ZO!@mQ,UO1G3ZO%&|QSO'#IsO%'bQSO,5@pO%'jQWO,5@pOOQ(CW1G3[1G3[OOQQ7+$T7+$TO@[QSO7+$TO9eQ(C[O7+$TO%'uQSO7+$TO%[QUO1G6_O%[QUO1G6`O%'zQ(C[O1G6_O%(UQUO1G3cO%(]QSO1G3cO%(bQUO1G3cOOQQ7+({7+({O9eQ(C[O7+)VO`QUO7+)XOOQQ'#KZ'#KZOOQQ'#Iv'#IvO%(iQUO,5>WOOQQ,5>W,5>WO%[QUO'#HmO%(vQSO'#HoOOQQ,5>^,5>^O9TQSO,5>^OOQQ,5>`,5>`OOQQ7+)b7+)bOOQQ7+)h7+)hOOQQ7+)l7+)lOOQQ7+)n7+)nO%({QWO1G5oO%)aQ$IUO1G0tO%)kQSO1G0tOOQO1G/n1G/nO%)vQ$IUO1G/nO>jQSO1G/nO!*SQUO'#DhOOQO,5>w,5>wOOQO-E<Z-E<ZOOQO,5>},5>}OOQO-E<a-E<aO!@eQWO1G/nOOQO-E<^-E<^OOQ(CY1G0Y1G0YOOQ(CY7+%r7+%rO#%ZQSO7+%rOOQ(CY7+&Y7+&YO>jQSO7+&YO!@eQWO7+&YOOQO7+%u7+%uO$9oQ(CjO7+&ROOQO7+&R7+&RO%[QUO7+&RO%*QQ(C[O7+&RO!@YQ(C[O7+%uO!@eQWO7+%uO%*]Q(C[O7+&RO%*kQ(CjO7++dO%[QUO7++dO%*{QSO7++cO%*{QSO7++cOOQO1G4k1G4kO9TQSO1G4kO%+TQSO1G4kOOQO7+%z7+%zO#%ZQSO<<KxO%!RQbO<<KxO%+cQSO<<KxOOQQ<<Kx<<KxO!&^Q,UO<<KxO%[QUO<<KxO%+kQSO<<KxO%+vQ(CjO1G2lO%.RQ(CjO1G2nO%0^Q(CjO1G2YO%2oQ,UO,5>xOOQO-E<[-E<[O%2yQbO,5>yO%[QUO,5>yOOQO-E<]-E<]O%3TQSO1G5qOOQ(CY<<JO<<JOO%3]Q$IUO1G0oO%5gQ$IUO1G0yO%5nQ$IUO1G0yO%7rQ$IUO1G0yO%7yQ$IUO1G0yO%9nQ$IUO1G0yO%:UQ$IUO1G0yO%<iQ$IUO1G0yO%<pQ$IUO1G0yO%>tQ$IUO1G0yO%>{Q$IUO1G0yO%@sQ$IUO1G0yO%AWQ(CjO<<JbO%B]Q$IUO1G0yO%DRQ$IUO'#J`O%FUQ$IUO1G1_O%FcQ$IUO1G0RO!*SQUO'#FmOOQO'#J{'#J{OOQO1G1q1G1qO%FmQSO1G1pO%FrQ$IUO,5?SOOOO7+'d7+'dOOOO1G/T1G/TOOQ(CY1G4p1G4pO!'vQ,UO7+([O%F|QSO,5?TO9ZQSO,5?TOOQO-E<g-E<gO%G[QSO1G6TO%G[QSO1G6TO%GdQSO1G6TO%GoQ,UO7+'tO%HPQ`O,5?VO%HZQSO,5?VO!&^Q,UO,5?VOOQO-E<i-E<iO%H`Q`O1G6UO%HjQSO1G6UOOQ(CW1G2d1G2dO$$eQSO1G2dOOQ(CW1G2c1G2cO%HrQSO1G2eO!&^Q,UO1G2eOOQ(CW1G2j1G2jO!@eQWO1G2cOCXQSO1G2dO%HwQSO1G2eO%IPQSO1G2dO!'vQ,UO7++POOQ(CY1G/]1G/]O%I[QSO1G/]OOQ(CY7+'o7+'oO%IaQ,UO7+'vO%IqQ(CjO<<KSOOQ(CY<<KS<<KSO%JeQSO1G0tO!&^Q,UO'#InO%JjQSO,5@kO!&^Q,UO1G2hOOQQ<<Gy<<GyO!@YQ(C[O<<GyO%JrQ(CjO<<IuOOQ(CY<<Iu<<IuOOQO,5?`,5?`O%KfQSO,5?`O%KkQSO,5?`OOQO-E<r-E<rO%KyQSO1G6^O%KyQSO1G6^O9ZQSO1G6^O@[QSO<<LeOOQQ<<Le<<LeO%LRQSO<<LeO9eQ(C[O<<LeOOQQ<<LQ<<LQO%$_Q(ChO<<LQOOQQ<<LR<<LRO%$iQ`O<<LRO%LWQWO'#IpO%LcQSO,5@oO!*SQUO,5@oOOQQ1G3P1G3PO%LkQUO'#JiOOQO'#Ir'#IrO9eQ(C[O'#IrO%LuQWO,5=nOOQQ,5=n,5=nO%L|QWO'#EaO%MbQSO7+(sO%MgQSO7+(sOOQQ7+(s7+(sO!&^Q,UO7+(sO%[QUO7+(sO%MoQSO7+(sOOQQ7+(u7+(uO9eQ(C[O7+(uO#NWQSO7+(uO9OQSO7+(uO!@eQWO7+(uO%MzQSO,5?_OOQO-E<q-E<qOOQO'#HV'#HVO%NVQSO1G6[O9eQ(C[O<<GoOOQQ<<Go<<GoO@[QSO<<GoO%N_QSO7++yO%NdQSO7++zO%[QUO7++yO%[QUO7++zOOQQ7+(}7+(}O%NiQSO7+(}O%NnQUO7+(}O%NuQSO7+(}OOQQ<<Lq<<LqOOQQ<<Ls<<LsOOQQ-E<t-E<tOOQQ1G3r1G3rO%NzQSO,5>XOOQQ,5>Z,5>ZO& PQSO1G3xO9TQSO7+&`O!*SQUO7+&`OOQO7+%Y7+%YO& UQ$IUO1G5{O>jQSO7+%YOOQ(CY<<I^<<I^OOQ(CY<<It<<ItO>jQSO<<ItOOQO<<Im<<ImO$9oQ(CjO<<ImO%[QUO<<ImOOQO<<Ia<<IaO!@YQ(C[O<<IaO& `Q(C[O<<ImO& kQ(CjO<= OO& {QSO<<N}OOQO7+*V7+*VO9TQSO7+*VOOQQANAdANAdO&!TQSOANAdO!&^Q,UOANAdO#%ZQSOANAdO%!RQbOANAdO%[QUOANAdO&!]Q(CjO7+'tO&$nQ(CjO7+'vO&'PQbO1G4eO&'ZQ$IUO7+&ZO&'hQ$IUO,59oO&)kQ$IUO,5<eO&+nQ$IUO,5<gO&-qQ$IUO,5<uO&/gQ$IUO7+'gO&/tQ$IUO7+'hO&0RQSO,5<XOOQO7+'[7+'[O&0WQ,UO<<KvOOQO1G4o1G4oO&0_QSO1G4oO&0jQSO1G4oO&0xQSO7++oO&0xQSO7++oO!&^Q,UO1G4qO&1QQ`O1G4qO&1[QSO7++pOOQ(CW7+(O7+(OO$$eQSO7+(PO&1dQ`O7+(POOQ(CW7+'}7+'}O$$eQSO7+(OO&1kQSO7+(PO!&^Q,UO7+(POCXQSO7+(OO&1pQ,UO<<NkOOQ(CY7+$w7+$wO&1zQ`O,5?YOOQO-E<l-E<lO&2UQ(ChO7+(SOOQQAN=eAN=eO9ZQSO1G4zOOQO1G4z1G4zO&2fQSO1G4zO&2kQSO7++xO&2kQSO7++xO9eQ(C[OANBPO@[QSOANBPOOQQANBPANBPOOQQANAlANAlOOQQANAmANAmO&2sQSO,5?[OOQO-E<n-E<nO&3OQ$IUO1G6ZO&5`QbO'#CgOOQO,5?^,5?^OOQO-E<p-E<pOOQQ1G3Y1G3YO%LkQUO,5<yOOQQ<<L_<<L_O!&^Q,UO<<L_O%MbQSO<<L_O&5jQSO<<L_O%[QUO<<L_OOQQ<<La<<LaO9eQ(C[O<<LaO#NWQSO<<LaO9OQSO<<LaO&5rQWO1G4yO&5}QSO7++vOOQQAN=ZAN=ZO9eQ(C[OAN=ZOOQQ<= e<= eOOQQ<= f<= fO&6VQSO<= eO&6[QSO<= fOOQQ<<Li<<LiO&6aQSO<<LiO&6fQUO<<LiOOQQ1G3s1G3sO>jQSO7+)dO&6mQSO<<IzO&6xQ$IUO<<IzOOQO<<Ht<<HtOOQ(CYAN?`AN?`OOQOAN?XAN?XO$9oQ(CjOAN?XOOQOAN>{AN>{O%[QUOAN?XOOQO<<Mq<<MqOOQQG27OG27OO!&^Q,UOG27OO#%ZQSOG27OO&7SQSOG27OO%!RQbOG27OO&7[Q$IUO<<JbO&7iQ$IUO1G2YO&9_Q$IUO1G2lO&;bQ$IUO1G2nO&=eQ$IUO<<KSO&=rQ$IUO<<IuOOQO1G1s1G1sO!'vQ,UOANAbOOQO7+*Z7+*ZO&>PQSO7+*ZO&>[QSO<= ZO&>dQ`O7+*]OOQ(CW<<Kk<<KkO$$eQSO<<KkOOQ(CW<<Kj<<KjO&>nQ`O<<KkO$$eQSO<<KjOOQO7+*f7+*fO9ZQSO7+*fO&>uQSO<= dOOQQG27kG27kO9eQ(C[OG27kO!*SQUO1G4vO&>}QSO7++uO%MbQSOANAyOOQQANAyANAyO!&^Q,UOANAyO&?VQSOANAyOOQQANA{ANA{O9eQ(C[OANA{O#NWQSOANA{OOQO'#HW'#HWOOQO7+*e7+*eOOQQG22uG22uOOQQANEPANEPOOQQANEQANEQOOQQANBTANBTO&?_QSOANBTOOQQ<<MO<<MOO!*SQUOAN?fOOQOG24sG24sO$9oQ(CjOG24sO#%ZQSOLD,jOOQQLD,jLD,jO!&^Q,UOLD,jO&?dQSOLD,jO&?lQ$IUO7+'tO&AbQ$IUO7+'vO&CWQ,UOG26|OOQO<<Mu<<MuOOQ(CWANAVANAVO$$eQSOANAVOOQ(CWANAUANAUOOQO<<NQ<<NQOOQQLD-VLD-VO&ChQ$IUO7+*bOOQQG27eG27eO%MbQSOG27eO!&^Q,UOG27eOOQQG27gG27gO9eQ(C[OG27gOOQQG27oG27oO&CrQ$IUOG25QOOQOLD*_LD*_OOQQ!$(!U!$(!UO#%ZQSO!$(!UO!&^Q,UO!$(!UO&C|Q(CjOG26|OOQ(CWG26qG26qOOQQLD-PLD-PO%MbQSOLD-POOQQLD-RLD-ROOQQ!)9Ep!)9EpO#%ZQSO!)9EpOOQQ!$(!k!$(!kOOQQ!.K;[!.K;[O&F_Q$IUOG26|O!*SQUO'#DwO1PQSO'#EUO&HTQbO'#JeO!*SQUO'#DoO&H[QUO'#D{O&HcQbO'#CgO&JyQbO'#CgO!*SQUO'#D}O&KZQUO,5;TO!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO,5;_O!*SQUO'#IhO&M^QSO,5<dO&MfQ,UO,5;_O&NyQ,UO,5;_O!*SQUO,5;sO1SQSO'#DTO1SQSO'#DTO!&^Q,UO'#FyO&MfQ,UO'#FyO!&^Q,UO'#F{O&MfQ,UO'#F{O!&^Q,UO'#GZO&MfQ,UO'#GZO!*SQUO,5:gO!*SQUO,5@aO&KZQUO1G0oO' QQ$IUO'#CgO!*SQUO1G1{O!&^Q,UO,5=QO&MfQ,UO,5=QO!&^Q,UO,5=SO&MfQ,UO,5=SO!&^Q,UO,5<nO&MfQ,UO,5<nO&KZQUO1G1|O!*SQUO7+&vO!&^Q,UO1G2YO&MfQ,UO1G2YO!&^Q,UO1G2[O&MfQ,UO1G2[O&KZQUO7+'hO&KZQUO7+&ZO!&^Q,UOANAbO&MfQ,UOANAbO' [QSO'#EiO' aQSO'#EiO' iQSO'#FXO' nQSO'#EsO' sQSO'#JuO'!OQSO'#JsO'!ZQSO,5;TO'!`Q,UO,5<aO'!gQSO'#GSO'!lQSO'#GSO'!qQSO,5<bO'!yQSO,5;TO'#RQ$IUO1G1[O'#YQSO,5<nO'#_QSO,5<nO'#dQSO,5<pO'#iQSO,5<pO'#nQSO1G1|O'#sQSO1G0oO'#xQ,UO<<KvO'$PQ,UO<<KvO7hQ,UO'#FwO9OQSO'#FvOAVQSO'#EhO!*SQUO,5;pO!2|QSO'#GSO!2|QSO'#GSO!2|QSO'#GUO!2|QSO'#GUO!'vQ,UO7+([O!'vQ,UO7+([O$KqQ`O1G2pO$KqQ`O1G2pO!&^Q,UO,5=UO!&^Q,UO,5=U\",\n  stateData: \"'%Y~O'oOS'pOSROS'qRQ~OPYOQYOW!VO_qObzOcyOjkOlYOmkOnkOtkOvYOxYO}WO!RkO!SkO!YXO!duO!iZO!lYO!mYO!nYO!pvO!rwO!uxO!y]O#q!PO$R|O$VfO%a}O%c!QO%e!OO%f!OO%g!OO%j!RO%l!SO%o!TO%p!TO%r!UO&O!WO&U!XO&W!YO&Y!ZO&[![O&_!]O&e!^O&k!_O&m!`O&o!aO&q!bO&s!cO'vSO'xTO'{UO(TVO(c[O(piO~OUtO~P`OPYOQYOb!jOc!iOjkOlYOmkOnkOtkOvYOxYO}WO!RkO!SkO!Y!eO!duO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$R!kO$VfO'v!dO'xTO'{UO(TVO(c[O(piO~O_!vOm!nO}!oO!]!xO!^!uO!_!uO!y9rO!}!pO#O!pO#P!wO#Q!pO#R!pO#U!yO#V!yO'w!lO'xTO'{UO(W!mO(c!sO~O'q!zO~OPZXYZX_ZXlZXzZX{ZX}ZX!WZX!fZX!gZX!iZX!mZX#YZX#edX#hZX#iZX#jZX#kZX#lZX#mZX#nZX#oZX#pZX#rZX#tZX#vZX#wZX#|ZX'mZX(TZX(dZX(kZX(lZX~O!b${X~P(qO]!|O'x#OO'y!|O'z#OO~O]#PO'z#OO'{#OO'|#PO~Or#RO!P#SO(U#SO(V#UO~OPYOQYOb!jOc!iOjkOlYOmkOnkOtkOvYOxYO}WO!RkO!SkO!Y!eO!duO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$R!kO$VfO'v9vO'xTO'{UO(TVO(c[O(piO~O!V#YO!W#VO!T(ZP!T(hP~P+}O!X#bO~P`OPYOQYOb!jOc!iOlYOmkOnkOtkOvYOxYO}WO!RkO!SkO!Y!eO!duO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$R!kO$VfO'xTO'{UO(TVO(c[O(piO~Oj#lO!V#hO!y]O#c#kO#d#hO'v9wO!h(eP~P.iO!i#nO'v#mO~O!u#rO!y]O%a#sO~O#e#tO~O!b#uO#e#tO~OP$]OY$dOl$QOz#yO{#zO}#{O!W$aO!f$SO!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO#l$RO#m$SO#n$SO#o$cO#p$SO#r$TO#t$VO#v$XO#w$YO(TVO(d$ZO(k#|O(l#}O~O_(XX'm(XX'k(XX!h(XX!T(XX!Y(XX%b(XX!b(XX~P1qO#Y$eO#|$eOP(YXY(YXl(YXz(YX{(YX}(YX!W(YX!f(YX!i(YX!m(YX#h(YX#i(YX#j(YX#k(YX#l(YX#m(YX#n(YX#o(YX#p(YX#r(YX#t(YX#v(YX#w(YX(T(YX(d(YX(k(YX(l(YX!Y(YX%b(YX~O_(YX!g(YX'm(YX'k(YX!T(YX!h(YXp(YX!b(YX~P4XO#Y$eO~O$X$gO$Z$fO$b$lO~O!Y$mO$VfO$e$nO$g$pO~Oj%SOl$tOm$sOn$sOt%TOv%UOx%VO}${O!Y$|O!d%[O!i$xO#d%]O$R%YO$n%WO$p%XO$s%ZO'v$rO'xTO'{UO(P%RO(T$uOe(QP~O!i%^O~O}%aO!Y%bO'v%`O~O!b%fO~O_%gO'm%gO~O'w!lO~P%[O%g%nO~P%[O!i%^O'v%`O'w!lO(P%RO~Oc%uO!i%^O'v%`O~O#p$SO~Oz%zO!Y%wO!i%yO%c%}O'v%`O'w!lO'xTO'{UO^(yP~O!u#rO~O%l&PO}(uX!Y(uX'v(uX~O'v&QO~O!r&VO#q!PO%c!QO%e!OO%f!OO%g!OO%j!RO%l!SO%o!TO%p!TO~Ob&[Oc&ZO!u&XO%a&YO%t&WO~P;rOb&_OcyO!Y&^O!r&VO!uxO!y]O#q!PO%a}O%e!OO%f!OO%g!OO%j!RO%l!SO%o!TO%p!TO%r!UO~O`&bO#Y&eO%c&`O'w!lO~P<wO!i&fO!r&jO~O!i#nO~O!YXO~O_%gO'l&rO'm%gO~O_%gO'l&uO'm%gO~O_%gO'l&wO'm%gO~O'kZX!TZXpZX!hZX&SZX!YZX%bZX!bZX~P(qO!]'UO!^&}O!_&}O'w!lO'xTO'{UO~Om&{O}&zO!V'OO(W&yO!X([P!X(jP~P@OOh'XO!Y'VO'v%`O~Oc'^O!i%^O'v%`O~Oz%zO!i%yO~Om!nO}!oO!y9rO!}!pO#O!pO#Q!pO#R!pO'w!lO'xTO'{UO(W!mO(c!sO~O!]'dO!^'cO!_'cO#P!pO#U'eO#V'eO~PAjO_%gO!b#uO!i%^O'm%gO(P%RO(d'gO~O!m'kO#Y'iO~PBxOm!nO}!oO'xTO'{UO(W!mO(c!sO~O!YXOm(aX}(aX!](aX!^(aX!_(aX!y(aX!}(aX#O(aX#P(aX#Q(aX#R(aX#U(aX#V(aX'w(aX'x(aX'{(aX(W(aX(c(aX~O!^'cO!_'cO'w!lO~PChO'r'oO's'oO't'qO~O]!|O'x'sO'y!|O'z'sO~O]#PO'z'sO'{'sO'|#PO~Or#RO!P#SO(U#SO(V'wO~O!V'yO!T'OX!T'UX!W'OX!W'UX~P+}O!W'{O!T(ZX~OP$]OY$dOl$QOz#yO{#zO}#{O!W'{O!f$SO!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO#l$RO#m$SO#n$SO#o$cO#p$SO#r$TO#t$VO#v$XO#w$YO(TVO(d$ZO(k#|O(l#}O~O!T(ZX~PG[O!T(QO~O!T(gX!W(gX!b(gX!h(gX(d(gX~O#Y(gX#e#^X!X(gX~PIbO#Y(RO!T(iX!W(iX~O!W(SO!T(hX~O!T(VO~O#Y$eO~PIbO!X(WO~P`Oz#yO{#zO}#{O!g#wO!i#xO(TVOP!kaY!kal!ka!W!ka!f!ka!m!ka#h!ka#i!ka#j!ka#k!ka#l!ka#m!ka#n!ka#o!ka#p!ka#r!ka#t!ka#v!ka#w!ka(d!ka(k!ka(l!ka~O_!ka'm!ka'k!ka!T!ka!h!kap!ka!Y!ka%b!ka!b!ka~PJxO!h(XO~O!b#uO#Y(YO(d'gO!W(fX_(fX'm(fX~O!h(fX~PMhO}%aO!Y%bO!y]O#c(_O#d(^O'v%`O~O!W(`O!h(eX~O!h(bO~O}%aO!Y%bO#d(^O'v%`O~OP(YXY(YXl(YXz(YX{(YX}(YX!W(YX!f(YX!g(YX!i(YX!m(YX#h(YX#i(YX#j(YX#k(YX#l(YX#m(YX#n(YX#o(YX#p(YX#r(YX#t(YX#v(YX#w(YX(T(YX(d(YX(k(YX(l(YX~O!b#uO!h(YX~P! UOz(cO{(dO!g#wO!i#xO!y!xa}!xa~O!u!xa%a!xa!Y!xa#c!xa#d!xa'v!xa~P!#YO!u(hO~OPYOQYOb!jOc!iOjkOlYOmkOnkOtkOvYOxYO}WO!RkO!SkO!YXO!duO!iZO!lYO!mYO!nYO!pvO!r!gO!u!hO$R!kO$VfO'v!dO'xTO'{UO(TVO(c[O(piO~Oj%SOl$tOm$sOn$sOt%TOv%UOx:[O}${O!Y$|O!d;fO!i$xO#d:bO$R%YO$n:^O$p:`O$s%ZO'v(lO'xTO'{UO(P%RO(T$uO~O#e(nO~Oj%SOl$tOm$sOn$sOt%TOv%UOx%VO}${O!Y$|O!d%[O!i$xO#d%]O$R%YO$n%WO$p%XO$s%ZO'v(lO'xTO'{UO(P%RO(T$uO~Oe(^P~P!'vO!V(rO!h(_P~P%[O(W(tO(c[O~O}(vO!i#xO(W(tO(c[O~OP9qOQ9qOb;bOc!iOjkOl9qOmkOnkOtkOv9qOx9qO}WO!RkO!SkO!Y!eO!d9tO!iZO!l9qO!m9qO!n9qO!p9uO!r9xO!u!hO$R!kO$VfO'v)UO'xTO'{UO(TVO(c[O(p;`O~O{)XO!i#xO~O!W$aO_$la'm$la'k$la!h$la!T$la!Y$la%b$la!b$la~O#q)]O~P!&^Oz)`O!b)_O!Y$YX$U$YX$X$YX$Z$YX$b$YX~O!b)_O!Y(mX$U(mX$X(mX$Z(mX$b(mX~Oz)`O~P!-lOz)`O!Y(mX$U(mX$X(mX$Z(mX$b(mX~O!Y)bO$U)fO$X)aO$Z)aO$b)gO~O!V)jO~P!*SO$X$gO$Z$fO$b)nO~Oh$tXz$tX}$tX!g$tX(k$tX(l$tX~OegXe$tXhgX!WgX#YgX~P!/bOm)pO~Or)qO(U)rO(V)tO~Oh)}Oz)vO})wO(k)yO(l){O~Oe)uO~P!0kOe*OO~Oj%SOl$tOm$sOn$sOt%TOv%UOx:[O}${O!Y$|O!d;fO!i$xO#d:bO$R%YO$n:^O$p:`O$s%ZO'xTO'{UO(P%RO(T$uO~O!V*SO'v*PO!h(qP~P!1YO#e*UO~O!i*VO~O!V*[O'v*XO!T(rP~P!1YOl*hO}*`O!]*fO!^*_O!_*_O!i*VO#U*gO%X*bO'w!lO(W!mO~O!X*eO~P!3`O!g#wOh(SXz(SX}(SX(k(SX(l(SX!W(SX#Y(SX~Oe(SX#z(SX~P!4XOh*kO#Y*jOe(RX!W(RX~O!W*lOe(QX~O'v&QOe(QP~O!i*sO~O'v(lO~Oj*wO}%aO!V#hO!Y%bO!y]O#c#kO#d#hO'v%`O!h(eP~O!b#uO#e*xO~O}%aO!V*zO!W(SO!Y%bO'v%`O!T(hP~Om'RO}*|O!V*{O'xTO'{UO(W(tO~O!X(jP~P!7SO!W*}O_(vX'm(vX~OP$]OY$dOl$QOz#yO{#zO}#{O!f$SO!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO#l$RO#m$SO#n$SO#o$cO#p$SO#r$TO#t$VO#v$XO#w$YO(TVO(d$ZO(k#|O(l#}O~O_!ca!W!ca'm!ca'k!ca!T!ca!h!cap!ca!Y!ca%b!ca!b!ca~P!7zOz#yO{#zO}#{O!g#wO!i#xO(TVOP!oaY!oal!oa!W!oa!f!oa!m!oa#h!oa#i!oa#j!oa#k!oa#l!oa#m!oa#n!oa#o!oa#p!oa#r!oa#t!oa#v!oa#w!oa(d!oa(k!oa(l!oa~O_!oa'm!oa'k!oa!T!oa!h!oap!oa!Y!oa%b!oa!b!oa~P!:eOz#yO{#zO}#{O!g#wO!i#xO(TVOP!qaY!qal!qa!W!qa!f!qa!m!qa#h!qa#i!qa#j!qa#k!qa#l!qa#m!qa#n!qa#o!qa#p!qa#r!qa#t!qa#v!qa#w!qa(d!qa(k!qa(l!qa~O_!qa'm!qa'k!qa!T!qa!h!qap!qa!Y!qa%b!qa!b!qa~P!=OOh+WO!Y'VO%b+VO(P%RO~O!b+YO_(OX!Y(OX'm(OX!W(OX~O_%gO!YXO'm%gO~O!i%^O(P%RO~O!i%^O'v%`O(P%RO~O!b#uO#e(nO~O`+eO%c+fO'v+bO'xTO'{UO!X(zP~O!W+gO^(yX~OY+kO~O^+lO~O!Y%wO'v%`O'w!lO^(yP~O#Y+qO(P%RO~Oh+tO!Y$|O(P%RO~O!Y+vO~Oz+xO!YXO~O%g%nO~O!u+}O~Oc,SO~O`,TO'v#mO'xTO'{UO!X(xP~Oc%uO~O%c!QO'v&QO~P<wOY,YO^,XO~OPYOQYObzOcyOjkOlYOmkOnkOtkOvYOxYO}WO!RkO!SkO!duO!iZO!lYO!mYO!nYO!pvO!uxO!y]O$VfO%a}O'xTO'{UO(TVO(c[O(piO~O!Y!eO!r!gO$R!kO'v!dO~P!DRO^,XO_%gO'm%gO~OPYOQYOb!jOc!iOjkOlYOmkOnkOtkOvYOxYO}WO!RkO!SkO!Y!eO!duO!iZO!lYO!mYO!nYO!pvO!u!hO$R!kO$VfO'v!dO'xTO'{UO(TVO(c[O(piO~O_,_O!rwO#q!OO%e!OO%f!OO%g!OO~P!FkO!i&fO~O&U,eO~O!Y,gO~O&g,iO&i,jOP&daQ&daW&da_&dab&dac&daj&dal&dam&dan&dat&dav&dax&da}&da!R&da!S&da!Y&da!d&da!i&da!l&da!m&da!n&da!p&da!r&da!u&da!y&da#q&da$R&da$V&da%a&da%c&da%e&da%f&da%g&da%j&da%l&da%o&da%p&da%r&da&O&da&U&da&W&da&Y&da&[&da&_&da&e&da&k&da&m&da&o&da&q&da&s&da'k&da'v&da'x&da'{&da(T&da(c&da(p&da!X&da&]&da`&da&b&da~O'v,oO~O!W|X!W!`X!X|X!X!`X!b|X!b!`X!i!`X#Y|X(P!`X~O!b,tO#Y,sO!W#bX!W(]X!X#bX!X(]X!b(]X!i(]X(P(]X~O!b,vO!i%^O(P%RO!W![X!X![X~Om!nO}!oO'xTO'{UO(W!mO~OP9qOQ9qOb;bOc!iOjkOl9qOmkOnkOtkOv9qOx9qO}WO!RkO!SkO!Y!eO!d9tO!iZO!l9qO!m9qO!n9qO!p9uO!r9xO!u!hO$R!kO$VfO'xTO'{UO(TVO(c[O(p;`O~O'v:gO~P# qO!W,zO!X([X~O!X,|O~O!b,tO#Y,sO!W#bX!X#bX~O!W,}O!X(jX~O!X-PO~O!^-QO!_-QO'w!lO~P# `O!X-TO~P'_Oh-WO!Y'VO~O!T-]O~Om!xa!]!xa!^!xa!_!xa!}!xa#O!xa#P!xa#Q!xa#R!xa#U!xa#V!xa'w!xa'x!xa'{!xa(W!xa(c!xa~P!#YO!m-bO#Y-`O~PBxO!^-dO!_-dO'w!lO~PChO_%gO#Y-`O'm%gO~O_%gO!b#uO#Y-`O'm%gO~O_%gO!b#uO!m-bO#Y-`O'm%gO(d'gO~O'r'oO's'oO't-iO~Op-jO~O!T'Oa!W'Oa~P!7zO!V-nO!T'OX!W'OX~P%[O!W'{O!T(Za~O!T(Za~PG[O!W(SO!T(ha~O}%aO!V-rO!Y%bO'v%`O!T'UX!W'UX~O#Y-tO!W(fa!h(fa_(fa'm(fa~O!b#uO~P#)wO!W(`O!h(ea~O}%aO!Y%bO#d-xO'v%`O~Oj-}O}%aO!V-zO!Y%bO!y]O#c-|O#d-zO'v%`O!W'XX!h'XX~O{.RO!i#xO~Oh.UO!Y'VO%b.TO(P%RO~O_#]i!W#]i'm#]i'k#]i!T#]i!h#]ip#]i!Y#]i%b#]i!b#]i~P!7zOh;lOz)vO})wO(k)yO(l){O~O#e#Xa_#Xa#Y#Xa'm#Xa!W#Xa!h#Xa!Y#Xa!T#Xa~P#,sO#e(SXP(SXY(SX_(SXl(SX{(SX!f(SX!i(SX!m(SX#h(SX#i(SX#j(SX#k(SX#l(SX#m(SX#n(SX#o(SX#p(SX#r(SX#t(SX#v(SX#w(SX'm(SX(T(SX(d(SX!h(SX!T(SX'k(SXp(SX!Y(SX%b(SX!b(SX~P!4XO!W._Oe(^X~P!0kOe.aO~O!W.bO!h(_X~P!7zO!h.eO~O!T.gO~OP$]Oz#yO{#zO}#{O!g#wO!i#xO!m$]O(TVOY#gi_#gil#gi!W#gi!f#gi#i#gi#j#gi#k#gi#l#gi#m#gi#n#gi#o#gi#p#gi#r#gi#t#gi#v#gi#w#gi'm#gi(d#gi(k#gi(l#gi'k#gi!T#gi!h#gip#gi!Y#gi%b#gi!b#gi~O#h#gi~P#0oO#h$OO~P#0oOP$]Oz#yO{#zO}#{O!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO(TVOY#gi_#gi!W#gi!f#gi#l#gi#m#gi#n#gi#o#gi#p#gi#r#gi#t#gi#v#gi#w#gi'm#gi(d#gi(k#gi(l#gi'k#gi!T#gi!h#gip#gi!Y#gi%b#gi!b#gi~Ol#gi~P#3aOl$QO~P#3aOP$]Ol$QOz#yO{#zO}#{O!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO#l$RO(TVO_#gi!W#gi#r#gi#t#gi#v#gi#w#gi'm#gi(d#gi(k#gi(l#gi'k#gi!T#gi!h#gip#gi!Y#gi%b#gi!b#gi~OY#gi!f#gi#m#gi#n#gi#o#gi#p#gi~P#6ROY$dO!f$SO#m$SO#n$SO#o$cO#p$SO~P#6ROP$]OY$dOl$QOz#yO{#zO}#{O!f$SO!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO#l$RO#m$SO#n$SO#o$cO#p$SO#r$TO(TVO_#gi!W#gi#t#gi#v#gi#w#gi'm#gi(d#gi(l#gi'k#gi!T#gi!h#gip#gi!Y#gi%b#gi!b#gi~O(k#gi~P#9SO(k#|O~P#9SOP$]OY$dOl$QOz#yO{#zO}#{O!f$SO!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO#l$RO#m$SO#n$SO#o$cO#p$SO#r$TO#t$VO(TVO(k#|O_#gi!W#gi#v#gi#w#gi'm#gi(d#gi'k#gi!T#gi!h#gip#gi!Y#gi%b#gi!b#gi~O(l#gi~P#;tO(l#}O~P#;tOP$]OY$dOl$QOz#yO{#zO}#{O!f$SO!g#wO!i#xO!m$]O#h$OO#i$PO#j$PO#k$PO#l$RO#m$SO#n$SO#o$cO#p$SO#r$TO#t$VO#v$XO(TVO(k#|O(l#}O~O_#gi!W#gi#w#gi'm#gi(d#gi'k#gi!T#gi!h#gip#gi!Y#gi%b#gi!b#gi~P#>fOPZXYZXlZXzZX{ZX}ZX!fZX!gZX!iZX!mZX#YZX#edX#hZX#iZX#jZX#kZX#lZX#mZX#nZX#oZX#pZX#rZX#tZX#vZX#wZX#|ZX(TZX(dZX(kZX(lZX!WZX!XZX~O#zZX~P#APOP$]OY:YOl9|Oz#yO{#zO}#{O!f:OO!g#wO!i#xO!m$]O#h9zO#i9{O#j9{O#k9{O#l9}O#m:OO#n:OO#o:XO#p:OO#r:PO#t:RO#v:TO#w:UO(TVO(d$ZO(k#|O(l#}O~O#z.iO~P#C^O#Y:ZO#|:ZO#z(YX!X(YX~P! UO_'[a!W'[a'm'[a'k'[a!h'[a!T'[ap'[a!Y'[a%b'[a!b'[a~P!7zOP#giY#gi_#gil#gi{#gi!W#gi!f#gi!g#gi!i#gi!m#gi#h#gi#i#gi#j#gi#k#gi#l#gi#m#gi#n#gi#o#gi#p#gi#r#gi#t#gi#v#gi#w#gi'm#gi(T#gi(d#gi'k#gi!T#gi!h#gip#gi!Y#gi%b#gi!b#gi~P#,sO_#{i!W#{i'm#{i'k#{i!T#{i!h#{ip#{i!Y#{i%b#{i!b#{i~P!7zO$X.nO$Z.nO~O$X.oO$Z.oO~O!b)_O#Y.pO!Y$_X$U$_X$X$_X$Z$_X$b$_X~O!V.qO~O!Y)bO$U.sO$X)aO$Z)aO$b.tO~O!W:VO!X(XX~P#C^O!X.uO~O!b)_O$b(mX~O$b.wO~Or)qO(U)rO(V.zO~O!T/OO~P!&^O!WdX!bdX!hdX!h$tX(ddX~P!/bO!h/UO~P#,sO!W/VO!b#uO(d'gO!h(qX~O!h/[O~O!V*SO'v%`O!h(qP~O#e/^O~O!T$tX!W$tX!b${X~P!/bO!W/_O!T(rX~P#,sO!b/aO~O!T/cO~Ol/gO!b#uO!i%^O(P%RO(d'gO~O'v/iO~O!b+YO~O_%gO!W/mO'm%gO~O!X/oO~P!3`O!^/pO!_/pO'w!lO(W!mO~O}/rO(W!mO~O#U/sO~O'v&QOe'aX!W'aX~O!W*lOe(Qa~Oe/xO~Oz/yO{/yO}/zOhwa(kwa(lwa!Wwa#Ywa~Oewa#zwa~P$ tOz)vO})wOh$ma(k$ma(l$ma!W$ma#Y$ma~Oe$ma#z$ma~P$!jOz)vO})wOh$oa(k$oa(l$oa!W$oa#Y$oa~Oe$oa#z$oa~P$#]O#e/|O~Oe$}a!W$}a#Y$}a#z$}a~P!0kO!b#uO~O#e0PO~O!W*}O_(va'm(va~Oz#yO{#zO}#{O!g#wO!i#xO(TVOP!oiY!oil!oi!W!oi!f!oi!m!oi#h!oi#i!oi#j!oi#k!oi#l!oi#m!oi#n!oi#o!oi#p!oi#r!oi#t!oi#v!oi#w!oi(d!oi(k!oi(l!oi~O_!oi'm!oi'k!oi!T!oi!h!oip!oi!Y!oi%b!oi!b!oi~P$$zOh.UO!Y'VO%b.TO~Oj0ZO'v0YO~P!1]O!b+YO_(Oa!Y(Oa'm(Oa!W(Oa~O#e0aO~OYZX!WdX!XdX~O!W0bO!X(zX~O!X0dO~OY0eO~O`0gO'v+bO'xTO'{UO~O!Y%wO'v%`O^'iX!W'iX~O!W+gO^(ya~O!h0jO~P!7zOY0mO~O^0nO~O#Y0qO~Oh0tO!Y$|O~O(W(tO!X(wP~Oh0}O!Y0zO%b0|O(P%RO~OY1XO!W1VO!X(xX~O!X1YO~O^1[O_%gO'm%gO~O'v#mO'xTO'{UO~O#Y$eO#|$eOP(YXY(YXl(YXz(YX{(YX}(YX!W(YX!f(YX!i(YX!m(YX#h(YX#i(YX#j(YX#k(YX#l(YX#m(YX#n(YX#o(YX#r(YX#t(YX#v(YX#w(YX(T(YX(d(YX(k(YX(l(YX~O#p1_O&S1`O_(YX!g(YX~P$+sO#Y$eO#p1_O&S1`O~O_1bO~P%[O_1dO~O&]1gOP&ZiQ&ZiW&Zi_&Zib&Zic&Zij&Zil&Zim&Zin&Zit&Ziv&Zix&Zi}&Zi!R&Zi!S&Zi!Y&Zi!d&Zi!i&Zi!l&Zi!m&Zi!n&Zi!p&Zi!r&Zi!u&Zi!y&Zi#q&Zi$R&Zi$V&Zi%a&Zi%c&Zi%e&Zi%f&Zi%g&Zi%j&Zi%l&Zi%o&Zi%p&Zi%r&Zi&O&Zi&U&Zi&W&Zi&Y&Zi&[&Zi&_&Zi&e&Zi&k&Zi&m&Zi&o&Zi&q&Zi&s&Zi'k&Zi'v&Zi'x&Zi'{&Zi(T&Zi(c&Zi(p&Zi!X&Zi`&Zi&b&Zi~O`1mO!X1kO&b1lO~P`O!YXO!i1oO~O&i,jOP&diQ&diW&di_&dib&dic&dij&dil&dim&din&dit&div&dix&di}&di!R&di!S&di!Y&di!d&di!i&di!l&di!m&di!n&di!p&di!r&di!u&di!y&di#q&di$R&di$V&di%a&di%c&di%e&di%f&di%g&di%j&di%l&di%o&di%p&di%r&di&O&di&U&di&W&di&Y&di&[&di&_&di&e&di&k&di&m&di&o&di&q&di&s&di'k&di'v&di'x&di'{&di(T&di(c&di(p&di!X&di&]&di`&di&b&di~O!T1uO~O!W![a!X![a~P#C^Om!nO}!oO!V1{O(W!mO!W'PX!X'PX~P@OO!W,zO!X([a~O!W'VX!X'VX~P!7SO!W,}O!X(ja~O!X2SO~P'_O_%gO#Y2]O'm%gO~O_%gO!b#uO#Y2]O'm%gO~O_%gO!b#uO!m2aO#Y2]O'm%gO(d'gO~O_%gO'm%gO~P!7zO!W$aOp$la~O!T'Oi!W'Oi~P!7zO!W'{O!T(Zi~O!W(SO!T(hi~O!T(ii!W(ii~P!7zO!W(fi!h(fi_(fi'm(fi~P!7zO#Y2cO!W(fi!h(fi_(fi'm(fi~O!W(`O!h(ei~O}%aO!Y%bO!y]O#c2hO#d2gO'v%`O~O}%aO!Y%bO#d2gO'v%`O~Oh2oO!Y'VO%b2nO~Oh2oO!Y'VO%b2nO(P%RO~O#ewaPwaYwa_walwa!fwa!gwa!iwa!mwa#hwa#iwa#jwa#kwa#lwa#mwa#nwa#owa#pwa#rwa#twa#vwa#wwa'mwa(Twa(dwa!hwa!Twa'kwapwa!Ywa%bwa!bwa~P$ tO#e$maP$maY$ma_$mal$ma{$ma!f$ma!g$ma!i$ma!m$ma#h$ma#i$ma#j$ma#k$ma#l$ma#m$ma#n$ma#o$ma#p$ma#r$ma#t$ma#v$ma#w$ma'm$ma(T$ma(d$ma!h$ma!T$ma'k$map$ma!Y$ma%b$ma!b$ma~P$!jO#e$oaP$oaY$oa_$oal$oa{$oa!f$oa!g$oa!i$oa!m$oa#h$oa#i$oa#j$oa#k$oa#l$oa#m$oa#n$oa#o$oa#p$oa#r$oa#t$oa#v$oa#w$oa'm$oa(T$oa(d$oa!h$oa!T$oa'k$oap$oa!Y$oa%b$oa!b$oa~P$#]O#e$}aP$}aY$}a_$}al$}a{$}a!W$}a!f$}a!g$}a!i$}a!m$}a#h$}a#i$}a#j$}a#k$}a#l$}a#m$}a#n$}a#o$}a#p$}a#r$}a#t$}a#v$}a#w$}a'm$}a(T$}a(d$}a!h$}a!T$}a'k$}a#Y$}ap$}a!Y$}a%b$}a!b$}a~P#,sO_#]q!W#]q'm#]q'k#]q!T#]q!h#]qp#]q!Y#]q%b#]q!b#]q~P!7zOe'QX!W'QX~P!'vO!W._Oe(^a~O!V2wO!W'RX!h'RX~P%[O!W.bO!h(_a~O!W.bO!h(_a~P!7zO!T2zO~O#z!ka!X!ka~PJxO#z!ca!W!ca!X!ca~P#C^O#z!oa!X!oa~P!:eO#z!qa!X!qa~P!=OO!Y3^O$VfO$`3_O~O!X3cO~Op3dO~P#,sO_$iq!W$iq'm$iq'k$iq!T$iq!h$iqp$iq!Y$iq%b$iq!b$iq~P!7zO!T3eO~P#,sOz)vO})wO(l){Oh%Yi(k%Yi!W%Yi#Y%Yi~Oe%Yi#z%Yi~P$J]Oz)vO})wOh%[i(k%[i(l%[i!W%[i#Y%[i~Oe%[i#z%[i~P$KOO(d$ZO~P#,sO!V3hO'v%`O!W']X!h']X~O!W/VO!h(qa~O!W/VO!b#uO!h(qa~O!W/VO!b#uO(d'gO!h(qa~Oe$vi!W$vi#Y$vi#z$vi~P!0kO!V3pO'v*XO!T'_X!W'_X~P!1YO!W/_O!T(ra~O!W/_O!T(ra~P#,sO!b#uO#p3xO~Ol3{O!b#uO(d'gO~Oe(Ri!W(Ri~P!0kO#Y4OOe(Ri!W(Ri~P!0kO!h4RO~O_$jq!W$jq'm$jq'k$jq!T$jq!h$jqp$jq!Y$jq%b$jq!b$jq~P!7zO!T4VO~O!W4WO!Y(sX~P#,sO!g#wO~P4XO_$tX!Y$tX%VZX'm$tX!W$tX~P!/bO%V4YO_iXhiXziX}iX!YiX'miX(kiX(liX!WiX~O%V4YO~O`4`O%c4aO'v+bO'xTO'{UO!W'hX!X'hX~O!W0bO!X(za~OY4eO~O^4fO~O_%gO'm%gO~P#,sO!Y$|O~P#,sO!W4nO#Y4pO!X(wX~O!X4qO~Om!nO}4rO!]!xO!^!uO!_!uO!y9rO!}!pO#O!pO#P!pO#Q!pO#R!pO#U4wO#V!yO'w!lO'xTO'{UO(W!mO(c!sO~O!X4vO~P%%QOh4|O!Y0zO%b4{O~Oh4|O!Y0zO%b4{O(P%RO~O`5TO'v#mO'xTO'{UO!W'gX!X'gX~O!W1VO!X(xa~O'xTO'{UO(W5VO~O^5ZO~O#p5^O&S5_O~PMhO!h5`O~P%[O_5bO~O_5bO~P%[O`1mO!X5gO&b1lO~P`O!b5iO~O!b5kO!W(]i!X(]i!b(]i!i(]i(P(]i~O!W#bi!X#bi~P#C^O#Y5lO!W#bi!X#bi~O!W![i!X![i~P#C^O_%gO#Y5uO'm%gO~O_%gO!b#uO#Y5uO'm%gO~O!W(fq!h(fq_(fq'm(fq~P!7zO!W(`O!h(eq~O}%aO!Y%bO#d5|O'v%`O~O!Y'VO%b6PO~Oh6SO!Y'VO%b6PO~O#e%YiP%YiY%Yi_%Yil%Yi{%Yi!f%Yi!g%Yi!i%Yi!m%Yi#h%Yi#i%Yi#j%Yi#k%Yi#l%Yi#m%Yi#n%Yi#o%Yi#p%Yi#r%Yi#t%Yi#v%Yi#w%Yi'm%Yi(T%Yi(d%Yi!h%Yi!T%Yi'k%Yip%Yi!Y%Yi%b%Yi!b%Yi~P$J]O#e%[iP%[iY%[i_%[il%[i{%[i!f%[i!g%[i!i%[i!m%[i#h%[i#i%[i#j%[i#k%[i#l%[i#m%[i#n%[i#o%[i#p%[i#r%[i#t%[i#v%[i#w%[i'm%[i(T%[i(d%[i!h%[i!T%[i'k%[ip%[i!Y%[i%b%[i!b%[i~P$KOO#e$viP$viY$vi_$vil$vi{$vi!W$vi!f$vi!g$vi!i$vi!m$vi#h$vi#i$vi#j$vi#k$vi#l$vi#m$vi#n$vi#o$vi#p$vi#r$vi#t$vi#v$vi#w$vi'm$vi(T$vi(d$vi!h$vi!T$vi'k$vi#Y$vip$vi!Y$vi%b$vi!b$vi~P#,sOe'Qa!W'Qa~P!0kO!W'Ra!h'Ra~P!7zO!W.bO!h(_i~O#z#]i!W#]i!X#]i~P#C^OP$]Oz#yO{#zO}#{O!g#wO!i#xO!m$]O(TVOY#gil#gi!f#gi#i#gi#j#gi#k#gi#l#gi#m#gi#n#gi#o#gi#p#gi#r#gi#t#gi#v#gi#w#gi#z#gi(d#gi(k#gi(l#gi!W#gi!X#gi~O#h#gi~P%3jO#h9zO~P%3jOP$]Oz#yO{#zO}#{O!g#wO!i#xO!m$]O#h9zO#i9{O#j9{O#k9{O(TVOY#gi!f#gi#l#gi#m#gi#n#gi#o#gi#p#gi#r#gi#t#gi#v#gi#w#gi#z#gi(d#gi(k#gi(l#gi!W#gi!X#gi~Ol#gi~P%5uOl9|O~P%5uOP$]Ol9|Oz#yO{#zO}#{O!g#wO!i#xO!m$]O#h9zO#i9{O#j9{O#k9{O#l9}O(TVO#r#gi#t#gi#v#gi#w#gi#z#gi(d#gi(k#gi(l#gi!W#gi!X#gi~OY#gi!f#gi#m#gi#n#gi#o#gi#p#gi~P%8QOY:YO!f:OO#m:OO#n:OO#o:XO#p:OO~P%8QOP$]OY:YOl9|Oz#yO{#zO}#{O!f:OO!g#wO!i#xO!m$]O#h9zO#i9{O#j9{O#k9{O#l9}O#m:OO#n:OO#o:XO#p:OO#r:PO(TVO#t#gi#v#gi#w#gi#z#gi(d#gi(l#gi!W#gi!X#gi~O(k#gi~P%:lO(k#|O~P%:lOP$]OY:YOl9|Oz#yO{#zO}#{O!f:OO!g#wO!i#xO!m$]O#h9zO#i9{O#j9{O#k9{O#l9}O#m:OO#n:OO#o:XO#p:OO#r:PO#t:RO(TVO(k#|O#v#gi#w#gi#z#gi(d#gi!W#gi!X#gi~O(l#gi~P%<wO(l#}O~P%<wOP$]OY:YOl9|Oz#yO{#zO}#{O!f:OO!g#wO!i#xO!m$]O#h9zO#i9{O#j9{O#k9{O#l9}O#m:OO#n:OO#o:XO#p:OO#r:PO#t:RO#v:TO(TVO(k#|O(l#}O~O#w#gi#z#gi(d#gi!W#gi!X#gi~P%?SO_#xy!W#xy'm#xy'k#xy!T#xy!h#xyp#xy!Y#xy%b#xy!b#xy~P!7zOh;mOz)vO})wO(k)yO(l){O~OP#giY#gil#gi{#gi!f#gi!g#gi!i#gi!m#gi#h#gi#i#gi#j#gi#k#gi#l#gi#m#gi#n#gi#o#gi#p#gi#r#gi#t#gi#v#gi#w#gi#z#gi(T#gi(d#gi!W#gi!X#gi~P%AzO!g#wOP(SXY(SXh(SXl(SXz(SX{(SX}(SX!f(SX!i(SX!m(SX#h(SX#i(SX#j(SX#k(SX#l(SX#m(SX#n(SX#o(SX#p(SX#r(SX#t(SX#v(SX#w(SX#z(SX(T(SX(d(SX(k(SX(l(SX!W(SX!X(SX~O#z#{i!W#{i!X#{i~P#C^O#z!oi!X!oi~P$$zO!X6`O~O!W'[a!X'[a~P#C^O!b#uO(d'gO!W']a!h']a~O!W/VO!h(qi~O!W/VO!b#uO!h(qi~Oe$vq!W$vq#Y$vq#z$vq~P!0kO!T'_a!W'_a~P#,sO!b6gO~O!W/_O!T(ri~P#,sO!W/_O!T(ri~O!T6kO~O!b#uO#p6pO~Ol6qO!b#uO(d'gO~O!T6sO~Oe$xq!W$xq#Y$xq#z$xq~P!0kO_$jy!W$jy'm$jy'k$jy!T$jy!h$jyp$jy!Y$jy%b$jy!b$jy~P!7zO!b5kO~O!W4WO!Y(sa~O_#]y!W#]y'm#]y'k#]y!T#]y!h#]yp#]y!Y#]y%b#]y!b#]y~P!7zOY6xO~O`6zO'v+bO'xTO'{UO~O!W0bO!X(zi~O^7OO~O(W(tO!W'dX!X'dX~O!W4nO!X(wa~OjkO'v7VO~P.iO!X7YO~P%%QOm!nO}7ZO'xTO'{UO(W!mO(c!sO~O!Y0zO~O!Y0zO%b7]O~Oh7`O!Y0zO%b7]O~OY7eO!W'ga!X'ga~O!W1VO!X(xi~O!h7iO~O!h7jO~O!h7mO~O!h7mO~P%[O_7oO~O!b7pO~O!h7qO~O!W(ii!X(ii~P#C^O_%gO#Y7yO'm%gO~O!W(fy!h(fy_(fy'm(fy~P!7zO!W(`O!h(ey~O!Y'VO%b7|O~O#e$vqP$vqY$vq_$vql$vq{$vq!W$vq!f$vq!g$vq!i$vq!m$vq#h$vq#i$vq#j$vq#k$vq#l$vq#m$vq#n$vq#o$vq#p$vq#r$vq#t$vq#v$vq#w$vq'm$vq(T$vq(d$vq!h$vq!T$vq'k$vq#Y$vqp$vq!Y$vq%b$vq!b$vq~P#,sO#e$xqP$xqY$xq_$xql$xq{$xq!W$xq!f$xq!g$xq!i$xq!m$xq#h$xq#i$xq#j$xq#k$xq#l$xq#m$xq#n$xq#o$xq#p$xq#r$xq#t$xq#v$xq#w$xq'm$xq(T$xq(d$xq!h$xq!T$xq'k$xq#Y$xqp$xq!Y$xq%b$xq!b$xq~P#,sO!W'Ri!h'Ri~P!7zO#z#]q!W#]q!X#]q~P#C^Oz/yO{/yO}/zOPwaYwahwalwa!fwa!gwa!iwa!mwa#hwa#iwa#jwa#kwa#lwa#mwa#nwa#owa#pwa#rwa#twa#vwa#wwa#zwa(Twa(dwa(kwa(lwa!Wwa!Xwa~Oz)vO})wOP$maY$mah$mal$ma{$ma!f$ma!g$ma!i$ma!m$ma#h$ma#i$ma#j$ma#k$ma#l$ma#m$ma#n$ma#o$ma#p$ma#r$ma#t$ma#v$ma#w$ma#z$ma(T$ma(d$ma(k$ma(l$ma!W$ma!X$ma~Oz)vO})wOP$oaY$oah$oal$oa{$oa!f$oa!g$oa!i$oa!m$oa#h$oa#i$oa#j$oa#k$oa#l$oa#m$oa#n$oa#o$oa#p$oa#r$oa#t$oa#v$oa#w$oa#z$oa(T$oa(d$oa(k$oa(l$oa!W$oa!X$oa~OP$}aY$}al$}a{$}a!f$}a!g$}a!i$}a!m$}a#h$}a#i$}a#j$}a#k$}a#l$}a#m$}a#n$}a#o$}a#p$}a#r$}a#t$}a#v$}a#w$}a#z$}a(T$}a(d$}a!W$}a!X$}a~P%AzO#z$iq!W$iq!X$iq~P#C^O#z$jq!W$jq!X$jq~P#C^O!X8WO~O#z8XO~P!0kO!b#uO!W']i!h']i~O!b#uO(d'gO!W']i!h']i~O!W/VO!h(qq~O!T'_i!W'_i~P#,sO!W/_O!T(rq~O!T8_O~P#,sO!T8_O~Oe(Ry!W(Ry~P!0kO!W'ba!Y'ba~P#,sO_%Uq!Y%Uq'm%Uq!W%Uq~P#,sOY8dO~O!W0bO!X(zq~O#Y8hO!W'da!X'da~O!W4nO!X(wi~P#C^OPZXYZXlZXzZX{ZX}ZX!TZX!WZX!fZX!gZX!iZX!mZX#YZX#edX#hZX#iZX#jZX#kZX#lZX#mZX#nZX#oZX#pZX#rZX#tZX#vZX#wZX#|ZX(TZX(dZX(kZX(lZX~O!b%SX#p%SX~P&3YO!Y0zO%b8lO~O'xTO'{UO(W8qO~O!W1VO!X(xq~O!h8tO~O!h8uO~O!h8vO~O!h8vO~P%[O#Y8yO!W#by!X#by~O!W#by!X#by~P#C^O!Y'VO%b9OO~O#z#xy!W#xy!X#xy~P#C^OP$viY$vil$vi{$vi!f$vi!g$vi!i$vi!m$vi#h$vi#i$vi#j$vi#k$vi#l$vi#m$vi#n$vi#o$vi#p$vi#r$vi#t$vi#v$vi#w$vi#z$vi(T$vi(d$vi!W$vi!X$vi~P%AzOz)vO})wO(l){OP%YiY%Yih%Yil%Yi{%Yi!f%Yi!g%Yi!i%Yi!m%Yi#h%Yi#i%Yi#j%Yi#k%Yi#l%Yi#m%Yi#n%Yi#o%Yi#p%Yi#r%Yi#t%Yi#v%Yi#w%Yi#z%Yi(T%Yi(d%Yi(k%Yi!W%Yi!X%Yi~Oz)vO})wOP%[iY%[ih%[il%[i{%[i!f%[i!g%[i!i%[i!m%[i#h%[i#i%[i#j%[i#k%[i#l%[i#m%[i#n%[i#o%[i#p%[i#r%[i#t%[i#v%[i#w%[i#z%[i(T%[i(d%[i(k%[i(l%[i!W%[i!X%[i~O#z$jy!W$jy!X$jy~P#C^O#z#]y!W#]y!X#]y~P#C^O!b#uO!W']q!h']q~O!W/VO!h(qy~O!T'_q!W'_q~P#,sO!T9VO~P#,sO!W0bO!X(zy~O!W4nO!X(wq~O!Y0zO%b9^O~O!h9aO~O!Y'VO%b9fO~OP$vqY$vql$vq{$vq!f$vq!g$vq!i$vq!m$vq#h$vq#i$vq#j$vq#k$vq#l$vq#m$vq#n$vq#o$vq#p$vq#r$vq#t$vq#v$vq#w$vq#z$vq(T$vq(d$vq!W$vq!X$vq~P%AzOP$xqY$xql$xq{$xq!f$xq!g$xq!i$xq!m$xq#h$xq#i$xq#j$xq#k$xq#l$xq#m$xq#n$xq#o$xq#p$xq#r$xq#t$xq#v$xq#w$xq#z$xq(T$xq(d$xq!W$xq!X$xq~P%AzOe%^!Z!W%^!Z#Y%^!Z#z%^!Z~P!0kO!W'dq!X'dq~P#C^O!W#b!Z!X#b!Z~P#C^O#e%^!ZP%^!ZY%^!Z_%^!Zl%^!Z{%^!Z!W%^!Z!f%^!Z!g%^!Z!i%^!Z!m%^!Z#h%^!Z#i%^!Z#j%^!Z#k%^!Z#l%^!Z#m%^!Z#n%^!Z#o%^!Z#p%^!Z#r%^!Z#t%^!Z#v%^!Z#w%^!Z'm%^!Z(T%^!Z(d%^!Z!h%^!Z!T%^!Z'k%^!Z#Y%^!Zp%^!Z!Y%^!Z%b%^!Z!b%^!Z~P#,sOP%^!ZY%^!Zl%^!Z{%^!Z!f%^!Z!g%^!Z!i%^!Z!m%^!Z#h%^!Z#i%^!Z#j%^!Z#k%^!Z#l%^!Z#m%^!Z#n%^!Z#o%^!Z#p%^!Z#r%^!Z#t%^!Z#v%^!Z#w%^!Z#z%^!Z(T%^!Z(d%^!Z!W%^!Z!X%^!Z~P%AzOp(XX~P1qO'w!lO~P!*SO!TdX!WdX#YdX~P&3YOPZXYZXlZXzZX{ZX}ZX!WZX!WdX!fZX!gZX!iZX!mZX#YZX#YdX#edX#hZX#iZX#jZX#kZX#lZX#mZX#nZX#oZX#pZX#rZX#tZX#vZX#wZX#|ZX(TZX(dZX(kZX(lZX~O!bdX!hZX!hdX(ddX~P&HpOP9qOQ9qOb;bOc!iOjkOl9qOmkOnkOtkOv9qOx9qO}WO!RkO!SkO!YXO!d9tO!iZO!l9qO!m9qO!n9qO!p9uO!r9xO!u!hO$R!kO$VfO'v)UO'xTO'{UO(TVO(c[O(p;`O~O!W:VO!X$la~Oj%SOl$tOm$sOn$sOt%TOv%UOx:]O}${O!Y$|O!d;gO!i$xO#d:cO$R%YO$n:_O$p:aO$s%ZO'v(lO'xTO'{UO(P%RO(T$uO~O#q)]O~P&MfO!XZX!XdX~P&HpO#e9yO~O!b#uO#e9yO~O#Y:ZO~O#p:OO~O#Y:eO!W(iX!X(iX~O#Y:ZO!W(gX!X(gX~O#e:fO~Oe:hO~P!0kO#e:mO~O#e:nO~O!b#uO#e:oO~O!b#uO#e:fO~O#z:pO~P#C^O#e:qO~O#e:rO~O#e:sO~O#e:tO~O#e:uO~O#e:vO~O#z:wO~P!0kO#z:xO~P!0kO$V~!g!}#O#Q#R#U#c#d#o(p$n$p$s%V%a%b%c%j%l%o%p%r%t~'qR$V(p#i!S'o'w#jm#h#klz'p(W'p'v$X$Z$X~\",\n  goto: \"$'X)OPPPP)PPP)SP)eP*t.xPPPP5`PP5vP;r>yP?^P?^PPP?^PAOP?^P?^P?^PASPPAXPArPFjPPPFnPPPPFnIoPPPIuJpPFnPMOPPPP! ^FnPPPFnPFnP!#lFnP!'Q!(S!(]P!)P!)T!)PPPPPP!,`!(SPP!,|!-vP!0jFnFn!0o!3y!8`!8`!<UPPP!<]FnPPPPPPPPPPP!?jP!@{PPFn!BYPFnPFnFnFnFnPFn!ClPP!FtP!IxP!I|!JW!J[!J[P!FqP!J`!J`P!MdP!MhFnFn!Mn#!q?^P?^P?^?^P##|?^?^#%x?^#(X?^#)}?^?^#*l#,j#,j#,n#,v#,j#-OP#,jP?^#-h?^#.q?^?^5`PPP#/}PPP#0h#0hP#0hP#1O#0hPP#1UP#0{P#0{#1i#0{#2T#2Z5])S#2^)SP#2e#2e#2eP)SP)SP)SP)SPP)SP#2k#2nP#2n)SP#2rP#2uP)SP)SP)SP)SP)SP)S)SPP#2{#3R#3^#3d#3j#3p#3v#4U#4[#4b#4l#4r#4|#5]#5c#6T#6g#6m#6s#7R#7h#8y#9X#9_#9e#9k#9q#9{#:R#:X#:c#:u#:{PPPPPPPPPP#;RPPPPPPP#;v#>}P#@^#@e#@mPPPP#D{#Gr#NZ#N^#Na$ Y$ ]$ `$ g$ oPP$ u$ y$!q$#p$#t$$YPP$$^$$d$$hP$$k$$o$$r$%h$&P$&h$&l$&o$&r$&x$&{$'P$'TR!{RoqOXst!Z#c%f&i&k&l&n,b,g1g1jY!uQ'V-S0z4uQ%lvQ%tyQ%{|Q&a!VS&}!e,zQ']!iS'c!r!xS*_$|*dQ+`%uQ+m%}Q,R&ZQ-Q'UQ-['^Q-d'dQ/p*fQ1U,SR:d9u%OdOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%f%l%y&b&e&i&k&l&n&r&z'X'i'y'{(R(Y(n(r(v)u*x*|,_,b,g-W-`-n-t.b.i/z0P0a0}1_1`1b1d1g1j1l2]2c2w4r4|5^5_5b5u7Z7`7o7yS#p]9r!r)W$[$m'O)j,s,v.q1{3^4p5l8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cQ*o%VQ+e%wQ,T&^Q,[&fQ.X:[Q0W+WQ0[+YQ0g+fQ1^,YQ2k.UQ4`0bQ5T1VQ6R2oQ6X:]Q6z4aR8P6S&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%f%l%y&b&e&f&i&k&l&n&r&z'O'X'i'y'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;ct!nQ!r!u!x!y&}'U'V'c'd'e,z-Q-S-d0z4u4w$^$si#u#w$c$d$x${%W%X%])q)w)z)|)}*U*[*j*k+V+Y+q+t.T._/P/^/_/a/|0q0t0|2n3f3p3x4O4W4Y4{6P6g6p7]7|8X8l9O9^9f:X:Y:^:_:`:a:b:c:i:j:k:l:m:n:q:r:s:t:w:x;`;h;i;l;mQ&O|Q&{!eS'R%b,}Q+e%wQ,T&^Q/{*sQ0g+fQ0l+lQ1],XQ1^,YQ4`0bQ4i0nQ5T1VQ5W1XQ5X1[Q6z4aQ6}4fQ7h5ZQ8g7OR8r7ernOXst!V!Z#c%f&`&i&k&l&n,b,g1g1jR,V&b&v^OPXYstuvwz!Z!`!g!j!o#R#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%f%l%y&b&e&f&i&k&l&n&r&z'X'i'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;b;c[#[WZ#V#Y'O'y!S%cm#g#h#k%^%a(S(^(_(`*z*{*},^,t-r-x-y-z-|1o2g2h5k5|Q%oxQ%syS%x|%}Q&U!TQ'Y!hQ'[!iQ(g#rS*R$x*VS+_%t%uQ+c%wQ+|&XQ,Q&ZS-Z']'^Q.W(hQ/Z*SQ0`+`Q0f+fQ0h+gQ0k+kQ1P+}S1T,R,SQ2X-[Q3g/VQ4_0bQ4c0eQ4h0mQ5S1UQ6d3hQ6y4aQ6|4eQ8c6xR9X8dv$zi#w%W%X%])z)|*U*j*k._/^/|3f4O8X;`;h;i!S%qy!i!t%s%t%u&|'[']'^'b'l*^+_+`,w-Z-[-c/h0`2Q2X2`3zQ+X%oQ+r&RQ+u&SQ,P&ZQ.V(gQ1O+|U1S,Q,R,SQ2p.WQ4}1PS5R1T1UQ7d5S#O;d#u$c$d$x${)q)w)}*[+V+Y+q+t.T/P/_/a0q0t0|2n3p3x4W4Y4{6P6g6p7]7|8l9O9^9f:^:`:b:i:k:m:q:s:w;l;mg;e:X:Y:_:a:c:j:l:n:r:t:xW%Pi%R*l;`S&R!Q&`Q&S!RQ&T!SR+p&P$_%Oi#u#w$c$d$x${%W%X%])q)w)z)|)}*U*[*j*k+V+Y+q+t.T._/P/^/_/a/|0q0t0|2n3f3p3x4O4W4Y4{6P6g6p7]7|8X8l9O9^9f:X:Y:^:_:`:a:b:c:i:j:k:l:m:n:q:r:s:t:w:x;`;h;i;l;mT)r$u)sV*p%V:[:]U'R!e%b,}S(u#y#zQ+j%zS.P(c(dQ0u+vQ4P/yR7S4n&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%f%l%y&b&e&f&i&k&l&n&r&z'O'X'i'y'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;c$i$`c#X#d%j%k%m'x(O(j(q(y(z({(|(})O)P)Q)R)S)T)V)Y)^)h+T+i,x-g-l-q-s.^.d.h.j.k.l.{/}1v1y2Z2b2v2{2|2}3O3P3Q3R3S3T3U3V3W3X3[3]3b4T4]5n5t5y6V6W6]6^7U7s7w8Q8U8V8{9Z9b9s;VT#SV#T&}kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%f%l%y&b&e&f&i&k&l&n&r&z'O'X'i'y'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cQ'P!eR1|,zv!nQ!e!r!u!x!y&}'U'V'c'd'e,z-Q-S-d0z4u4wS*^$|*dS/h*_*fQ/q*gQ0w+xQ3z/pR3}/snqOXst!Z#c%f&i&k&l&n,b,g1g1jQ&p!^Q'm!wS(i#t9yQ+]%rQ+z&UQ+{&WQ-X'ZQ-f'fS.](n:fS0O*x:oQ0^+^Q0y+yQ1n,iQ1p,jQ1x,uQ2V-YQ2Y-^S4U0P:uQ4Z0_S4^0a:vQ5m1zQ5q2WQ5v2_Q6w4[Q7t5oQ7u5rQ7x5wR8x7q$d$_c#X#d%k%m'x(O(j(q(y(z({(|(})O)P)Q)R)S)T)V)Y)^)h+T+i,x-g-l-q-s.^.d.h.k.l.{/}1v1y2Z2b2v2{2|2}3O3P3Q3R3S3T3U3V3W3X3[3]3b4T4]5n5t5y6V6W6]6^7U7s7w8Q8U8V8{9Z9b9s;VS(f#o'`U*i$}(m3ZS+S%j.jQ2l0WQ6O2kQ8O6RR9P8P$d$^c#X#d%k%m'x(O(j(q(y(z({(|(})O)P)Q)R)S)T)V)Y)^)h+T+i,x-g-l-q-s.^.d.h.k.l.{/}1v1y2Z2b2v2{2|2}3O3P3Q3R3S3T3U3V3W3X3[3]3b4T4]5n5t5y6V6W6]6^7U7s7w8Q8U8V8{9Z9b9s;VS(e#o'`S(w#z$_S+R%j.jS.Q(d(fQ.m)XQ0T+SR2i.R&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%f%l%y&b&e&f&i&k&l&n&r&z'O'X'i'y'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cS#p]9rQ&k!XQ&l!YQ&n![Q&o!]R1f,eQ'W!hQ+U%oQ-V'YS.S(g+XQ2T-UW2m.V.W0V0XQ5p2UU5}2j2l2pS7{6O6QS8}7}8OS9d8|9PQ9l9eR9o9mU!vQ'V-ST4s0z4u!Q_OXZ`st!V!Z#c#g%^%f&`&b&i&k&l&n(`,b,g-y1g1j]!pQ!r'V-S0z4uT#p]9r%Y{OPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%f%l%y&b&e&f&i&k&l&n&r&z'X'i'y'{(R(Y(n(r(v)u*x*|+W,_,b,g-W-`-n-t.U.b.i/z0P0a0}1_1`1b1d1g1j1l2]2c2o2w4r4|5^5_5b5u6S7Z7`7o7yS(u#y#zS.P(c(d!s:|$[$m'O)j,s,v.q1{3^4p5l8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cY!tQ'V-S0z4uQ'b!rS'l!u!xS'n!y4wS-c'c'dQ-e'eR2`-dQ'k!tS([#f1aS-b'b'nQ/Y*RQ/f*^Q2a-eQ3l/ZS3u/g/qQ6c3gS6n3{3}Q8Z6dR8b6qQ#vbQ'j!tS(Z#f1aS(]#l*wQ*y%_Q+Z%pQ+a%vU-a'b'k'nQ-u([Q/X*RQ/e*^Q/k*aQ0]+[Q1Q,OS2^-b-eQ2f-}S3k/Y/ZS3t/f/qQ3w/jQ3y/lQ5P1RQ5x2aQ6b3gQ6f3lS6j3u3}Q6o3|Q7b5QS8Y6c6dQ8^6kQ8`6nQ8o7cQ9T8ZQ9U8_Q9W8bQ9`8pQ9h9VQ;P:zQ;[;TR;];UV!vQ'V-S%YaOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%f%l%y&b&e&f&i&k&l&n&r&z'X'i'y'{(R(Y(n(r(v)u*x*|+W,_,b,g-W-`-n-t.U.b.i/z0P0a0}1_1`1b1d1g1j1l2]2c2o2w4r4|5^5_5b5u6S7Z7`7o7yS#vz!j!r:y$[$m'O)j,s,v.q1{3^4p5l8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cR;P;b%YbOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%f%l%y&b&e&f&i&k&l&n&r&z'X'i'y'{(R(Y(n(r(v)u*x*|+W,_,b,g-W-`-n-t.U.b.i/z0P0a0}1_1`1b1d1g1j1l2]2c2o2w4r4|5^5_5b5u6S7Z7`7o7yQ%_j!S%py!i!t%s%t%u&|'[']'^'b'l*^+_+`,w-Z-[-c/h0`2Q2X2`3zS%vz!jQ+[%qQ,O&ZW1R,P,Q,R,SU5Q1S1T1US7c5R5SQ8p7d!r:z$[$m'O)j,s,v.q1{3^4p5l8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cQ;T;aR;U;b$|eOPXYstuvw!Z!`!g!o#R#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%f%l%y&b&e&i&k&l&n&r&z'X'i'{(R(Y(n(r(v)u*x*|+W,_,b,g-W-`-n-t.U.b.i/z0P0a0}1_1`1b1d1g1j1l2]2c2o2w4r4|5^5_5b5u6S7Z7`7o7yY#aWZ#V#Y'y!S%cm#g#h#k%^%a(S(^(_(`*z*{*},^,t-r-x-y-z-|1o2g2h5k5|Q,]&f!p:{$[$m)j,s,v.q1{3^4p5l8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cR;O'OS'S!e%bR2O,}%OdOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%f%l%y&b&e&i&k&l&n&r&z'X'i'y'{(R(Y(n(r(v)u*x*|,_,b,g-W-`-n-t.b.i/z0P0a0}1_1`1b1d1g1j1l2]2c2w4r4|5^5_5b5u7Z7`7o7y!r)W$[$m'O)j,s,v.q1{3^4p5l8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cQ,[&fQ0W+WQ2k.UQ6R2oR8P6S!f$Uc#X%j'x(O(j(q)Q)R)S)T)Y)^+i-g-l-q-s.^.d.{/}2Z2b2v3X4T4]5t5y6V7w8{9s!T:Q)V)h,x.j1v1y2{3T3U3V3W3[3b5n6W6]6^7U7s8Q8U8V9Z9b;V!b$Wc#X%j'x(O(j(q)S)T)Y)^+i-g-l-q-s.^.d.{/}2Z2b2v3X4T4]5t5y6V7w8{9s!P:S)V)h,x.j1v1y2{3V3W3[3b5n6W6]6^7U7s8Q8U8V9Z9b;V!^$[c#X%j'x(O(j(q)Y)^+i-g-l-q-s.^.d.{/}2Z2b2v3X4T4]5t5y6V7w8{9sQ3f/Tz;c)V)h,x.j1v1y2{3[3b5n6W6]6^7U7s8Q8U8V9Z9b;VQ;h;jR;i;k&|kOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m%f%l%y&b&e&f&i&k&l&n&r&z'O'X'i'y'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cS$nh$oR3_.p'TgOPWXYZhstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m$o%f%l%y&b&e&f&i&k&l&n&r&z'O'X'i'y'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.p.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cT$jf$pQ$hfS)a$k)eR)m$pT$if$pT)c$k)e'ThOPWXYZhstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$[$a$e$m$o%f%l%y&b&e&f&i&k&l&n&r&z'O'X'i'y'{(R(Y(n(r(v)j)u*x*|+W,_,b,g,s,v-W-`-n-t.U.b.i.p.q/z0P0a0}1_1`1b1d1g1j1l1{2]2c2o2w3^4p4r4|5^5_5b5l5u6S7Z7`7o7y8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;cT$nh$oQ$qhR)l$o%YjOPWXYZstuvw!Z!`!g!o#R#V#Y#c#n#t#x#{$O$P$Q$R$S$T$U$V$W$X$Y$a$e%f%l%y&b&e&f&i&k&l&n&r&z'X'i'y'{(R(Y(n(r(v)u*x*|+W,_,b,g-W-`-n-t.U.b.i/z0P0a0}1_1`1b1d1g1j1l2]2c2o2w4r4|5^5_5b5u6S7Z7`7o7y!s;a$[$m'O)j,s,v.q1{3^4p5l8h8y9q9t9u9x9y9z9{9|9}:O:P:Q:R:S:T:U:V:Z:d:e:f:h:o:p:u:v;c#clOPXZst!Z!`!o#R#c#n#{$m%f&b&e&f&i&k&l&n&r&z'X(v)j*|+W,_,b,g-W.U.q/z0}1_1`1b1d1g1j1l2o3^4r4|5^5_5b6S7Z7`7ov$}i#w%W%X%])z)|*U*j*k._/^/|3f4O8X;`;h;i#O(m#u$c$d$x${)q)w)}*[+V+Y+q+t.T/P/_/a0q0t0|2n3p3x4W4Y4{6P6g6p7]7|8l9O9^9f:^:`:b:i:k:m:q:s:w;l;mQ*t%ZQ.|)vg3Z:X:Y:_:a:c:j:l:n:r:t:xv$yi#w%W%X%])z)|*U*j*k._/^/|3f4O8X;`;h;iQ*W$zS*a$|*dQ*u%[Q/l*b#O;R#u$c$d$x${)q)w)}*[+V+Y+q+t.T/P/_/a0q0t0|2n3p3x4W4Y4{6P6g6p7]7|8l9O9^9f:^:`:b:i:k:m:q:s:w;l;mf;S:X:Y:_:a:c:j:l:n:r:t:xQ;W;dQ;X;eQ;Y;fR;Z;gv$}i#w%W%X%])z)|*U*j*k._/^/|3f4O8X;`;h;i#O(m#u$c$d$x${)q)w)}*[+V+Y+q+t.T/P/_/a0q0t0|2n3p3x4W4Y4{6P6g6p7]7|8l9O9^9f:^:`:b:i:k:m:q:s:w;l;mg3Z:X:Y:_:a:c:j:l:n:r:t:xnoOXst!Z#c%f&i&k&l&n,b,g1g1jQ*Z${Q,p&uQ,q&wR3o/_$^%Oi#u#w$c$d$x${%W%X%])q)w)z)|)}*U*[*j*k+V+Y+q+t.T._/P/^/_/a/|0q0t0|2n3f3p3x4O4W4Y4{6P6g6p7]7|8X8l9O9^9f:X:Y:^:_:`:a:b:c:i:j:k:l:m:n:q:r:s:t:w:x;`;h;i;l;mQ+s&SQ0s+uQ4l0rR7R4mT*c$|*dS*c$|*dT4t0z4uS/j*`4rT3|/r7ZQ+Z%pQ/k*aQ0]+[Q1Q,OQ5P1RQ7b5QQ8o7cR9`8pn)z$v(o*v/]/t/u2t3m4S6a6r9S;Q;^;_!Y:i(k)[*Q*Y.[.x.}/T/b0U0p0r2s3n3r4k4m6T6U6h6l6t6v8]8a9g;j;k]:j3Y6[8R9Q9R9pp)|$v(o*v/R/]/t/u2t3m4S6a6r9S;Q;^;_![:k(k)[*Q*Y.[.x.}/T/b0U0p0r2q2s3n3r4k4m6T6U6h6l6t6v8]8a9g;j;k_:l3Y6[8R8S9Q9R9prnOXst!V!Z#c%f&`&i&k&l&n,b,g1g1jQ&]!UR,_&frnOXst!V!Z#c%f&`&i&k&l&n,b,g1g1jR&]!UQ+w&TR0o+psnOXst!V!Z#c%f&`&i&k&l&n,b,g1g1jQ0{+|S4z1O1PU7[4x4y4}S8k7^7_S9[8j8mQ9i9]R9n9jQ&d!VR,W&`R5W1XS%x|%}R0h+gQ&i!WR,b&jR,h&oT1h,g1jR,l&pQ,k&pR1q,lQ'p!zR-h'pSsOtQ#cXT%is#cQ!}TR'r!}Q#QUR't#QQ)s$uR.y)sQ#TVR'v#TQ#WWU'|#W'}-oQ'}#XR-o(OQ,{'PR1},{Q.`(oR2u.`Q.c(qS2x.c2yR2y.dQ-S'VR2R-SY!rQ'V-S0z4uR'a!rS#^W%aU(T#^(U-pQ(U#_R-p(PQ-O'SR2P-Ot`OXst!V!Z#c%f&`&b&i&k&l&n,b,g1g1jS#gZ%^U#q`#g-yR-y(`Q(a#iQ-v(]W.O(a-v2d5zQ2d-wR5z2eQ)e$kR.r)eQ$ohR)k$oQ$bcU)Z$b-k:WQ-k9sR:W)hQ/W*RW3i/W3j6e8[U3j/X/Y/ZS6e3k3lR8[6f#o)x$v(k(o)[*Q*Y*q*r*v.Y.Z.[.x.}/R/S/T/]/b/t/u0U0p0r2q2r2s2t3Y3m3n3r4S4k4m6T6U6Y6Z6[6a6h6l6r6t6v8R8S8T8]8a9Q9R9S9g9p;Q;^;_;j;kQ/`*YU3q/`3s6iQ3s/bR6i3rQ*d$|R/n*dQ*m%QR/w*mQ4X0UR6u4XQ+O%dR0S+OQ4o0uS7T4o8iR8i7UQ+y&UR0x+yQ4u0zR7X4uQ1W,TS5U1W7fR7f5WQ0c+cW4b0c4d6{8eQ4d0fQ6{4cR8e6|Q+h%xR0i+hQ1j,gR5f1jYrOXst#cQ&m!ZQ+Q%fQ,a&iQ,c&kQ,d&lQ,f&nQ1e,bS1h,g1jR5e1gQ%hpQ&q!_Q&t!aQ&v!bQ&x!cQ'h!tQ+P%eQ+]%rQ+o&OQ,V&dQ,n&sW-_'b'j'k'nQ-f'fQ/m*cQ0^+^S1Z,W,ZQ1r,mQ1s,pQ1t,qQ2Y-^W2[-a-b-e-gQ4Z0_Q4g0lQ4j0pQ5O1QQ5Y1]Q5d1fU5s2Z2^2aQ5v2_Q6w4[Q7P4iQ7Q4kQ7W4tQ7a5PQ7g5XS7v5t5xQ7x5wQ8f6}Q8n7bQ8s7hQ8z7wQ9Y8gQ9_8oQ9c8{R9k9`Q%ryQ'Z!iQ'f!tU+^%s%t%uQ,u&|U-Y'[']'^S-^'b'lQ/d*^S0_+_+`Q1z,wS2W-Z-[Q2_-cQ3v/hQ4[0`Q5o2QQ5r2XQ5w2`R6m3zS$wi;`R*n%RU%Qi%R;`R/v*lQ$viS(k#u+YQ(o#wS)[$c$dQ*Q$xQ*Y${Q*q%WQ*r%XQ*v%]Q.Y:^Q.Z:`Q.[:bQ.x)qS.})w/PQ/R)zQ/S)|Q/T)}Q/]*UQ/b*[Q/t*jQ/u*kh0U+V.T0|2n4{6P7]7|8l9O9^9fQ0p+qQ0r+tQ2q:iQ2r:kQ2s:mQ2t._S3Y:X:YQ3m/^Q3n/_Q3r/aQ4S/|Q4k0qQ4m0tQ6T:qQ6U:sQ6Y:_Q6Z:aQ6[:cQ6a3fQ6h3pQ6l3xQ6r4OQ6t4WQ6v4YQ8R:nQ8S:jQ8T:lQ8]6gQ8a6pQ9Q:rQ9R:tQ9S8XQ9g:wQ9p:xQ;Q;`Q;^;hQ;_;iQ;j;lR;k;mnpOXst!Z#c%f&i&k&l&n,b,g1g1jQ!fPS#eZ#nQ&s!`U'_!o4r7ZQ'u#RQ(x#{Q)i$mS,Z&b&eQ,`&fQ,m&rQ,r&zQ-U'XQ.f(vQ.v)jQ0Q*|Q0X+WQ1c,_Q2U-WQ2l.UQ3a.qQ4Q/zQ4y0}Q5[1_Q5]1`Q5a1bQ5c1dQ5h1lQ6O2oQ6_3^Q7_4|Q7k5^Q7l5_Q7n5bQ8O6SQ8m7`R8w7o#WcOPXZst!Z!`!o#c#n#{%f&b&e&f&i&k&l&n&r&z'X(v*|+W,_,b,g-W.U/z0}1_1`1b1d1g1j1l2o4r4|5^5_5b6S7Z7`7oQ#XWQ#dYQ%juQ%kvS%mw!gS'x#V'{Q(O#YQ(j#tQ(q#xQ(y$OQ(z$PQ({$QQ(|$RQ(}$SQ)O$TQ)P$UQ)Q$VQ)R$WQ)S$XQ)T$YQ)V$[Q)Y$aQ)^$eW)h$m)j.q3^Q+T%lQ+i%yS,x'O1{Q-g'iS-l'y-nQ-q(RQ-s(YQ.^(nQ.d(rQ.h9qQ.j9tQ.k9uQ.l9xQ.{)uQ/}*xQ1v,sQ1y,vQ2Z-`Q2b-tQ2v.bQ2{9yQ2|9zQ2}9{Q3O9|Q3P9}Q3Q:OQ3R:PQ3S:QQ3T:RQ3U:SQ3V:TQ3W:UQ3X.iQ3[:ZQ3]:dQ3b:VQ4T0PQ4]0aQ5n:eQ5t2]Q5y2cQ6V2wQ6W:fQ6]:hQ6^:oQ7U4pQ7s5lQ7w5uQ8Q:pQ8U:uQ8V:vQ8{7yQ9Z8hQ9b8yQ9s#RR;V;cR#ZWR'Q!eY!tQ'V-S0z4uS&|!e,zQ'b!rS'l!u!xS'n!y4wS,w&}'US-c'c'dQ-e'eQ2Q-QR2`-dR(p#wR(s#xQ!fQT-R'V-S]!qQ!r'V-S0z4uQ#o]R'`9rT#jZ%^S#iZ%^S%dm,^U(]#g#h#kS-w(^(_Q-{(`Q0R*}Q2e-xU2f-y-z-|S5{2g2hR7z5|`#]W#V#Y%a'y(S*z-rr#fZm#g#h#k%^(^(_(`*}-x-y-z-|2g2h5|Q1a,^Q1w,tQ5j1oQ7r5kT:}'O*{T#`W%aS#_W%aS'z#V(SS(P#Y*zS,y'O*{T-m'y-rT'T!e%bQ$kfR)o$pT)d$k)eR3`.pT*T$x*VR*]${Q0V+VQ2j.TQ4x0|Q6Q2nQ7^4{Q7}6PQ8j7]Q8|7|Q9]8lQ9e9OQ9j9^R9m9fnqOXst!Z#c%f&i&k&l&n,b,g1g1jQ&c!VR,V&`tmOXst!U!V!Z#c%f&`&i&k&l&n,b,g1g1jR,^&fT%em,^R0v+vR,U&^Q%||R+n%}R+d%wT&g!W&jT&h!W&jT1i,g1j\",\n  nodeNames: \"⚠ ArithOp ArithOp LineComment BlockComment Script Hashbang ExportDeclaration export Star as VariableName String Escape from ; default FunctionDeclaration async function VariableDefinition > TypeParamList TypeDefinition extends ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType InterpolationEnd Interpolation InterpolationStart NullType null VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString Escape Interpolation super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression delete LogicOp BitOp YieldExpression yield AwaitExpression await ParenthesizedExpression ClassExpression class ClassBody MethodDeclaration Decorator @ MemberExpression PrivatePropertyName CallExpression declare Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly accessor Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof satisfies in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXBuiltin JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature PropertyDefinition CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var using TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try CatchClause catch FinallyClause finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement SingleExpression SingleClassItem\",\n  maxTerm: 367,\n  context: trackNewline,\n  nodeProps: [\n    [\"group\", -26,7,15,17,63,200,204,208,209,211,214,217,227,229,235,237,239,241,244,250,256,258,260,262,264,266,267,\"Statement\",-32,11,12,26,29,30,36,46,49,50,52,57,65,73,77,79,81,82,104,105,114,115,132,135,137,138,139,140,142,143,163,164,166,\"Expression\",-23,25,27,31,35,37,39,167,169,171,172,174,175,176,178,179,180,182,183,184,194,196,198,199,\"Type\",-3,85,97,103,\"ClassItem\"],\n    [\"openedBy\", 32,\"InterpolationStart\",51,\"[\",55,\"{\",70,\"(\",144,\"JSXStartTag\",156,\"JSXStartTag JSXStartCloseTag\"],\n    [\"closedBy\", 34,\"InterpolationEnd\",45,\"]\",56,\"}\",71,\")\",145,\"JSXSelfCloseEndTag JSXEndTag\",161,\"JSXEndTag\"]\n  ],\n  propSources: [jsHighlight],\n  skippedNodes: [0,3,4,270],\n  repeatNodeCount: 33,\n  tokenData: \"$Fl(CSR!bOX%ZXY+gYZ-yZ[+g[]%Z]^.c^p%Zpq+gqr/mrs3cst:_tuEruvJSvwLkwx! Yxy!'iyz!(sz{!)}{|!,q|}!.O}!O!,q!O!P!/Y!P!Q!9j!Q!R#8g!R![#:v![!]#Gv!]!^#IS!^!_#J^!_!`#Nu!`!a$#a!a!b$(n!b!c$,m!c!}Er!}#O$-w#O#P$/R#P#Q$4j#Q#R$5t#R#SEr#S#T$7R#T#o$8]#o#p$<m#p#q$=c#q#r$>s#r#s$@P#s$f%Z$f$g+g$g#BYEr#BY#BZ$AZ#BZ$ISEr$IS$I_$AZ$I_$I|Er$I|$I}$Df$I}$JO$Df$JO$JTEr$JT$JU$AZ$JU$KVEr$KV$KW$AZ$KW&FUEr&FU&FV$AZ&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$AZ?HUOEr(n%d_$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&j&hT$e&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c&j&zP;=`<%l&c'|'U]$e&j'|!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!b(SU'|!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}!b(iP;=`<%l'}'|(oP;=`<%l&}'[(y]$e&j'ypOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rp)wU'ypOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)rp*^P;=`<%l)r'[*dP;=`<%l(r#S*nX'yp'|!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g#S+^P;=`<%l*g(n+dP;=`<%l%Z(CS+rq$e&j'yp'|!b'o(;dOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p$f%Z$f$g+g$g#BY%Z#BY#BZ+g#BZ$IS%Z$IS$I_+g$I_$JT%Z$JT$JU+g$JU$KV%Z$KV$KW+g$KW&FU%Z&FU&FV+g&FV;'S%Z;'S;=`+a<%l?HT%Z?HT?HU+g?HUO%Z(CS.ST'z#S$e&j'p(;dO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c(CS.n_$e&j'yp'|!b'p(;dOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#`/x`$e&j!m$Ip'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S1V`#r$Id$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`2X!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S2d_#r$Id$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2b3l_'x$(n$e&j'|!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k*r4r_$e&j'|!bOY4kYZ5qZr4krs7nsw4kwx5qx!^4k!^!_8p!_#O4k#O#P5q#P#o4k#o#p8p#p;'S4k;'S;=`:X<%lO4k)`5vX$e&jOr5qrs6cs!^5q!^!_6y!_#o5q#o#p6y#p;'S5q;'S;=`7h<%lO5q)`6jT$`#t$e&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#t6|TOr6yrs7]s;'S6y;'S;=`7b<%lO6y#t7bO$`#t#t7eP;=`<%l6y)`7kP;=`<%l5q*r7w]$`#t$e&j'|!bOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}%W8uZ'|!bOY8pYZ6yZr8prs9hsw8pwx6yx#O8p#O#P6y#P;'S8p;'S;=`:R<%lO8p%W9oU$`#t'|!bOY'}Zw'}x#O'}#P;'S'};'S;=`(f<%lO'}%W:UP;=`<%l8p*r:[P;=`<%l4k#%|:hh$e&j'yp'|!bOY%ZYZ&cZq%Zqr<Srs&}st%ZtuCruw%Zwx(rx!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr(r<__US$e&j'yp'|!bOY<SYZ&cZr<Srs=^sw<Swx@nx!^<S!^!_Bm!_#O<S#O#P>`#P#o<S#o#pBm#p;'S<S;'S;=`Cl<%lO<S(Q=g]US$e&j'|!bOY=^YZ&cZw=^wx>`x!^=^!^!_?q!_#O=^#O#P>`#P#o=^#o#p?q#p;'S=^;'S;=`@h<%lO=^&n>gXUS$e&jOY>`YZ&cZ!^>`!^!_?S!_#o>`#o#p?S#p;'S>`;'S;=`?k<%lO>`S?XSUSOY?SZ;'S?S;'S;=`?e<%lO?SS?hP;=`<%l?S&n?nP;=`<%l>`!f?xWUS'|!bOY?qZw?qwx?Sx#O?q#O#P?S#P;'S?q;'S;=`@b<%lO?q!f@eP;=`<%l?q(Q@kP;=`<%l=^'`@w]US$e&j'ypOY@nYZ&cZr@nrs>`s!^@n!^!_Ap!_#O@n#O#P>`#P#o@n#o#pAp#p;'S@n;'S;=`Bg<%lO@ntAwWUS'ypOYApZrAprs?Ss#OAp#O#P?S#P;'SAp;'S;=`Ba<%lOAptBdP;=`<%lAp'`BjP;=`<%l@n#WBvYUS'yp'|!bOYBmZrBmrs?qswBmwxApx#OBm#O#P?S#P;'SBm;'S;=`Cf<%lOBm#WCiP;=`<%lBm(rCoP;=`<%l<S#%|C}i$e&j(c!L^'yp'|!bOY%ZYZ&cZr%Zrs&}st%ZtuCruw%Zwx(rx!Q%Z!Q![Cr![!^%Z!^!_*g!_!c%Z!c!}Cr!}#O%Z#O#P&c#P#R%Z#R#SCr#S#T%Z#T#oCr#o#p*g#p$g%Z$g;'SCr;'S;=`El<%lOCr#%|EoP;=`<%lCr(CSFRk$e&j'yp'|!b(W!LY'v&;d$X#tOY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr+dHRk$e&j'yp'|!b$X#tOY%ZYZ&cZr%Zrs&}st%ZtuGvuw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Gv![!^%Z!^!_*g!_!c%Z!c!}Gv!}#O%Z#O#P&c#P#R%Z#R#SGv#S#T%Z#T#oGv#o#p*g#p$g%Z$g;'SGv;'S;=`Iv<%lOGv+dIyP;=`<%lGv(CSJPP;=`<%lEr%#SJ_`$e&j'yp'|!b#j$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SKl_$e&j#|$Id'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%DfLva(l%<v$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sv%ZvwM{wx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#SNW`$e&j#v$Id'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$2b! c_'{$)`$e&j'ypOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b*Q!!i_$e&j'ypOY!!bYZ!#hZr!!brs!#hsw!!bwx!$xx!^!!b!^!_!%z!_#O!!b#O#P!#h#P#o!!b#o#p!%z#p;'S!!b;'S;=`!'c<%lO!!b)`!#mX$e&jOw!#hwx6cx!^!#h!^!_!$Y!_#o!#h#o#p!$Y#p;'S!#h;'S;=`!$r<%lO!#h#t!$]TOw!$Ywx7]x;'S!$Y;'S;=`!$l<%lO!$Y#t!$oP;=`<%l!$Y)`!$uP;=`<%l!#h*Q!%R]$`#t$e&j'ypOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(r$f!&PZ'ypOY!%zYZ!$YZr!%zrs!$Ysw!%zwx!&rx#O!%z#O#P!$Y#P;'S!%z;'S;=`!']<%lO!%z$f!&yU$`#t'ypOY)rZr)rs#O)r#P;'S)r;'S;=`*Z<%lO)r$f!'`P;=`<%l!%z*Q!'fP;=`<%l!!b(*Q!'t_!i(!b$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'l!)O_!hM|$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h!*[b$e&j'yp'|!b'w#)d#k$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rxz%Zz{!+d{!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S!+o`$e&j'yp'|!b#h$IdOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&-O!,|`$e&j'yp'|!bl&%`OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&C[!.Z_!W&;l$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!/ec$e&j'yp'|!bz'<nOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!0p!P!Q%Z!Q![!3Y![!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!0ya$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!2O!P!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z!'d!2Z_!VMt$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!3eg$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!3Y![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S!3Y#S#X%Z#X#Y!4|#Y#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!5Vg$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx{%Z{|!6n|}%Z}!O!6n!O!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!6wc$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l!8_c$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![!8S![!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S!8S#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS!9uf$e&j'yp'|!b#i$IdOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpxz!;Zz{#,f{!P!;Z!P!Q#-{!Q!^!;Z!^!_#'Z!_!`#5k!`!a#7Q!a!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(r!;fb$e&j'yp'|!b!SSOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(Q!<w`$e&j'|!b!SSOY!<nYZ&cZw!<nwx!=yx!P!<n!P!Q!Eb!Q!^!<n!^!_!GY!_!}!<n!}#O!Ja#O#P!Dj#P#o!<n#o#p!GY#p;'S!<n;'S;=`!Kj<%lO!<n&n!>Q^$e&j!SSOY!=yYZ&cZ!P!=y!P!Q!>|!Q!^!=y!^!_!@Y!_!}!=y!}#O!Bw#O#P!Dj#P#o!=y#o#p!@Y#p;'S!=y;'S;=`!E[<%lO!=y&n!?Ta$e&j!SSO!^&c!_#Z&c#Z#[!>|#[#]&c#]#^!>|#^#a&c#a#b!>|#b#g&c#g#h!>|#h#i&c#i#j!>|#j#m&c#m#n!>|#n#o&c#p;'S&c;'S;=`&w<%lO&cS!@_X!SSOY!@YZ!P!@Y!P!Q!@z!Q!}!@Y!}#O!Ac#O#P!Bb#P;'S!@Y;'S;=`!Bq<%lO!@YS!APU!SS#Z#[!@z#]#^!@z#a#b!@z#g#h!@z#i#j!@z#m#n!@zS!AfVOY!AcZ#O!Ac#O#P!A{#P#Q!@Y#Q;'S!Ac;'S;=`!B[<%lO!AcS!BOSOY!AcZ;'S!Ac;'S;=`!B[<%lO!AcS!B_P;=`<%l!AcS!BeSOY!@YZ;'S!@Y;'S;=`!Bq<%lO!@YS!BtP;=`<%l!@Y&n!B|[$e&jOY!BwYZ&cZ!^!Bw!^!_!Ac!_#O!Bw#O#P!Cr#P#Q!=y#Q#o!Bw#o#p!Ac#p;'S!Bw;'S;=`!Dd<%lO!Bw&n!CwX$e&jOY!BwYZ&cZ!^!Bw!^!_!Ac!_#o!Bw#o#p!Ac#p;'S!Bw;'S;=`!Dd<%lO!Bw&n!DgP;=`<%l!Bw&n!DoX$e&jOY!=yYZ&cZ!^!=y!^!_!@Y!_#o!=y#o#p!@Y#p;'S!=y;'S;=`!E[<%lO!=y&n!E_P;=`<%l!=y(Q!Eki$e&j'|!b!SSOY&}YZ&cZw&}wx&cx!^&}!^!_'}!_#O&}#O#P&c#P#Z&}#Z#[!Eb#[#]&}#]#^!Eb#^#a&}#a#b!Eb#b#g&}#g#h!Eb#h#i&}#i#j!Eb#j#m&}#m#n!Eb#n#o&}#o#p'}#p;'S&};'S;=`(l<%lO&}!f!GaZ'|!b!SSOY!GYZw!GYwx!@Yx!P!GY!P!Q!HS!Q!}!GY!}#O!Ic#O#P!Bb#P;'S!GY;'S;=`!JZ<%lO!GY!f!HZb'|!b!SSOY'}Zw'}x#O'}#P#Z'}#Z#[!HS#[#]'}#]#^!HS#^#a'}#a#b!HS#b#g'}#g#h!HS#h#i'}#i#j!HS#j#m'}#m#n!HS#n;'S'};'S;=`(f<%lO'}!f!IhX'|!bOY!IcZw!Icwx!Acx#O!Ic#O#P!A{#P#Q!GY#Q;'S!Ic;'S;=`!JT<%lO!Ic!f!JWP;=`<%l!Ic!f!J^P;=`<%l!GY(Q!Jh^$e&j'|!bOY!JaYZ&cZw!Jawx!Bwx!^!Ja!^!_!Ic!_#O!Ja#O#P!Cr#P#Q!<n#Q#o!Ja#o#p!Ic#p;'S!Ja;'S;=`!Kd<%lO!Ja(Q!KgP;=`<%l!Ja(Q!KmP;=`<%l!<n'`!Ky`$e&j'yp!SSOY!KpYZ&cZr!Kprs!=ys!P!Kp!P!Q!L{!Q!^!Kp!^!_!Ns!_!}!Kp!}#O##z#O#P!Dj#P#o!Kp#o#p!Ns#p;'S!Kp;'S;=`#%T<%lO!Kp'`!MUi$e&j'yp!SSOY(rYZ&cZr(rrs&cs!^(r!^!_)r!_#O(r#O#P&c#P#Z(r#Z#[!L{#[#](r#]#^!L{#^#a(r#a#b!L{#b#g(r#g#h!L{#h#i(r#i#j!L{#j#m(r#m#n!L{#n#o(r#o#p)r#p;'S(r;'S;=`*a<%lO(rt!NzZ'yp!SSOY!NsZr!Nsrs!@Ys!P!Ns!P!Q# m!Q!}!Ns!}#O#!|#O#P!Bb#P;'S!Ns;'S;=`##t<%lO!Nst# tb'yp!SSOY)rZr)rs#O)r#P#Z)r#Z#[# m#[#])r#]#^# m#^#a)r#a#b# m#b#g)r#g#h# m#h#i)r#i#j# m#j#m)r#m#n# m#n;'S)r;'S;=`*Z<%lO)rt##RX'ypOY#!|Zr#!|rs!Acs#O#!|#O#P!A{#P#Q!Ns#Q;'S#!|;'S;=`##n<%lO#!|t##qP;=`<%l#!|t##wP;=`<%l!Ns'`#$R^$e&j'ypOY##zYZ&cZr##zrs!Bws!^##z!^!_#!|!_#O##z#O#P!Cr#P#Q!Kp#Q#o##z#o#p#!|#p;'S##z;'S;=`#$}<%lO##z'`#%QP;=`<%l##z'`#%WP;=`<%l!Kp(r#%fk$e&j'yp'|!b!SSOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#Z%Z#Z#[#%Z#[#]%Z#]#^#%Z#^#a%Z#a#b#%Z#b#g%Z#g#h#%Z#h#i%Z#i#j#%Z#j#m%Z#m#n#%Z#n#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#W#'d]'yp'|!b!SSOY#'ZZr#'Zrs!GYsw#'Zwx!Nsx!P#'Z!P!Q#(]!Q!}#'Z!}#O#)w#O#P!Bb#P;'S#'Z;'S;=`#*w<%lO#'Z#W#(fe'yp'|!b!SSOY*gZr*grs'}sw*gwx)rx#O*g#P#Z*g#Z#[#(]#[#]*g#]#^#(]#^#a*g#a#b#(]#b#g*g#g#h#(]#h#i*g#i#j#(]#j#m*g#m#n#(]#n;'S*g;'S;=`+Z<%lO*g#W#*OZ'yp'|!bOY#)wZr#)wrs!Icsw#)wwx#!|x#O#)w#O#P!A{#P#Q#'Z#Q;'S#)w;'S;=`#*q<%lO#)w#W#*tP;=`<%l#)w#W#*zP;=`<%l#'Z(r#+W`$e&j'yp'|!bOY#*}YZ&cZr#*}rs!Jasw#*}wx##zx!^#*}!^!_#)w!_#O#*}#O#P!Cr#P#Q!;Z#Q#o#*}#o#p#)w#p;'S#*};'S;=`#,Y<%lO#*}(r#,]P;=`<%l#*}(r#,cP;=`<%l!;Z(CS#,sb$e&j'yp'|!b'q(;d!SSOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z(CS#.W_$e&j'yp'|!bR(;dOY#-{YZ&cZr#-{rs#/Vsw#-{wx#2gx!^#-{!^!_#4f!_#O#-{#O#P#0X#P#o#-{#o#p#4f#p;'S#-{;'S;=`#5e<%lO#-{(Bb#/`]$e&j'|!bR(;dOY#/VYZ&cZw#/Vwx#0Xx!^#/V!^!_#1j!_#O#/V#O#P#0X#P#o#/V#o#p#1j#p;'S#/V;'S;=`#2a<%lO#/V(AO#0`X$e&jR(;dOY#0XYZ&cZ!^#0X!^!_#0{!_#o#0X#o#p#0{#p;'S#0X;'S;=`#1d<%lO#0X(;d#1QSR(;dOY#0{Z;'S#0{;'S;=`#1^<%lO#0{(;d#1aP;=`<%l#0{(AO#1gP;=`<%l#0X(<v#1qW'|!bR(;dOY#1jZw#1jwx#0{x#O#1j#O#P#0{#P;'S#1j;'S;=`#2Z<%lO#1j(<v#2^P;=`<%l#1j(Bb#2dP;=`<%l#/V(Ap#2p]$e&j'ypR(;dOY#2gYZ&cZr#2grs#0Xs!^#2g!^!_#3i!_#O#2g#O#P#0X#P#o#2g#o#p#3i#p;'S#2g;'S;=`#4`<%lO#2g(<U#3pW'ypR(;dOY#3iZr#3irs#0{s#O#3i#O#P#0{#P;'S#3i;'S;=`#4Y<%lO#3i(<U#4]P;=`<%l#3i(Ap#4cP;=`<%l#2g(=h#4oY'yp'|!bR(;dOY#4fZr#4frs#1jsw#4fwx#3ix#O#4f#O#P#0{#P;'S#4f;'S;=`#5_<%lO#4f(=h#5bP;=`<%l#4f(CS#5hP;=`<%l#-{%#W#5xb$e&j#|$Id'yp'|!b!SSOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z+h#7_b$U#t$e&j'yp'|!b!SSOY!;ZYZ&cZr!;Zrs!<nsw!;Zwx!Kpx!P!;Z!P!Q#%Z!Q!^!;Z!^!_#'Z!_!}!;Z!}#O#*}#O#P!Dj#P#o!;Z#o#p#'Z#p;'S!;Z;'S;=`#,`<%lO!;Z$/l#8rp$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#:v![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#:v#S#U%Z#U#V#>Q#V#X%Z#X#Y!4|#Y#b%Z#b#c#<v#c#d#AY#d#l%Z#l#m#D[#m#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#;Rk$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P!3Y!P!Q%Z!Q![#:v![!^%Z!^!_*g!_!g%Z!g!h!4|!h#O%Z#O#P&c#P#R%Z#R#S#:v#S#X%Z#X#Y!4|#Y#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#=R_$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#>Zd$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#?i!R!S#?i!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#?i#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#?tf$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!R#?i!R!S#?i!S!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#?i#S#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Acc$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#Bn!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#Bn#S#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Bye$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q!Y#Bn!Y!^%Z!^!_*g!_#O%Z#O#P&c#P#R%Z#R#S#Bn#S#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#Deg$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#E|![!^%Z!^!_*g!_!c%Z!c!i#E|!i#O%Z#O#P&c#P#R%Z#R#S#E|#S#T%Z#T#Z#E|#Z#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z$/l#FXi$e&j'yp'|!bm$'|OY%ZYZ&cZr%Zrs&}sw%Zwx(rx!Q%Z!Q![#E|![!^%Z!^!_*g!_!c%Z!c!i#E|!i#O%Z#O#P&c#P#R%Z#R#S#E|#S#T%Z#T#Z#E|#Z#b%Z#b#c#<v#c#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh#HT_!b$b$e&j#z%<f'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z)[#I___l$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS#Jm^(P!*v!f'.r'yp'|!b$V)d(pSOY*gZr*grs'}sw*gwx)rx!P*g!P!Q#Ki!Q!^*g!^!_#L_!_!`#NP!`#O*g#P;'S*g;'S;=`+Z<%lO*g(n#KrX$g&j'yp'|!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#LhZ#l$Id'yp'|!bOY*gZr*grs'}sw*gwx)rx!_*g!_!`#MZ!`#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#MdX#|$Id'yp'|!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g$Kh#NYX#m$Id'yp'|!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Gh$ Qa#Y%?x$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`0z!`!a$!V!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#W$!b_#e$Ih$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%Gh$#paeBf#m$Id$b#|$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`$$u!`!a$&P!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$%Q_#m$Id$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$&[a#l$Id$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`!a$'a!a#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$'l`#l$Id$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+h$(yc(d$Ip$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!O%Z!O!P$*U!P!^%Z!^!_*g!_!a%Z!a!b$+`!b#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z'+`$*a_{'#p$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$+k`$e&j#w$Id'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z#&^$,x_!y!Ln$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(@^$.S_}(8n$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(n$/WZ$e&jO!^$/y!^!_$0a!_#i$/y#i#j$0f#j#l$/y#l#m$2X#m#o$/y#o#p$0a#p;'S$/y;'S;=`$4d<%lO$/y(n$0QT]#S$e&jO!^&c!_#o&c#p;'S&c;'S;=`&w<%lO&c#S$0fO]#S(n$0k[$e&jO!Q&c!Q![$1a![!^&c!_!c&c!c!i$1a!i#T&c#T#Z$1a#Z#o&c#o#p$3w#p;'S&c;'S;=`&w<%lO&c(n$1fZ$e&jO!Q&c!Q![$2X![!^&c!_!c&c!c!i$2X!i#T&c#T#Z$2X#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$2^Z$e&jO!Q&c!Q![$3P![!^&c!_!c&c!c!i$3P!i#T&c#T#Z$3P#Z#o&c#p;'S&c;'S;=`&w<%lO&c(n$3UZ$e&jO!Q&c!Q![$/y![!^&c!_!c&c!c!i$/y!i#T&c#T#Z$/y#Z#o&c#p;'S&c;'S;=`&w<%lO&c#S$3zR!Q![$4T!c!i$4T#T#Z$4T#S$4WS!Q![$4T!c!i$4T#T#Z$4T#q#r$0a(n$4gP;=`<%l$/y!2r$4u_!T!+S$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z%#S$6P`#t$Id$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z&,v$7^_$e&j'yp'|!b(T&%WOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$8lk$e&j'yp'|!b(W!LY'v&;d$Z#tOY%ZYZ&cZr%Zrs&}st%Ztu$8]uw%Zwx(rx}%Z}!O$:a!O!Q%Z!Q![$8]![!^%Z!^!_*g!_!c%Z!c!}$8]!}#O%Z#O#P&c#P#R%Z#R#S$8]#S#T%Z#T#o$8]#o#p*g#p$g%Z$g;'S$8];'S;=`$<g<%lO$8]+d$:lk$e&j'yp'|!b$Z#tOY%ZYZ&cZr%Zrs&}st%Ztu$:auw%Zwx(rx}%Z}!O$:a!O!Q%Z!Q![$:a![!^%Z!^!_*g!_!c%Z!c!}$:a!}#O%Z#O#P&c#P#R%Z#R#S$:a#S#T%Z#T#o$:a#o#p*g#p$g%Z$g;'S$:a;'S;=`$<a<%lO$:a+d$<dP;=`<%l$:a(CS$<jP;=`<%l$8]!5p$<vX!Y!3l'yp'|!bOY*gZr*grs'}sw*gwx)rx#O*g#P;'S*g;'S;=`+Z<%lO*g%Df$=na(k%<v$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_!`Ka!`#O%Z#O#P&c#P#o%Z#o#p*g#p#q$+`#q;'S%Z;'S;=`+a<%lO%Z%#`$?Q_!X$I`p`$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(r$@[_!nS$e&j'yp'|!bOY%ZYZ&cZr%Zrs&}sw%Zwx(rx!^%Z!^!_*g!_#O%Z#O#P&c#P#o%Z#o#p*g#p;'S%Z;'S;=`+a<%lO%Z(CS$Al|$e&j'yp'|!b'o(;d(W!LY'v&;d$X#tOX%ZXY+gYZ&cZ[+g[p%Zpq+gqr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$f%Z$f$g+g$g#BYEr#BY#BZ$AZ#BZ$ISEr$IS$I_$AZ$I_$JTEr$JT$JU$AZ$JU$KVEr$KV$KW$AZ$KW&FUEr&FU&FV$AZ&FV;'SEr;'S;=`I|<%l?HTEr?HT?HU$AZ?HUOEr(CS$Dwk$e&j'yp'|!b'p(;d(W!LY'v&;d$X#tOY%ZYZ&cZr%Zrs&}st%ZtuEruw%Zwx(rx}%Z}!OGv!O!Q%Z!Q![Er![!^%Z!^!_*g!_!c%Z!c!}Er!}#O%Z#O#P&c#P#R%Z#R#SEr#S#T%Z#T#oEr#o#p*g#p$g%Z$g;'SEr;'S;=`I|<%lOEr\",\n  tokenizers: [noSemicolon, incdecToken, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, insertSemicolon, new LocalTokenGroup(\"$S~RRtu[#O#Pg#S#T#|~_P#o#pb~gOr~~jVO#i!P#i#j!U#j#l!P#l#m!q#m;'S!P;'S;=`#v<%lO!P~!UO!P~~!XS!Q![!e!c!i!e#T#Z!e#o#p#Z~!hR!Q![!q!c!i!q#T#Z!q~!tR!Q![!}!c!i!}#T#Z!}~#QR!Q![!P!c!i!P#T#Z!P~#^R!Q![#g!c!i#g#T#Z#g~#jS!Q![#g!c!i#g#T#Z#g#q#r!P~#yP;=`<%l!P~$RO(V~~\", 141, 328), new LocalTokenGroup(\"j~RQYZXz{^~^O's~~aP!P!Qd~iO't~~\", 25, 310)],\n  topRules: {\"Script\":[0,5],\"SingleExpression\":[1,268],\"SingleClassItem\":[2,269]},\n  dialects: {jsx: 12842, ts: 12844},\n  dynamicPrecedences: {\"67\":1,\"77\":1,\"79\":1,\"164\":1,\"192\":1},\n  specialized: [{term: 314, get: (value) => spec_identifier[value] || -1},{term: 330, get: (value) => spec_word[value] || -1},{term: 68, get: (value) => spec_LessThan[value] || -1}],\n  tokenPrec: 12868\n});\n\nexport { parser };\n","import { LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\nconst jsonHighlighting = styleTags({\n  String: tags.string,\n  Number: tags.number,\n  \"True False\": tags.bool,\n  PropertyName: tags.propertyName,\n  Null: tags.null,\n  \",\": tags.separator,\n  \"[ ]\": tags.squareBracket,\n  \"{ }\": tags.brace\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [\"openedBy\", 7,\"{\",12,\"[\"],\n    [\"closedBy\", 8,\"}\",13,\"]\"]\n  ],\n  propSources: [jsonHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(|~RaXY!WYZ!W]^!Wpq!Wrs!]|}$u}!O$z!Q!R%T!R![&c![!]&t!}#O&y#P#Q'O#Y#Z'T#b#c'r#h#i(Z#o#p(r#q#r(w~!]Oc~~!`Wpq!]qr!]rs!xs#O!]#O#P!}#P;'S!];'S;=`$o<%lO!]~!}Oe~~#QXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#m~#pR!Q![#y!c!i#y#T#Z#y~#|R!Q![$V!c!i$V#T#Z$V~$YR!Q![$c!c!i$c#T#Z$c~$fR!Q![!]!c!i!]#T#Z!]~$rP;=`<%l!]~$zOh~~$}Q!Q!R%T!R![&c~%YRT~!O!P%c!g!h%w#X#Y%w~%fP!Q![%i~%nRT~!Q![%i!g!h%w#X#Y%w~%zR{|&T}!O&T!Q![&Z~&WP!Q![&Z~&`PT~!Q![&Z~&hST~!O!P%c!Q![&c!g!h%w#X#Y%w~&yOg~~'OO]~~'TO[~~'WP#T#U'Z~'^P#`#a'a~'dP#g#h'g~'jP#X#Y'm~'rOR~~'uP#i#j'x~'{P#`#a(O~(RP#`#a(U~(ZOS~~(^P#f#g(a~(dP#i#j(g~(jP#X#Y(m~(rOQ~~(wOW~~(|OV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { Parser, NodeProp, NodeSet, NodeType, DefaultBufferLength, Tree, IterMode } from '@lezer/common';\n\n/**\nA parse stack. These are used internally by the parser to track\nparsing progress. They also provide some properties and methods\nthat external code such as a tokenizer can use to get information\nabout the parse state.\n*/\nclass Stack {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The parse that this stack is part of @internal\n    */\n    p, \n    /**\n    Holds state, input pos, buffer index triplets for all but the\n    top state @internal\n    */\n    stack, \n    /**\n    The current parse state @internal\n    */\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /**\n    @internal\n    */\n    reducePos, \n    /**\n    The input position up to which this stack has parsed.\n    */\n    pos, \n    /**\n    The dynamic score of the stack, including dynamic precedence\n    and error-recovery penalties\n    @internal\n    */\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /**\n    @internal\n    */\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /**\n    @internal\n    */\n    bufferBase, \n    /**\n    @internal\n    */\n    curContext, \n    /**\n    @internal\n    */\n    lookAhead = 0, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /**\n    @internal\n    */\n    parent) {\n        this.p = p;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.curContext = curContext;\n        this.lookAhead = lookAhead;\n        this.parent = parent;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /**\n    @internal\n    */\n    static start(p, state, pos = 0) {\n        let cx = p.parser.context;\n        return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);\n    }\n    /**\n    The stack's current [context](#lr.ContextTracker) value, if\n    any. Its type will depend on the context tracker's type\n    parameter, or it will be `null` if there is no context\n    tracker.\n    */\n    get context() { return this.curContext ? this.curContext.context : null; }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /**\n    @internal\n    */\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /**\n    @internal\n    */\n    reduce(action) {\n        var _a;\n        let depth = action >> 19 /* Action.ReduceDepthShift */, type = action & 65535 /* Action.ValueMask */;\n        let { parser } = this.p;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.reduceContext(type, this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* Action.StayFlag */ ? 6 : 0);\n        let start = base ? this.stack[base - 2] : this.p.ranges[0].from, size = this.reducePos - start;\n        // This is a kludge to try and detect overly deep left-associative\n        // trees, which will not increase the parse stack depth and thus\n        // won't be caught by the regular stack-depth limit check.\n        if (size >= 2000 /* Recover.MinBigReduction */ && !((_a = this.p.parser.nodeSet.types[type]) === null || _a === void 0 ? void 0 : _a.isAnonymous)) {\n            if (start == this.p.lastBigReductionStart) {\n                this.p.bigReductionCount++;\n                this.p.lastBigReductionSize = size;\n            }\n            else if (this.p.lastBigReductionSize < size) {\n                this.p.bigReductionCount = 1;\n                this.p.lastBigReductionStart = start;\n                this.p.lastBigReductionSize = size;\n            }\n        }\n        let bufferBase = base ? this.stack[base - 1] : 0, count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* Action.RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* StateFlag.Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* Action.StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n        this.reduceContext(type, start);\n    }\n    // Shift a value into the buffer\n    /**\n    @internal\n    */\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Term.Err */ &&\n            (!this.stack.length || this.stack[this.stack.length - 1] < this.buffer.length + this.bufferBase)) {\n            // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Term.Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Term.Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /**\n    @internal\n    */\n    shift(action, type, start, end) {\n        if (action & 131072 /* Action.GotoFlag */) {\n            this.pushState(action & 65535 /* Action.ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* Action.StayFlag */) == 0) { // Regular shift\n            let nextState = action, { parser } = this.p;\n            if (end > this.pos || type <= parser.maxNode) {\n                this.pos = end;\n                if (!parser.stateFlag(nextState, 1 /* StateFlag.Skipped */))\n                    this.reducePos = end;\n            }\n            this.pushState(nextState, start);\n            this.shiftContext(type, start);\n            if (type <= parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            this.pos = end;\n            this.shiftContext(type, start);\n            if (type <= this.p.parser.maxNode)\n                this.buffer.push(type, start, end, 4);\n        }\n    }\n    // Apply an action\n    /**\n    @internal\n    */\n    apply(action, next, nextStart, nextEnd) {\n        if (action & 65536 /* Action.ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextStart, nextEnd);\n    }\n    // Add a prebuilt (reused) node into the buffer.\n    /**\n    @internal\n    */\n    useNode(value, next) {\n        let index = this.p.reused.length - 1;\n        if (index < 0 || this.p.reused[index] != value) {\n            this.p.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /**\n    @internal\n    */\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /**\n    @internal\n    */\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.p.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd, 4);\n        this.storeNode(0 /* Term.Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 190 /* Recover.Delete */;\n    }\n    /**\n    Check if the given term would be able to be shifted (optionally\n    after some reductions) on this stack. This can be useful for\n    external tokenizers that want to make sure they only provide a\n    given token when it applies.\n    */\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.p.parser.stateSlot(sim.state, 4 /* ParseState.DefaultReduce */) || this.p.parser.hasAction(sim.state, term);\n            if (action == 0)\n                return false;\n            if ((action & 65536 /* Action.ReduceFlag */) == 0)\n                return true;\n            sim.reduce(action);\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /**\n    @internal\n    */\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* Recover.MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.p.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* Recover.MaxNext */ << 1 || this.stack.length >= 120 /* Recover.DampenInsertStackDepth */) {\n            let best = [];\n            for (let i = 0, s; i < nextStates.length; i += 2) {\n                if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))\n                    best.push(nextStates[i], s);\n            }\n            if (this.stack.length < 120 /* Recover.DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* Recover.MaxNext */ << 1 && i < nextStates.length; i += 2) {\n                    let s = nextStates[i + 1];\n                    if (!best.some((v, i) => (i & 1) && v == s))\n                        best.push(nextStates[i], s);\n                }\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* Recover.MaxNext */; i += 2) {\n            let s = nextStates[i + 1];\n            if (s == this.state)\n                continue;\n            let stack = this.split();\n            stack.pushState(s, this.pos);\n            stack.storeNode(0 /* Term.Err */, stack.pos, stack.pos, 4, true);\n            stack.shiftContext(nextStates[i], this.pos);\n            stack.reducePos = this.pos;\n            stack.score -= 200 /* Recover.Insert */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /**\n    @internal\n    */\n    forceReduce() {\n        let { parser } = this.p;\n        let reduce = parser.stateSlot(this.state, 5 /* ParseState.ForcedReduce */);\n        if ((reduce & 65536 /* Action.ReduceFlag */) == 0)\n            return false;\n        if (!parser.validAction(this.state, reduce)) {\n            let depth = reduce >> 19 /* Action.ReduceDepthShift */, term = reduce & 65535 /* Action.ValueMask */;\n            let target = this.stack.length - depth * 3;\n            if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0) {\n                let backup = this.findForcedReduction();\n                if (backup == null)\n                    return false;\n                reduce = backup;\n            }\n            this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n            this.score -= 100 /* Recover.Reduce */;\n        }\n        this.reducePos = this.pos;\n        this.reduce(reduce);\n        return true;\n    }\n    /**\n    Try to scan through the automaton to find some kind of reduction\n    that can be applied. Used when the regular ForcedReduce field\n    isn't a valid action. @internal\n    */\n    findForcedReduction() {\n        let { parser } = this.p, seen = [];\n        let explore = (state, depth) => {\n            if (seen.includes(state))\n                return;\n            seen.push(state);\n            return parser.allActions(state, (action) => {\n                if (action & (262144 /* Action.StayFlag */ | 131072 /* Action.GotoFlag */)) ;\n                else if (action & 65536 /* Action.ReduceFlag */) {\n                    let rDepth = (action >> 19 /* Action.ReduceDepthShift */) - depth;\n                    if (rDepth > 1) {\n                        let term = action & 65535 /* Action.ValueMask */, target = this.stack.length - rDepth * 3;\n                        if (target >= 0 && parser.getGoto(this.stack[target], term, false) >= 0)\n                            return (rDepth << 19 /* Action.ReduceDepthShift */) | 65536 /* Action.ReduceFlag */ | term;\n                    }\n                }\n                else {\n                    let found = explore(action, depth + 1);\n                    if (found != null)\n                        return found;\n                }\n            });\n        };\n        return explore(this.state, 0);\n    }\n    /**\n    @internal\n    */\n    forceAll() {\n        while (!this.p.parser.stateFlag(this.state, 2 /* StateFlag.Accepting */)) {\n            if (!this.forceReduce()) {\n                this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n                break;\n            }\n        }\n        return this;\n    }\n    /**\n    Check whether this state has no further actions (assumed to be a direct descendant of the\n    top state, since any other states must be able to continue\n    somehow). @internal\n    */\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.p;\n        return parser.data[parser.stateSlot(this.state, 1 /* ParseState.Actions */)] == 65535 /* Seq.End */ &&\n            !parser.stateSlot(this.state, 4 /* ParseState.DefaultReduce */);\n    }\n    /**\n    Restart the stack (put it back in its start state). Only safe\n    when this.stack.length == 3 (state is directly below the top\n    state). @internal\n    */\n    restart() {\n        this.storeNode(0 /* Term.Err */, this.pos, this.pos, 4, true);\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /**\n    @internal\n    */\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /**\n    Get the parser used by this stack.\n    */\n    get parser() { return this.p.parser; }\n    /**\n    Test whether a given dialect (by numeric ID, as exported from\n    the terms file) is enabled.\n    */\n    dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }\n    shiftContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    reduceContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    /**\n    @internal\n    */\n    emitContext() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -3)\n            this.buffer.push(this.curContext.hash, this.pos, this.pos, -3);\n    }\n    /**\n    @internal\n    */\n    emitLookAhead() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -4)\n            this.buffer.push(this.lookAhead, this.pos, this.pos, -4);\n    }\n    updateContext(context) {\n        if (context != this.curContext.context) {\n            let newCx = new StackContext(this.curContext.tracker, context);\n            if (newCx.hash != this.curContext.hash)\n                this.emitContext();\n            this.curContext = newCx;\n        }\n    }\n    /**\n    @internal\n    */\n    setLookAhead(lookAhead) {\n        if (lookAhead > this.lookAhead) {\n            this.emitLookAhead();\n            this.lookAhead = lookAhead;\n        }\n    }\n    /**\n    @internal\n    */\n    close() {\n        if (this.curContext && this.curContext.tracker.strict)\n            this.emitContext();\n        if (this.lookAhead > 0)\n            this.emitLookAhead();\n    }\n}\nclass StackContext {\n    constructor(tracker, context) {\n        this.tracker = tracker;\n        this.context = context;\n        this.hash = tracker.strict ? tracker.hash(context) : 0;\n    }\n}\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(start) {\n        this.start = start;\n        this.state = start.state;\n        this.stack = start.stack;\n        this.base = this.stack.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* Action.ValueMask */, depth = action >> 19 /* Action.ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.stack == this.start.stack)\n                this.stack = this.stack.slice();\n            this.stack.push(this.state, 0, 0);\n            this.base += 3;\n        }\n        else {\n            this.base -= (depth - 1) * 3;\n        }\n        let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);\n        this.state = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack, pos = stack.bufferBase + stack.buffer.length) {\n        return new StackBufferCursor(stack, pos, pos - stack.bufferBase);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* Encode.BigValCode */) {\n                value = 65535 /* Encode.BigVal */;\n                break;\n            }\n            if (next >= 92 /* Encode.Gap2 */)\n                next--;\n            if (next >= 34 /* Encode.Gap1 */)\n                next--;\n            let digit = next - 32 /* Encode.Start */;\n            if (digit >= 46 /* Encode.Base */) {\n                digit -= 46 /* Encode.Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Encode.Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\nclass CachedToken {\n    constructor() {\n        this.start = -1;\n        this.value = -1;\n        this.end = -1;\n        this.extended = -1;\n        this.lookAhead = 0;\n        this.mask = 0;\n        this.context = 0;\n    }\n}\nconst nullToken = new CachedToken;\n/**\n[Tokenizers](#lr.ExternalTokenizer) interact with the input\nthrough this interface. It presents the input as a stream of\ncharacters, tracking lookahead and hiding the complexity of\n[ranges](#common.Parser.parse^ranges) from tokenizer code.\n*/\nclass InputStream {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    input, \n    /**\n    @internal\n    */\n    ranges) {\n        this.input = input;\n        this.ranges = ranges;\n        /**\n        @internal\n        */\n        this.chunk = \"\";\n        /**\n        @internal\n        */\n        this.chunkOff = 0;\n        /**\n        Backup chunk\n        */\n        this.chunk2 = \"\";\n        this.chunk2Pos = 0;\n        /**\n        The character code of the next code unit in the input, or -1\n        when the stream is at the end of the input.\n        */\n        this.next = -1;\n        /**\n        @internal\n        */\n        this.token = nullToken;\n        this.rangeIndex = 0;\n        this.pos = this.chunkPos = ranges[0].from;\n        this.range = ranges[0];\n        this.end = ranges[ranges.length - 1].to;\n        this.readNext();\n    }\n    /**\n    @internal\n    */\n    resolveOffset(offset, assoc) {\n        let range = this.range, index = this.rangeIndex;\n        let pos = this.pos + offset;\n        while (pos < range.from) {\n            if (!index)\n                return null;\n            let next = this.ranges[--index];\n            pos -= range.from - next.to;\n            range = next;\n        }\n        while (assoc < 0 ? pos > range.to : pos >= range.to) {\n            if (index == this.ranges.length - 1)\n                return null;\n            let next = this.ranges[++index];\n            pos += next.from - range.to;\n            range = next;\n        }\n        return pos;\n    }\n    /**\n    @internal\n    */\n    clipPos(pos) {\n        if (pos >= this.range.from && pos < this.range.to)\n            return pos;\n        for (let range of this.ranges)\n            if (range.to > pos)\n                return Math.max(pos, range.from);\n        return this.end;\n    }\n    /**\n    Look at a code unit near the stream position. `.peek(0)` equals\n    `.next`, `.peek(-1)` gives you the previous character, and so\n    on.\n    \n    Note that looking around during tokenizing creates dependencies\n    on potentially far-away content, which may reduce the\n    effectiveness incremental parsing—when looking forward—or even\n    cause invalid reparses when looking backward more than 25 code\n    units, since the library does not track lookbehind.\n    */\n    peek(offset) {\n        let idx = this.chunkOff + offset, pos, result;\n        if (idx >= 0 && idx < this.chunk.length) {\n            pos = this.pos + offset;\n            result = this.chunk.charCodeAt(idx);\n        }\n        else {\n            let resolved = this.resolveOffset(offset, 1);\n            if (resolved == null)\n                return -1;\n            pos = resolved;\n            if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {\n                result = this.chunk2.charCodeAt(pos - this.chunk2Pos);\n            }\n            else {\n                let i = this.rangeIndex, range = this.range;\n                while (range.to <= pos)\n                    range = this.ranges[++i];\n                this.chunk2 = this.input.chunk(this.chunk2Pos = pos);\n                if (pos + this.chunk2.length > range.to)\n                    this.chunk2 = this.chunk2.slice(0, range.to - pos);\n                result = this.chunk2.charCodeAt(0);\n            }\n        }\n        if (pos >= this.token.lookAhead)\n            this.token.lookAhead = pos + 1;\n        return result;\n    }\n    /**\n    Accept a token. By default, the end of the token is set to the\n    current stream position, but you can pass an offset (relative to\n    the stream position) to change that.\n    */\n    acceptToken(token, endOffset = 0) {\n        let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;\n        if (end == null || end < this.token.start)\n            throw new RangeError(\"Token end out of bounds\");\n        this.token.value = token;\n        this.token.end = end;\n    }\n    getChunk() {\n        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n            let { chunk, chunkPos } = this;\n            this.chunk = this.chunk2;\n            this.chunkPos = this.chunk2Pos;\n            this.chunk2 = chunk;\n            this.chunk2Pos = chunkPos;\n            this.chunkOff = this.pos - this.chunkPos;\n        }\n        else {\n            this.chunk2 = this.chunk;\n            this.chunk2Pos = this.chunkPos;\n            let nextChunk = this.input.chunk(this.pos);\n            let end = this.pos + nextChunk.length;\n            this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;\n            this.chunkPos = this.pos;\n            this.chunkOff = 0;\n        }\n    }\n    readNext() {\n        if (this.chunkOff >= this.chunk.length) {\n            this.getChunk();\n            if (this.chunkOff == this.chunk.length)\n                return this.next = -1;\n        }\n        return this.next = this.chunk.charCodeAt(this.chunkOff);\n    }\n    /**\n    Move the stream forward N (defaults to 1) code units. Returns\n    the new value of [`next`](#lr.InputStream.next).\n    */\n    advance(n = 1) {\n        this.chunkOff += n;\n        while (this.pos + n >= this.range.to) {\n            if (this.rangeIndex == this.ranges.length - 1)\n                return this.setDone();\n            n -= this.range.to - this.pos;\n            this.range = this.ranges[++this.rangeIndex];\n            this.pos = this.range.from;\n        }\n        this.pos += n;\n        if (this.pos >= this.token.lookAhead)\n            this.token.lookAhead = this.pos + 1;\n        return this.readNext();\n    }\n    setDone() {\n        this.pos = this.chunkPos = this.end;\n        this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];\n        this.chunk = \"\";\n        return this.next = -1;\n    }\n    /**\n    @internal\n    */\n    reset(pos, token) {\n        if (token) {\n            this.token = token;\n            token.start = pos;\n            token.lookAhead = pos + 1;\n            token.value = token.extended = -1;\n        }\n        else {\n            this.token = nullToken;\n        }\n        if (this.pos != pos) {\n            this.pos = pos;\n            if (pos == this.end) {\n                this.setDone();\n                return this;\n            }\n            while (pos < this.range.from)\n                this.range = this.ranges[--this.rangeIndex];\n            while (pos >= this.range.to)\n                this.range = this.ranges[++this.rangeIndex];\n            if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {\n                this.chunkOff = pos - this.chunkPos;\n            }\n            else {\n                this.chunk = \"\";\n                this.chunkOff = 0;\n            }\n            this.readNext();\n        }\n        return this;\n    }\n    /**\n    @internal\n    */\n    read(from, to) {\n        if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)\n            return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);\n        if (from >= this.chunk2Pos && to <= this.chunk2Pos + this.chunk2.length)\n            return this.chunk2.slice(from - this.chunk2Pos, to - this.chunk2Pos);\n        if (from >= this.range.from && to <= this.range.to)\n            return this.input.read(from, to);\n        let result = \"\";\n        for (let r of this.ranges) {\n            if (r.from >= to)\n                break;\n            if (r.to > from)\n                result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));\n        }\n        return result;\n    }\n}\n/**\n@internal\n*/\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, stack) {\n        let { parser } = stack.p;\n        readToken(this.data, input, stack, this.id, parser.data, parser.tokenPrecTable);\n    }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n@hide\n*/\nclass LocalTokenGroup {\n    constructor(data, precTable, elseToken) {\n        this.precTable = precTable;\n        this.elseToken = elseToken;\n        this.data = typeof data == \"string\" ? decodeArray(data) : data;\n    }\n    token(input, stack) {\n        let start = input.pos, skipped = 0;\n        for (;;) {\n            let atEof = input.next < 0, nextPos = input.resolveOffset(1, 1);\n            readToken(this.data, input, stack, 0, this.data, this.precTable);\n            if (input.token.value > -1)\n                break;\n            if (this.elseToken == null)\n                return;\n            if (!atEof)\n                skipped++;\n            if (nextPos == null)\n                break;\n            input.reset(nextPos, input.token);\n        }\n        if (skipped) {\n            input.reset(start, input.token);\n            input.acceptToken(this.elseToken, skipped);\n        }\n    }\n}\nLocalTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/**\n`@external tokens` declarations in the grammar should resolve to\nan instance of this class.\n*/\nclass ExternalTokenizer {\n    /**\n    Create a tokenizer. The first argument is the function that,\n    given an input stream, scans for the types of tokens it\n    recognizes at the stream's position, and calls\n    [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n    one.\n    */\n    constructor(\n    /**\n    @internal\n    */\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `input.token` when it matches a token.\nfunction readToken(data, input, stack, group, precTable, precOffset) {\n    let state = 0, groupMask = 1 << group, { dialect } = stack.p.parser;\n    scan: for (;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (input.token.value == -1 || input.token.value == term ||\n                        overrides(term, input.token.value, precTable, precOffset))) {\n                    input.acceptToken(term);\n                    break;\n                }\n            }\n        let next = input.next, low = 0, high = data[state + 2];\n        // Special case for EOF\n        if (input.next < 0 && high > low && data[accEnd + high * 3 - 3] == 65535 /* Seq.End */) {\n            state = data[accEnd + high * 3 - 1];\n            continue scan;\n        }\n        // Do a binary search on the state's edges\n        for (; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1] || 0x10000;\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                input.advance();\n                continue scan;\n            }\n        }\n        break;\n    }\n}\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* Seq.End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction overrides(token, prev, tableData, tableOffset) {\n    let iPrev = findOffset(tableData, tableOffset, prev);\n    return iPrev < 0 || findOffset(tableData, tableOffset, token) < iPrev;\n}\n\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && process.env && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.cursor(IterMode.IncludeAnonymous);\n    cursor.moveTo(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)\n                    return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Safety.Margin */))\n                        : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Safety.Margin */));\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments, nodeSet) {\n        this.fragments = fragments;\n        this.nodeSet = nodeSet;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            if (next instanceof Tree) {\n                if (start == pos) {\n                    if (start < this.safeFrom)\n                        return null;\n                    let end = start + next.length;\n                    if (end <= this.safeTo) {\n                        let lookAhead = next.prop(NodeProp.lookAhead);\n                        if (!lookAhead || end + lookAhead < this.fragment.to)\n                            return next;\n                    }\n                }\n                this.index[last]++;\n                if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n            else {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n        }\n    }\n}\nclass TokenCache {\n    constructor(parser, stream) {\n        this.stream = stream;\n        this.tokens = [];\n        this.mainToken = null;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.p, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* ParseState.TokenizerMask */);\n        let context = stack.curContext ? stack.curContext.hash : 0;\n        let lookAhead = 0;\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {\n                this.updateCachedToken(token, tokenizer, stack);\n                token.mask = mask;\n                token.context = context;\n            }\n            if (token.lookAhead > token.end + 25 /* Safety.Margin */)\n                lookAhead = Math.max(token.lookAhead, lookAhead);\n            if (token.value != 0 /* Term.Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (lookAhead)\n            stack.setLookAhead(lookAhead);\n        if (!main && stack.pos == this.stream.end) {\n            main = new CachedToken;\n            main.value = stack.p.parser.eofTerm;\n            main.start = main.end = stack.pos;\n            actionIndex = this.addActions(stack, main.value, main.end, actionIndex);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    getMainToken(stack) {\n        if (this.mainToken)\n            return this.mainToken;\n        let main = new CachedToken, { pos, p } = stack;\n        main.start = pos;\n        main.end = Math.min(pos + 1, p.stream.end);\n        main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Term.Err */;\n        return main;\n    }\n    updateCachedToken(token, tokenizer, stack) {\n        let start = this.stream.clipPos(stack.pos);\n        tokenizer.token(this.stream.reset(start, token), stack);\n        if (token.value > -1) {\n            let { parser } = stack.p;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize.Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else {\n            token.value = 0 /* Term.Err */;\n            token.end = this.stream.clipPos(start + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.p, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */);; i += 3) {\n                if (data[i] == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Seq.Other */)\n                            index = this.putAction(pair(data, i + 2), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nclass Parse {\n    constructor(parser, input, fragments, ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.recovering = 0;\n        this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\n        this.minStackPos = 0;\n        this.reused = [];\n        this.stoppedAt = null;\n        this.lastBigReductionStart = -1;\n        this.lastBigReductionSize = 0;\n        this.bigReductionCount = 0;\n        this.stream = new InputStream(input, ranges);\n        this.tokens = new TokenCache(parser, this.stream);\n        this.topTerm = parser.top[1];\n        let { from } = ranges[0];\n        this.stacks = [Stack.start(this, parser.top[0], from)];\n        this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4\n            ? new FragmentCursor(fragments, parser.nodeSet) : null;\n    }\n    get parsedPos() {\n        return this.minStackPos;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        let stacks = this.stacks, pos = this.minStackPos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        // If a large amount of reductions happened with the same start\n        // position, force the stack out of that production in order to\n        // avoid creating a tree too deep to recurse through.\n        // (This is an ugly kludge, because unfortunately there is no\n        // straightforward, cheap way to check for this happening, due to\n        // the history of reductions only being available in an\n        // expensive-to-access format in the stack buffers.)\n        if (this.bigReductionCount > 300 /* Rec.MaxLeftAssociativeReductionCount */ && stacks.length == 1) {\n            let [s] = stacks;\n            while (s.forceReduce() && s.stack.length && s.stack[s.stack.length - 2] >= this.lastBigReductionStart) { }\n            this.bigReductionCount = this.lastBigReductionSize = 0;\n        }\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i];\n            for (;;) {\n                this.tokens.mainToken = null;\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.getMainToken(stack);\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Finish with \" + this.stackID(finished));\n                return this.stackToTree(finished);\n            }\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : \"none\"));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Rec.Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]\n                : this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished) {\n                if (verbose)\n                    console.log(\"Force-finish \" + this.stackID(finished));\n                return this.stackToTree(finished.forceAll());\n            }\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* Rec.MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 500 /* Rec.MinBufferLengthPrune */ && other.buffer.length > 500 /* Rec.MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n            if (newStacks.length > 12 /* Rec.MaxStackCount */)\n                newStacks.splice(12 /* Rec.MaxStackCount */, newStacks.length - 12 /* Rec.MaxStackCount */);\n        }\n        this.minStackPos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.minStackPos)\n                this.minStackPos = newStacks[i].pos;\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.stoppedAt != null && start > this.stoppedAt)\n            return stack.forceReduce() ? stack : null;\n        if (this.fragments) {\n            let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof Tree && cached.positions[0] == 0)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* ParseState.DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* Action.ValueMask */)})`);\n            return true;\n        }\n        if (stack.stack.length >= 8400 /* Rec.CutDepth */) {\n            while (stack.stack.length > 6000 /* Rec.CutTo */ && stack.forceReduce()) { }\n        }\n        let actions = this.tokens.getActions(stack);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            let main = this.tokens.mainToken;\n            localStack.apply(action, term, main ? main.start : localStack.pos, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* Action.ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* Action.ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done)\n                    continue;\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* Rec.ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done)\n                    break;\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.stream.end > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Term.Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        return finished;\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack) {\n        stack.close();\n        return Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.ranges[0].from,\n            length: stack.pos - this.ranges[0].from,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\nconst id = x => x;\n/**\nContext trackers are used to track stateful context (such as\nindentation in the Python grammar, or parent elements in the XML\ngrammar) needed by external tokenizers. You declare them in a\ngrammar file as `@context exportName from \"module\"`.\n\nContext values should be immutable, and can be updated (replaced)\non shift or reduce actions.\n\nThe export used in a `@context` declaration should be of this\ntype.\n*/\nclass ContextTracker {\n    /**\n    Define a context tracker.\n    */\n    constructor(spec) {\n        this.start = spec.start;\n        this.shift = spec.shift || id;\n        this.reduce = spec.reduce || id;\n        this.reuse = spec.reuse || id;\n        this.hash = spec.hash || (() => 0);\n        this.strict = spec.strict !== false;\n    }\n}\n/**\nHolds the parse tables for a given grammar, as generated by\n`lezer-generator`, and provides [methods](#common.Parser) to parse\ncontent with.\n*/\nclass LRParser extends Parser {\n    /**\n    @internal\n    */\n    constructor(spec) {\n        super();\n        /**\n        @internal\n        */\n        this.wrappers = [];\n        if (spec.version != 14 /* File.Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${14 /* File.Version */})`);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                if (typeof prop == \"string\")\n                    prop = NodeProp[prop];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        if (spec.propSources)\n            this.nodeSet = this.nodeSet.extend(...spec.propSources);\n        this.strict = false;\n        this.bufferLength = DefaultBufferLength;\n        let tokenArray = decodeArray(spec.tokenData);\n        this.context = spec.context;\n        this.specializerSpecs = spec.specialized || [];\n        this.specialized = new Uint16Array(this.specializerSpecs.length);\n        for (let i = 0; i < this.specializerSpecs.length; i++)\n            this.specialized[i] = this.specializerSpecs[i].term;\n        this.specializers = this.specializerSpecs.map(getSpecializer);\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new Parse(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /**\n    Get a goto table entry @internal\n    */\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /**\n    Check if this state has an action for a given terminal @internal\n    */\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* ParseState.Skip */ : 1 /* ParseState.Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* Seq.End */) {\n                    if (data[i + 1] == 1 /* Seq.Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Seq.Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Term.Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /**\n    @internal\n    */\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* ParseState.Size */) + slot];\n    }\n    /**\n    @internal\n    */\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* ParseState.Flags */) & flag) > 0;\n    }\n    /**\n    @internal\n    */\n    validAction(state, action) {\n        return !!this.allActions(state, a => a == action ? true : null);\n    }\n    /**\n    @internal\n    */\n    allActions(state, action) {\n        let deflt = this.stateSlot(state, 4 /* ParseState.DefaultReduce */);\n        let result = deflt ? action(deflt) : undefined;\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */); result == null; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            result = action(pair(this.data, i + 1));\n        }\n        return result;\n    }\n    /**\n    Get the states that can follow this one through shift actions or\n    goto jumps. @internal\n    */\n    nextStates(state) {\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* ParseState.Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* Seq.End */) {\n                if (this.data[i + 1] == 1 /* Seq.Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* Action.ReduceFlag */ >> 16)) == 0) {\n                let value = this.data[i + 1];\n                if (!result.some((v, i) => (i & 1) && v == value))\n                    result.push(this.data[i], value);\n            }\n        }\n        return result;\n    }\n    /**\n    Configure the parser. Returns a new parser instance that has the\n    given settings modified. Settings not provided in `config` are\n    kept from the original parser.\n    */\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(LRParser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.specializers) {\n            copy.specializers = this.specializers.slice();\n            copy.specializerSpecs = this.specializerSpecs.map((s, i) => {\n                let found = config.specializers.find(r => r.from == s.external);\n                if (!found)\n                    return s;\n                let spec = Object.assign(Object.assign({}, s), { external: found.to });\n                copy.specializers[i] = getSpecializer(spec);\n                return spec;\n            });\n        }\n        if (config.contextTracker)\n            copy.context = config.contextTracker;\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.wrap)\n            copy.wrappers = copy.wrappers.concat(config.wrap);\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /**\n    Tells you whether any [parse wrappers](#lr.ParserConfig.wrap)\n    are registered for this parser.\n    */\n    hasWrappers() {\n        return this.wrappers.length > 0;\n    }\n    /**\n    Returns the name associated with a given term. This will only\n    work for all terms when the parser was generated with the\n    `--names` option. By default, only the names of tagged terms are\n    stored.\n    */\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /**\n    The eof term id is always allocated directly after the node\n    types. @internal\n    */\n    get eofTerm() { return this.maxNode + 1; }\n    /**\n    The type of top node produced by the parser.\n    */\n    get topNode() { return this.nodeSet.types[this.top[1]]; }\n    /**\n    @internal\n    */\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /**\n    @internal\n    */\n    parseDialect(dialect) {\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* Seq.End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return new Dialect(dialect, flags, disabled);\n    }\n    /**\n    Used by the output of the parser generator. Not available to\n    user code. @hide\n    */\n    static deserialize(spec) {\n        return new LRParser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        let stopped = stack.p.stoppedAt;\n        if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&\n            stack.p.parser.stateFlag(stack.state, 2 /* StateFlag.Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\nfunction getSpecializer(spec) {\n    if (spec.external) {\n        let mask = spec.extend ? 1 /* Specialize.Extend */ : 0 /* Specialize.Specialize */;\n        return (value, stack) => (spec.external(value, stack) << 1) | mask;\n    }\n    return spec.get;\n}\n\nexport { ContextTracker, ExternalTokenizer, InputStream, LRParser, LocalTokenGroup, Stack };\n","import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst StartTag = 1,\n  StartCloseTag = 2,\n  MissingCloseTag = 3,\n  mismatchedStartCloseTag = 4,\n  incompleteStartCloseTag = 5,\n  commentContent$1 = 35,\n  piContent$1 = 36,\n  cdataContent$1 = 37,\n  Element = 11,\n  OpenTag = 13;\n\n/* Hand-written tokenizer for XML tag matching. */\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedInput == input && cachedPos == pos) return cachedName\n  while (isSpace(input.peek(offset))) offset++;\n  let name = \"\";\n  for (;;) {\n    let next = input.peek(offset);\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    offset++;\n  }\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || null\n}\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, _stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst startTag = new ExternalTokenizer((input, stack) => {\n  if (input.next != 60 /* '<' */) return\n  input.advance();\n  if (input.next == 47 /* '/' */) {\n    input.advance();\n    let name = tagNameAfter(input, 0);\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\n    input.acceptToken(mismatchedStartCloseTag);\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\n    return input.acceptToken(StartTag)\n  }\n}, {contextual: true});\n\nfunction scanTo(type, end) {\n  return new ExternalTokenizer(input => {\n    let len = 0, first = end.charCodeAt(0);\n    scan: for (;; input.advance(), len++) {\n      if (input.next < 0) break\n      if (input.next == first) {\n        for (let i = 1; i < end.length; i++)\n          if (input.peek(i) != end.charCodeAt(i)) continue scan\n        break\n      }\n    }\n    if (len) input.acceptToken(type);\n  })\n}\n\nconst commentContent = scanTo(commentContent$1, \"-->\");\nconst piContent = scanTo(piContent$1, \"?>\");\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\n\nconst xmlHighlighting = styleTags({\n  Text: tags.content,\n  \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/Tagname\": [tags.tagName, tags.invalid],\n  AttributeName: tags.attributeName,\n  AttributeValue: tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta,\n  Cdata: tags.special(tags.string)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t\",\n  stateData: \")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O\",\n  goto: \"%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb\",\n  nodeNames: \"⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl\",\n  maxTerm: 47,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", 1,\"SelfCloseEndTag EndTag\",13,\"CloseTag MissingCloseTag\"],\n    [\"openedBy\", 12,\"StartTag StartCloseTag\",19,\"OpenTag\",20,\"StartTag\"]\n  ],\n  propSources: [xmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 8,\n  tokenData: \"Jy~R!XOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs'ssv$nvw(Zw}$n}!O,^!O!P$n!P!Q.m!Q![$n![!]0V!]!^$n!^!_3h!_!`El!`!aF_!a!bGQ!b!c$n!c!}0V!}#P$n#P#QHj#Q#R$n#R#S0V#S#T$n#T#o0V#o%W$n%W%o0V%o%p$n%p&a0V&a&b$n&b1p0V1p4U$n4U4d0V4d4e$n4e$IS0V$IS$I`$n$I`$Ib0V$Ib$Kh$n$Kh%#t0V%#t&/x$n&/x&Et0V&Et&FV$n&FV;'S0V;'S;:j3b;:j;=`&e<%l?&r$n?&r?Ah0V?Ah?BY$n?BY?Mn0V?MnO$nX$uWVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nP%dTVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_P%vP;=`<%l%_W&OT{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yW&bP;=`<%l%yX&hP;=`<%l$n_&t_VP{WyUOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ'zTzYVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_~(^ast)c![!]*g!c!}*g#R#S*g#T#o*g%W%o*g%p&a*g&b1p*g4U4d*g4e$IS*g$I`$Ib*g$Kh%#t*g&/x&Et*g&FV;'S*g;'S;:j,W?&r?Ah*g?BY?Mn*g~)fQ!Q![)l#l#m)z~)oQ!Q![)l!]!^)u~)zOX~~)}R!Q![*W!c!i*W#T#Z*W~*ZS!Q![*W!]!^)u!c!i*W#T#Z*W~*jg}!O*g!O!P*g!Q![*g![!]*g!]!^,R!c!}*g#R#S*g#T#o*g$}%O*g%W%o*g%p&a*g&b1p*g1p4U*g4U4d*g4e$IS*g$I`$Ib*g$Je$Jg*g$Kh%#t*g&/x&Et*g&FV;'S*g;'S;:j,W?&r?Ah*g?BY?Mn*g~,WOW~~,ZP;=`<%l*gZ,eYVP{WOr$nrs%_sv$nw}$n}!O-T!O!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ-[YVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a-z!a;'S$n;'S;=`&e<%lO$nZ.TW|QVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n].tYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a/d!a;'S$n;'S;=`&e<%lO$n]/mWdSVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_0b!O`S^QVP{WOr$nrs%_sv$nw}$n}!O0V!O!P0V!P!Q$n!Q![0V![!]0V!]!^$n!^!_%y!_!c$n!c!}0V!}#R$n#R#S0V#S#T$n#T#o0V#o$}$n$}%O0V%O%W$n%W%o0V%o%p$n%p&a0V&a&b$n&b1p0V1p4U0V4U4d0V4d4e$n4e$IS0V$IS$I`$n$I`$Ib0V$Ib$Je$n$Je$Jg0V$Jg$Kh$n$Kh%#t0V%#t&/x$n&/x&Et0V&Et&FV$n&FV;'S0V;'S;:j3b;:j;=`&e<%l?&r$n?&r?Ah0V?Ah?BY$n?BY?Mn0V?MnO$n_3eP;=`<%l0VX3mW{WOq%yqr4Vsv%yw!a%y!a!bEU!b;'S%y;'S;=`&_<%lO%yX4[]{WOr%ysv%yw}%y}!O5T!O!f%y!f!g6V!g!}%y!}#O;f#O#W%y#W#XAr#X;'S%y;'S;=`&_<%lO%yX5YV{WOr%ysv%yw}%y}!O5o!O;'S%y;'S;=`&_<%lO%yX5vT}P{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX6[V{WOr%ysv%yw!q%y!q!r6q!r;'S%y;'S;=`&_<%lO%yX6vV{WOr%ysv%yw!e%y!e!f7]!f;'S%y;'S;=`&_<%lO%yX7bV{WOr%ysv%yw!v%y!v!w7w!w;'S%y;'S;=`&_<%lO%yX7|V{WOr%ysv%yw!{%y!{!|8c!|;'S%y;'S;=`&_<%lO%yX8hV{WOr%ysv%yw!r%y!r!s8}!s;'S%y;'S;=`&_<%lO%yX9SV{WOr%ysv%yw!g%y!g!h9i!h;'S%y;'S;=`&_<%lO%yX9nX{WOr9irs:Zsv9ivw:Zw!`9i!`!a:x!a;'S9i;'S;=`;`<%lO9iP:^TO!`:Z!`!a:m!a;'S:Z;'S;=`:r<%lO:ZP:rOiPP:uP;=`<%l:ZX;PTiP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX;cP;=`<%l9iX;kX{WOr%ysv%yw!e%y!e!f<W!f#V%y#V#W?f#W;'S%y;'S;=`&_<%lO%yX<]V{WOr%ysv%yw!f%y!f!g<r!g;'S%y;'S;=`&_<%lO%yX<wV{WOr%ysv%yw!c%y!c!d=^!d;'S%y;'S;=`&_<%lO%yX=cV{WOr%ysv%yw!v%y!v!w=x!w;'S%y;'S;=`&_<%lO%yX=}V{WOr%ysv%yw!c%y!c!d>d!d;'S%y;'S;=`&_<%lO%yX>iV{WOr%ysv%yw!}%y!}#O?O#O;'S%y;'S;=`&_<%lO%yX?VT{WxPOr%ysv%yw;'S%y;'S;=`&_<%lO%yX?kV{WOr%ysv%yw#W%y#W#X@Q#X;'S%y;'S;=`&_<%lO%yX@VV{WOr%ysv%yw#T%y#T#U@l#U;'S%y;'S;=`&_<%lO%yX@qV{WOr%ysv%yw#h%y#h#iAW#i;'S%y;'S;=`&_<%lO%yXA]V{WOr%ysv%yw#T%y#T#U>d#U;'S%y;'S;=`&_<%lO%yXAwV{WOr%ysv%yw#c%y#c#dB^#d;'S%y;'S;=`&_<%lO%yXBcV{WOr%ysv%yw#V%y#V#WBx#W;'S%y;'S;=`&_<%lO%yXB}V{WOr%ysv%yw#h%y#h#iCd#i;'S%y;'S;=`&_<%lO%yXCiV{WOr%ysv%yw#m%y#m#nDO#n;'S%y;'S;=`&_<%lO%yXDTV{WOr%ysv%yw#d%y#d#eDj#e;'S%y;'S;=`&_<%lO%yXDoV{WOr%ysv%yw#X%y#X#Y9i#Y;'S%y;'S;=`&_<%lO%yXE]T!PP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yZEuWaQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_FhW[UVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZGXYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aGw!a;'S$n;'S;=`&e<%lO$nZHQW!OQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZHqYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_#P$n#P#QIa#Q;'S$n;'S;=`&e<%lO$nZIhYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aJW!a;'S$n;'S;=`&e<%lO$nZJaWwQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n\",\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\n  topRules: {\"Document\":[0,6]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n/**\n * Get the rank (`1` to `6`) of headings (`h1` to `h6`).\n *\n * @param {Nodes} node\n *   Node to check.\n * @returns {number | undefined}\n *   Rank of the heading or `undefined` if not a heading.\n */\nexport function headingRank(node) {\n  const name = node.type === 'element' ? node.tagName.toLowerCase() : ''\n  const code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */\n    ? code - 48 /* `0` */\n    : undefined\n}\n",null,null,null,null,null,"export var emptyMulticharIndex = {};\nexport var emptyRegularIndex = {};\nfunction extendIndex(item, index) {\n    var currentIndex = index;\n    for (var pos = 0; pos < item.length; pos++) {\n        var isLast = pos === item.length - 1;\n        var char = item.charAt(pos);\n        var charIndex = currentIndex[char] || (currentIndex[char] = { chars: {} });\n        if (isLast) {\n            charIndex.self = item;\n        }\n        currentIndex = charIndex.chars;\n    }\n}\nexport function createMulticharIndex(items) {\n    if (items.length === 0) {\n        return emptyMulticharIndex;\n    }\n    var index = {};\n    for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {\n        var item = items_1[_i];\n        extendIndex(item, index);\n    }\n    return index;\n}\nexport function createRegularIndex(items) {\n    if (items.length === 0) {\n        return emptyRegularIndex;\n    }\n    var result = {};\n    for (var _i = 0, items_2 = items; _i < items_2.length; _i++) {\n        var item = items_2[_i];\n        result[item] = true;\n    }\n    return result;\n}\n","export var emptyPseudoSignatures = {};\nexport var defaultPseudoSignature = {\n    type: 'String',\n    optional: true\n};\nfunction calculatePseudoSignature(types) {\n    var result = {\n        type: 'NoArgument',\n        optional: false\n    };\n    function setResultType(type) {\n        if (result.type && result.type !== type && result.type !== 'NoArgument') {\n            throw new Error(\"Conflicting pseudo-class argument type: \\\"\".concat(result.type, \"\\\" vs \\\"\").concat(type, \"\\\".\"));\n        }\n        result.type = type;\n    }\n    for (var _i = 0, types_1 = types; _i < types_1.length; _i++) {\n        var type = types_1[_i];\n        if (type === 'NoArgument') {\n            result.optional = true;\n        }\n        if (type === 'Formula') {\n            setResultType('Formula');\n        }\n        if (type === 'FormulaOfSelector') {\n            setResultType('Formula');\n            result.ofSelector = true;\n        }\n        if (type === 'String') {\n            setResultType('String');\n        }\n        if (type === 'Selector') {\n            setResultType('Selector');\n        }\n    }\n    return result;\n}\nexport function inverseCategories(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var category = _a[_i];\n        var items = obj[category];\n        if (items) {\n            for (var _b = 0, _c = items; _b < _c.length; _b++) {\n                var item = _c[_b];\n                (result[item] || (result[item] = [])).push(category);\n            }\n        }\n    }\n    return result;\n}\nexport function calculatePseudoSignatures(definitions) {\n    var pseudoClassesToArgumentTypes = inverseCategories(definitions);\n    var result = {};\n    for (var _i = 0, _a = Object.keys(pseudoClassesToArgumentTypes); _i < _a.length; _i++) {\n        var pseudoClass = _a[_i];\n        var argumentTypes = pseudoClassesToArgumentTypes[pseudoClass];\n        if (argumentTypes) {\n            result[pseudoClass] = calculatePseudoSignature(argumentTypes);\n        }\n    }\n    return result;\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar emptyXmlOptions = {};\nvar defaultXmlOptions = { wildcard: true };\nexport function getXmlOptions(param) {\n    if (param) {\n        if (typeof param === 'boolean') {\n            return defaultXmlOptions;\n        }\n        else {\n            return param;\n        }\n    }\n    else {\n        return emptyXmlOptions;\n    }\n}\nfunction withMigration(migration, merge) {\n    return function (base, extension) { return merge(migration(base), migration(extension)); };\n}\nfunction withNoNegative(merge) {\n    return function (base, extension) {\n        var result = merge(base, extension);\n        if (!result) {\n            throw new Error(\"Syntax definition cannot be null or undefined.\");\n        }\n        return result;\n    };\n}\nfunction withPositive(positive, merge) {\n    return function (base, extension) {\n        if (extension === true) {\n            return positive;\n        }\n        return merge(base === true ? positive : base, extension);\n    };\n}\nfunction mergeSection(values) {\n    return function (base, extension) {\n        if (!extension || !base) {\n            return extension;\n        }\n        if (typeof extension !== 'object' || extension === null) {\n            throw new Error(\"Unexpected syntax definition extension type: \".concat(extension, \".\"));\n        }\n        var result = __assign({}, base);\n        for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n            var _b = _a[_i], key = _b[0], value = _b[1];\n            var mergeSchema = values[key];\n            result[key] = mergeSchema(base[key], value);\n        }\n        return result;\n    };\n}\nfunction replaceValueIfSpecified(base, extension) {\n    if (extension !== undefined) {\n        return extension;\n    }\n    return base;\n}\nfunction concatArray(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    return base.concat(extension);\n}\nfunction mergeDefinitions(base, extension) {\n    if (!extension) {\n        return base;\n    }\n    if (!base) {\n        return extension;\n    }\n    var result = __assign({}, base);\n    for (var _i = 0, _a = Object.entries(extension); _i < _a.length; _i++) {\n        var _b = _a[_i], key = _b[0], value = _b[1];\n        if (!value) {\n            delete result[key];\n            continue;\n        }\n        var baseValue = base[key];\n        if (!baseValue) {\n            result[key] = value;\n            continue;\n        }\n        result[key] = baseValue.concat(value);\n    }\n    return result;\n}\nexport var extendSyntaxDefinition = withNoNegative(mergeSection({\n    baseSyntax: replaceValueIfSpecified,\n    tag: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    ids: replaceValueIfSpecified,\n    classNames: replaceValueIfSpecified,\n    namespace: withPositive(defaultXmlOptions, mergeSection({\n        wildcard: replaceValueIfSpecified\n    })),\n    combinators: concatArray,\n    attributes: mergeSection({\n        operators: concatArray,\n        caseSensitivityModifiers: concatArray,\n        unknownCaseSensitivityModifiers: replaceValueIfSpecified\n    }),\n    pseudoClasses: mergeSection({\n        unknown: replaceValueIfSpecified,\n        definitions: mergeDefinitions\n    }),\n    pseudoElements: mergeSection({\n        unknown: replaceValueIfSpecified,\n        notation: replaceValueIfSpecified,\n        definitions: withMigration(function (definitions) { return (Array.isArray(definitions) ? { NoArgument: definitions } : definitions); }, mergeDefinitions)\n    })\n}));\nvar css1SyntaxDefinition = {\n    tag: {},\n    ids: true,\n    classNames: true,\n    combinators: [],\n    pseudoElements: {\n        unknown: 'reject',\n        notation: 'singleColon',\n        definitions: ['first-letter', 'first-line']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['link', 'visited', 'active']\n        }\n    }\n};\nvar css2SyntaxDefinition = extendSyntaxDefinition(css1SyntaxDefinition, {\n    tag: { wildcard: true },\n    combinators: ['>', '+'],\n    attributes: {\n        unknownCaseSensitivityModifiers: 'reject',\n        operators: ['=', '~=', '|=']\n    },\n    pseudoElements: {\n        definitions: ['before', 'after']\n    },\n    pseudoClasses: {\n        unknown: 'reject',\n        definitions: {\n            NoArgument: ['hover', 'focus', 'first-child'],\n            String: ['lang']\n        }\n    }\n});\nvar selectors3SyntaxDefinition = extendSyntaxDefinition(css2SyntaxDefinition, {\n    namespace: {\n        wildcard: true\n    },\n    combinators: ['~'],\n    attributes: {\n        operators: ['^=', '$=', '*=']\n    },\n    pseudoElements: {\n        notation: 'both'\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'root',\n                'last-child',\n                'first-of-type',\n                'last-of-type',\n                'only-child',\n                'only-of-type',\n                'empty',\n                'target',\n                'enabled',\n                'disabled',\n                'checked',\n                'indeterminate'\n            ],\n            Formula: ['nth-child', 'nth-last-child', 'nth-of-type', 'nth-last-of-type'],\n            Selector: ['not']\n        }\n    }\n});\nvar selectors4SyntaxDefinition = extendSyntaxDefinition(selectors3SyntaxDefinition, {\n    combinators: ['||'],\n    attributes: {\n        caseSensitivityModifiers: ['i', 'I', 's', 'S']\n    },\n    pseudoClasses: {\n        definitions: {\n            NoArgument: [\n                'any-link',\n                'local-link',\n                'target-within',\n                'scope',\n                'current',\n                'past',\n                'future',\n                'focus-within',\n                'focus-visible',\n                'read-write',\n                'read-only',\n                'placeholder-shown',\n                'default',\n                'valid',\n                'invalid',\n                'in-range',\n                'out-of-range',\n                'required',\n                'optional',\n                'blank',\n                'user-invalid'\n            ],\n            Formula: ['nth-col', 'nth-last-col'],\n            String: ['dir'],\n            FormulaOfSelector: ['nth-child', 'nth-last-child'],\n            Selector: ['current', 'is', 'where', 'has']\n        }\n    }\n});\nvar progressiveSyntaxDefinition = extendSyntaxDefinition(selectors4SyntaxDefinition, {\n    pseudoElements: {\n        unknown: 'accept'\n    },\n    pseudoClasses: {\n        unknown: 'accept'\n    },\n    attributes: {\n        unknownCaseSensitivityModifiers: 'accept'\n    }\n});\nexport var cssSyntaxDefinitions = {\n    css1: css1SyntaxDefinition,\n    css2: css2SyntaxDefinition,\n    css3: selectors3SyntaxDefinition,\n    'selectors-3': selectors3SyntaxDefinition,\n    'selectors-4': selectors4SyntaxDefinition,\n    latest: selectors4SyntaxDefinition,\n    progressive: progressiveSyntaxDefinition\n};\n","export function isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || c === '-' || c === '_' || c === '\\\\';\n}\nexport function isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexport function isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexport var identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    $: true,\n    '%': true,\n    '&': true,\n    \"'\": true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexport var strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexport var stringEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\'\n};\nexport var whitespaceChars = {\n    ' ': true,\n    '\\t': true,\n    '\\n': true,\n    '\\r': true,\n    '\\f': true\n};\nexport var quoteChars = {\n    '\"': true,\n    \"'\": true\n};\nexport var digitsChars = {\n    0: true,\n    1: true,\n    2: true,\n    3: true,\n    4: true,\n    5: true,\n    6: true,\n    7: true,\n    8: true,\n    9: true\n};\nexport function escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' ||\n                chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xf800) === 0xd800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xfc00) !== 0xd800 || (extraCharCode & 0xfc00) !== 0xdc00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3ff) << 10) + (extraCharCode & 0x3ff) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result.trim();\n}\nexport function escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\".concat(result, \"\\\"\");\n}\n","import { createMulticharIndex, createRegularIndex, emptyMulticharIndex, emptyRegularIndex } from './indexes.js';\nimport { calculatePseudoSignatures, defaultPseudoSignature, emptyPseudoSignatures } from './pseudo-signatures.js';\nimport { cssSyntaxDefinitions, extendSyntaxDefinition, getXmlOptions } from './syntax-definitions.js';\nimport { digitsChars, isHex, isIdent, isIdentStart, quoteChars, stringEscapeChars, whitespaceChars } from './utils.js';\nvar errorPrefix = \"css-selector-parser parse error: \";\n/**\n * Creates a parse function to be used later to parse CSS selectors.\n */\nexport function createParser(options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.syntax, syntax = _a === void 0 ? 'latest' : _a, substitutes = options.substitutes, _b = options.strict, strict = _b === void 0 ? true : _b;\n    var syntaxDefinition = typeof syntax === 'object' ? syntax : cssSyntaxDefinitions[syntax];\n    if (syntaxDefinition.baseSyntax) {\n        syntaxDefinition = extendSyntaxDefinition(cssSyntaxDefinitions[syntaxDefinition.baseSyntax], syntaxDefinition);\n    }\n    var _c = syntaxDefinition.tag\n        ? [true, Boolean(getXmlOptions(syntaxDefinition.tag).wildcard)]\n        : [false, false], tagNameEnabled = _c[0], tagNameWildcardEnabled = _c[1];\n    var idEnabled = Boolean(syntaxDefinition.ids);\n    var classNamesEnabled = Boolean(syntaxDefinition.classNames);\n    var namespaceEnabled = Boolean(syntaxDefinition.namespace);\n    var namespaceWildcardEnabled = syntaxDefinition.namespace &&\n        (syntaxDefinition.namespace === true || syntaxDefinition.namespace.wildcard === true);\n    if (namespaceEnabled && !tagNameEnabled) {\n        throw new Error(\"\".concat(errorPrefix, \"Namespaces cannot be enabled while tags are disabled.\"));\n    }\n    var substitutesEnabled = Boolean(substitutes);\n    var combinatorsIndex = syntaxDefinition.combinators\n        ? createMulticharIndex(syntaxDefinition.combinators)\n        : emptyMulticharIndex;\n    var _d = syntaxDefinition.attributes\n        ? [\n            true,\n            syntaxDefinition.attributes.operators\n                ? createMulticharIndex(syntaxDefinition.attributes.operators)\n                : emptyMulticharIndex,\n            syntaxDefinition.attributes.caseSensitivityModifiers\n                ? createRegularIndex(syntaxDefinition.attributes.caseSensitivityModifiers)\n                : emptyRegularIndex,\n            syntaxDefinition.attributes.unknownCaseSensitivityModifiers === 'accept'\n        ]\n        : [false, emptyMulticharIndex, emptyRegularIndex, false], attributesEnabled = _d[0], attributesOperatorsIndex = _d[1], attributesCaseSensitivityModifiers = _d[2], attributesAcceptUnknownCaseSensitivityModifiers = _d[3];\n    var attributesCaseSensitivityModifiersEnabled = attributesAcceptUnknownCaseSensitivityModifiers || Object.keys(attributesCaseSensitivityModifiers).length > 0;\n    var _e = syntaxDefinition.pseudoClasses\n        ? [\n            true,\n            syntaxDefinition.pseudoClasses.definitions\n                ? calculatePseudoSignatures(syntaxDefinition.pseudoClasses.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoClasses.unknown === 'accept'\n        ]\n        : [false, emptyPseudoSignatures, false], pseudoClassesEnabled = _e[0], pseudoClassesDefinitions = _e[1], pseudoClassesAcceptUnknown = _e[2];\n    var _f = syntaxDefinition.pseudoElements\n        ? [\n            true,\n            syntaxDefinition.pseudoElements.notation === 'singleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            !syntaxDefinition.pseudoElements.notation ||\n                syntaxDefinition.pseudoElements.notation === 'doubleColon' ||\n                syntaxDefinition.pseudoElements.notation === 'both',\n            syntaxDefinition.pseudoElements.definitions\n                ? calculatePseudoSignatures(Array.isArray(syntaxDefinition.pseudoElements.definitions)\n                    ? { NoArgument: syntaxDefinition.pseudoElements.definitions }\n                    : syntaxDefinition.pseudoElements.definitions)\n                : emptyPseudoSignatures,\n            syntaxDefinition.pseudoElements.unknown === 'accept'\n        ]\n        : [false, false, false, emptyPseudoSignatures, false], pseudoElementsEnabled = _f[0], pseudoElementsSingleColonNotationEnabled = _f[1], pseudoElementsDoubleColonNotationEnabled = _f[2], pseudoElementsDefinitions = _f[3], pseudoElementsAcceptUnknown = _f[4];\n    var str = '';\n    var l = str.length;\n    var pos = 0;\n    var chr = '';\n    var is = function (comparison) { return chr === comparison; };\n    var isTagStart = function () { return is('*') || isIdentStart(chr); };\n    var rewind = function (newPos) {\n        pos = newPos;\n        chr = str.charAt(pos);\n    };\n    var next = function () {\n        pos++;\n        chr = str.charAt(pos);\n    };\n    var readAndNext = function () {\n        var current = chr;\n        pos++;\n        chr = str.charAt(pos);\n        return current;\n    };\n    /** @throws ParserError */\n    function fail(errorMessage) {\n        var position = Math.min(l - 1, pos);\n        var error = new Error(\"\".concat(errorPrefix).concat(errorMessage, \" Pos: \").concat(position, \".\"));\n        error.position = position;\n        error.name = 'ParserError';\n        throw error;\n    }\n    function assert(condition, errorMessage) {\n        if (!condition) {\n            return fail(errorMessage);\n        }\n    }\n    var assertNonEof = function () {\n        assert(pos < l, 'Unexpected end of input.');\n    };\n    var isEof = function () { return pos >= l; };\n    var pass = function (character) {\n        assert(pos < l, \"Expected \\\"\".concat(character, \"\\\" but end of input reached.\"));\n        assert(chr === character, \"Expected \\\"\".concat(character, \"\\\" but \\\"\").concat(chr, \"\\\" found.\"));\n        pos++;\n        chr = str.charAt(pos);\n    };\n    function matchMulticharIndex(index) {\n        var match = matchMulticharIndexPos(index, pos);\n        if (match) {\n            pos += match.length;\n            chr = str.charAt(pos);\n            return match;\n        }\n    }\n    function matchMulticharIndexPos(index, subPos) {\n        var char = str.charAt(subPos);\n        var charIndex = index[char];\n        if (charIndex) {\n            var subMatch = matchMulticharIndexPos(charIndex.chars, subPos + 1);\n            if (subMatch) {\n                return subMatch;\n            }\n            if (charIndex.self) {\n                return charIndex.self;\n            }\n        }\n    }\n    function parseHex() {\n        var hex = readAndNext();\n        while (isHex(chr)) {\n            hex += readAndNext();\n        }\n        if (is(' ')) {\n            next();\n        }\n        return String.fromCharCode(parseInt(hex, 16));\n    }\n    function parseString(quote) {\n        var result = '';\n        pass(quote);\n        while (pos < l) {\n            if (is(quote)) {\n                next();\n                return result;\n            }\n            else if (is('\\\\')) {\n                next();\n                var esc = void 0;\n                if (is(quote)) {\n                    result += quote;\n                }\n                else if ((esc = stringEscapeChars[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (isHex(chr)) {\n                    result += parseHex();\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            next();\n        }\n        return result;\n    }\n    function parseIdentifier() {\n        if (!isIdentStart(chr)) {\n            return null;\n        }\n        var result = '';\n        while (pos < l) {\n            if (isIdent(chr)) {\n                result += readAndNext();\n            }\n            else if (is('\\\\')) {\n                next();\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        return result;\n    }\n    function parsePseudoClassString() {\n        var result = '';\n        while (pos < l) {\n            if (is(')')) {\n                break;\n            }\n            else if (is('\\\\')) {\n                next();\n                if (isEof() && !strict) {\n                    return (result + '\\\\').trim();\n                }\n                assertNonEof();\n                if (isHex(chr)) {\n                    result += parseHex();\n                }\n                else {\n                    result += readAndNext();\n                }\n            }\n            else {\n                result += readAndNext();\n            }\n        }\n        return result.trim();\n    }\n    function skipWhitespace() {\n        while (whitespaceChars[chr]) {\n            next();\n        }\n    }\n    function parseSelector(relative) {\n        if (relative === void 0) { relative = false; }\n        skipWhitespace();\n        var rules = [parseRule(relative)];\n        while (is(',')) {\n            next();\n            skipWhitespace();\n            rules.push(parseRule(relative));\n        }\n        return {\n            type: 'Selector',\n            rules: rules\n        };\n    }\n    function parseAttribute() {\n        pass('[');\n        skipWhitespace();\n        var attr;\n        if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var name_1 = parseIdentifier();\n            assert(name_1, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_1,\n                namespace: { type: 'NoNamespace' }\n            };\n        }\n        else if (is('*')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            next();\n            pass('|');\n            var name_2 = parseIdentifier();\n            assert(name_2, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: name_2,\n                namespace: { type: 'WildcardNamespace' }\n            };\n        }\n        else {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected attribute name.');\n            attr = {\n                type: 'Attribute',\n                name: identifier\n            };\n            if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isIdentStart(chr)) {\n                    assert(namespaceEnabled, 'Namespaces are not enabled.');\n                    var name_3 = parseIdentifier();\n                    assert(name_3, 'Expected attribute name.');\n                    attr = {\n                        type: 'Attribute',\n                        name: name_3,\n                        namespace: { type: 'NamespaceName', name: identifier }\n                    };\n                }\n                else {\n                    rewind(savedPos);\n                }\n            }\n        }\n        assert(attr.name, 'Expected attribute name.');\n        skipWhitespace();\n        if (isEof() && !strict) {\n            return attr;\n        }\n        if (is(']')) {\n            next();\n        }\n        else {\n            attr.operator = matchMulticharIndex(attributesOperatorsIndex);\n            assert(attr.operator, 'Expected a valid attribute selector operator.');\n            skipWhitespace();\n            assertNonEof();\n            if (quoteChars[chr]) {\n                attr.value = {\n                    type: 'String',\n                    value: parseString(chr)\n                };\n            }\n            else if (substitutesEnabled && is('$')) {\n                next();\n                var name_4 = parseIdentifier();\n                assert(name_4, 'Expected substitute name.');\n                attr.value = {\n                    type: 'Substitution',\n                    name: name_4\n                };\n            }\n            else {\n                var value = parseIdentifier();\n                assert(value, 'Expected attribute value.');\n                attr.value = {\n                    type: 'String',\n                    value: value\n                };\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return attr;\n            }\n            if (!is(']')) {\n                var caseSensitivityModifier = parseIdentifier();\n                assert(caseSensitivityModifier, 'Expected end of attribute selector.');\n                attr.caseSensitivityModifier = caseSensitivityModifier;\n                assert(attributesCaseSensitivityModifiersEnabled, 'Attribute case sensitivity modifiers are not enabled.');\n                assert(attributesAcceptUnknownCaseSensitivityModifiers ||\n                    attributesCaseSensitivityModifiers[attr.caseSensitivityModifier], 'Unknown attribute case sensitivity modifier.');\n                skipWhitespace();\n                if (isEof() && !strict) {\n                    return attr;\n                }\n            }\n            pass(']');\n        }\n        return attr;\n    }\n    function parseNumber() {\n        var result = '';\n        while (digitsChars[chr]) {\n            result += readAndNext();\n        }\n        assert(result !== '', 'Formula parse error.');\n        return parseInt(result);\n    }\n    var isNumberStart = function () { return is('-') || is('+') || digitsChars[chr]; };\n    function parseFormula() {\n        if (is('e') || is('o')) {\n            var ident = parseIdentifier();\n            if (ident === 'even') {\n                skipWhitespace();\n                return [2, 0];\n            }\n            if (ident === 'odd') {\n                skipWhitespace();\n                return [2, 1];\n            }\n        }\n        var firstNumber = null;\n        var firstNumberMultiplier = 1;\n        if (is('-')) {\n            next();\n            firstNumberMultiplier = -1;\n        }\n        if (isNumberStart()) {\n            if (is('+')) {\n                next();\n            }\n            firstNumber = parseNumber();\n            if (!is('\\\\') && !is('n')) {\n                return [0, firstNumber * firstNumberMultiplier];\n            }\n        }\n        if (firstNumber === null) {\n            firstNumber = 1;\n        }\n        firstNumber *= firstNumberMultiplier;\n        var identifier;\n        if (is('\\\\')) {\n            next();\n            if (isHex(chr)) {\n                identifier = parseHex();\n            }\n            else {\n                identifier = readAndNext();\n            }\n        }\n        else {\n            identifier = readAndNext();\n        }\n        assert(identifier === 'n', 'Formula parse error: expected \"n\".');\n        skipWhitespace();\n        if (is('+') || is('-')) {\n            var sign = is('+') ? 1 : -1;\n            next();\n            skipWhitespace();\n            return [firstNumber, sign * parseNumber()];\n        }\n        else {\n            return [firstNumber, 0];\n        }\n    }\n    function parsePseudoArgument(pseudoName, type, signature) {\n        var argument;\n        if (is('(')) {\n            next();\n            skipWhitespace();\n            if (substitutesEnabled && is('$')) {\n                next();\n                var name_5 = parseIdentifier();\n                assert(name_5, 'Expected substitute name.');\n                argument = {\n                    type: 'Substitution',\n                    name: name_5\n                };\n            }\n            else if (signature.type === 'String') {\n                argument = {\n                    type: 'String',\n                    value: parsePseudoClassString()\n                };\n                assert(argument.value, \"Expected \".concat(type, \" argument value.\"));\n            }\n            else if (signature.type === 'Selector') {\n                argument = parseSelector(true);\n            }\n            else if (signature.type === 'Formula') {\n                var _a = parseFormula(), a = _a[0], b = _a[1];\n                argument = {\n                    type: 'Formula',\n                    a: a,\n                    b: b\n                };\n                if (signature.ofSelector) {\n                    skipWhitespace();\n                    if (is('o') || is('\\\\')) {\n                        var ident = parseIdentifier();\n                        assert(ident === 'of', 'Formula of selector parse error.');\n                        skipWhitespace();\n                        argument = {\n                            type: 'FormulaOfSelector',\n                            a: a,\n                            b: b,\n                            selector: parseRule()\n                        };\n                    }\n                }\n            }\n            else {\n                return fail(\"Invalid \".concat(type, \" signature.\"));\n            }\n            skipWhitespace();\n            if (isEof() && !strict) {\n                return argument;\n            }\n            pass(')');\n        }\n        else {\n            assert(signature.optional, \"Argument is required for \".concat(type, \" \\\"\").concat(pseudoName, \"\\\".\"));\n        }\n        return argument;\n    }\n    function parseTagName() {\n        if (is('*')) {\n            assert(tagNameWildcardEnabled, 'Wildcard tag name is not enabled.');\n            next();\n            return { type: 'WildcardTag' };\n        }\n        else if (isIdentStart(chr)) {\n            assert(tagNameEnabled, 'Tag names are not enabled.');\n            var name_6 = parseIdentifier();\n            assert(name_6, 'Expected tag name.');\n            return {\n                type: 'TagName',\n                name: name_6\n            };\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseTagNameWithNamespace() {\n        if (is('*')) {\n            var savedPos = pos;\n            next();\n            if (!is('|')) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return parseTagName();\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            assert(namespaceWildcardEnabled, 'Wildcard namespace is not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'WildcardNamespace' };\n            return tagName;\n        }\n        else if (is('|')) {\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            next();\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NoNamespace' };\n            return tagName;\n        }\n        else if (isIdentStart(chr)) {\n            var identifier = parseIdentifier();\n            assert(identifier, 'Expected tag name.');\n            if (!is('|')) {\n                assert(tagNameEnabled, 'Tag names are not enabled.');\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            var savedPos = pos;\n            next();\n            if (!isTagStart()) {\n                rewind(savedPos);\n                return {\n                    type: 'TagName',\n                    name: identifier\n                };\n            }\n            assert(namespaceEnabled, 'Namespaces are not enabled.');\n            var tagName = parseTagName();\n            tagName.namespace = { type: 'NamespaceName', name: identifier };\n            return tagName;\n        }\n        else {\n            return fail('Expected tag name.');\n        }\n    }\n    function parseRule(relative) {\n        var _a, _b;\n        if (relative === void 0) { relative = false; }\n        var rule = { type: 'Rule', items: [] };\n        if (relative) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            if (combinator) {\n                rule.combinator = combinator;\n                skipWhitespace();\n            }\n        }\n        while (pos < l) {\n            if (isTagStart()) {\n                assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                rule.items.push(parseTagNameWithNamespace());\n            }\n            else if (is('|')) {\n                var savedPos = pos;\n                next();\n                if (isTagStart()) {\n                    assert(rule.items.length === 0, 'Unexpected tag/namespace start.');\n                    rewind(savedPos);\n                    rule.items.push(parseTagNameWithNamespace());\n                }\n                else {\n                    rewind(savedPos);\n                    break;\n                }\n            }\n            else if (is('.')) {\n                assert(classNamesEnabled, 'Class names are not enabled.');\n                next();\n                var className = parseIdentifier();\n                assert(className, 'Expected class name.');\n                rule.items.push({ type: 'ClassName', name: className });\n            }\n            else if (is('#')) {\n                assert(idEnabled, 'IDs are not enabled.');\n                next();\n                var idName = parseIdentifier();\n                assert(idName, 'Expected ID name.');\n                rule.items.push({ type: 'Id', name: idName });\n            }\n            else if (is('[')) {\n                assert(attributesEnabled, 'Attributes are not enabled.');\n                rule.items.push(parseAttribute());\n            }\n            else if (is(':')) {\n                var isDoubleColon = false;\n                var isPseudoElement = false;\n                next();\n                if (is(':')) {\n                    assert(pseudoElementsEnabled, 'Pseudo elements are not enabled.');\n                    assert(pseudoElementsDoubleColonNotationEnabled, 'Pseudo elements double colon notation is not enabled.');\n                    isDoubleColon = true;\n                    next();\n                }\n                var pseudoName = parseIdentifier();\n                assert(isDoubleColon || pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon || pseudoName, 'Expected pseudo-element name.');\n                assert(pseudoName, 'Expected pseudo-class name.');\n                assert(!isDoubleColon ||\n                    pseudoElementsAcceptUnknown ||\n                    Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName), \"Unknown pseudo-element \\\"\".concat(pseudoName, \"\\\".\"));\n                isPseudoElement =\n                    pseudoElementsEnabled &&\n                        (isDoubleColon ||\n                            (!isDoubleColon &&\n                                pseudoElementsSingleColonNotationEnabled &&\n                                Object.prototype.hasOwnProperty.call(pseudoElementsDefinitions, pseudoName)));\n                if (isPseudoElement) {\n                    var signature = (_a = pseudoElementsDefinitions[pseudoName]) !== null && _a !== void 0 ? _a : (pseudoElementsAcceptUnknown && defaultPseudoSignature);\n                    var pseudoElement = {\n                        type: 'PseudoElement',\n                        name: pseudoName\n                    };\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-element', signature);\n                    if (argument) {\n                        assert(argument.type !== 'Formula' && argument.type !== 'FormulaOfSelector', 'Pseudo-elements cannot have formula argument.');\n                        pseudoElement.argument = argument;\n                    }\n                    rule.items.push(pseudoElement);\n                }\n                else {\n                    assert(pseudoClassesEnabled, 'Pseudo-classes are not enabled.');\n                    var signature = (_b = pseudoClassesDefinitions[pseudoName]) !== null && _b !== void 0 ? _b : (pseudoClassesAcceptUnknown && defaultPseudoSignature);\n                    assert(signature, \"Unknown pseudo-class: \\\"\".concat(pseudoName, \"\\\".\"));\n                    var argument = parsePseudoArgument(pseudoName, 'pseudo-class', signature);\n                    var pseudoClass = {\n                        type: 'PseudoClass',\n                        name: pseudoName\n                    };\n                    if (argument) {\n                        pseudoClass.argument = argument;\n                    }\n                    rule.items.push(pseudoClass);\n                }\n            }\n            else {\n                break;\n            }\n        }\n        if (rule.items.length === 0) {\n            if (isEof()) {\n                return fail('Expected rule but end of input reached.');\n            }\n            else {\n                return fail(\"Expected rule but \\\"\".concat(chr, \"\\\" found.\"));\n            }\n        }\n        skipWhitespace();\n        if (!isEof() && !is(',') && !is(')')) {\n            var combinator = matchMulticharIndex(combinatorsIndex);\n            skipWhitespace();\n            rule.nestedRule = parseRule();\n            rule.nestedRule.combinator = combinator;\n        }\n        return rule;\n    }\n    return function (input) {\n        // noinspection SuspiciousTypeOfGuard\n        if (typeof input !== 'string') {\n            throw new Error(\"\".concat(errorPrefix, \"Expected string input.\"));\n        }\n        str = input;\n        l = str.length;\n        pos = 0;\n        chr = str.charAt(0);\n        return parseSelector();\n    };\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nfunction astMethods(type) {\n    return function (generatorName, checkerName) {\n        var _a;\n        return (_a = {},\n            _a[generatorName] = function (props) { return (__assign({ type: type }, props)); },\n            _a[checkerName] = function (entity) {\n                return typeof entity === 'object' && entity !== null && entity.type === type;\n            },\n            _a);\n    };\n}\n/**\n * AST structure generators and matchers.\n * For instance, `ast.selector({rules: [...]})` creates AstSelector and `ast.isSelector(...)` checks if\n * AstSelector was specified.\n *\n * @example\n *\n * // Represents CSS selector: ns|div#user-34.user.user-active[role=\"button\"]:lang(en)::before > *\n * const selector = ast.selector({\n *     rules: [\n *         ast.rule({\n *             items: [\n *                 ast.tagName({name: 'div', namespace: ast.namespaceName({name: 'ns'})}),\n *                 ast.id({name: 'user-34'}),\n *                 ast.className({name: 'user'}),\n *                 ast.className({name: 'user-active'}),\n *                 ast.attribute({\n *                     name: 'role',\n *                     operator: '=',\n *                     value: ast.string({value: 'button'})\n *                 }),\n *                 ast.pseudoClass({\n *                     name: 'lang',\n *                     argument: ast.string({value: 'en'})\n *                 }),\n *                 ast.pseudoElement({name: 'before'})\n *             ],\n *             nestedRule: ast.rule({combinator: '>', items: [ast.wildcardTag()]})\n *         })\n *     ]\n * });\n * console.log(ast.isSelector(selector)); // prints true\n * console.log(ast.isRule(selector)); // prints false\n */\nexport var ast = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, astMethods('Selector')('selector', 'isSelector')), astMethods('Rule')('rule', 'isRule')), astMethods('TagName')('tagName', 'isTagName')), astMethods('Id')('id', 'isId')), astMethods('ClassName')('className', 'isClassName')), astMethods('WildcardTag')('wildcardTag', 'isWildcardTag')), astMethods('NamespaceName')('namespaceName', 'isNamespaceName')), astMethods('WildcardNamespace')('wildcardNamespace', 'isWildcardNamespace')), astMethods('NoNamespace')('noNamespace', 'isNoNamespace')), astMethods('Attribute')('attribute', 'isAttribute')), astMethods('PseudoClass')('pseudoClass', 'isPseudoClass')), astMethods('PseudoElement')('pseudoElement', 'isPseudoElement')), astMethods('String')('string', 'isString')), astMethods('Formula')('formula', 'isFormula')), astMethods('FormulaOfSelector')('formulaOfSelector', 'isFormulaOfSelector')), astMethods('Substitution')('substitution', 'isSubstitution'));\n","/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n */\n\nimport {createParser} from 'css-selector-parser'\n\nconst cssSelectorParse = createParser({syntax: 'selectors-4'})\n\n/**\n * @param {string} selector\n *   Selector to parse.\n * @returns {AstSelector}\n *   Parsed selector.\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return cssSelectorParse(selector)\n}\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n *\n * @typedef {import('unist-util-visit').Visitor<ElementContent>} Visitor\n *\n * @typedef {import('./index.js').Direction} Direction\n * @typedef {import('./index.js').State} State\n */\n\nimport {direction} from 'direction'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {EXIT, SKIP, visit} from 'unist-util-visit'\n\n/**\n * Enter a node.\n *\n * The caller is responsible for calling the return value `exit`.\n *\n * @param {State} state\n *   Current state.\n *\n *   Will be mutated: `exit` undos the changes.\n * @param {Nodes} node\n *   Node to enter.\n * @returns {() => undefined}\n *   Call to exit.\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction | undefined} */\n  let dirInferred\n\n  if (node.type === 'element') {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== null && lang !== undefined) {\n      state.language = String(lang)\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n      }\n\n      if (node.tagName === 'svg') {\n        state.schema = svg\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'html') ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && node.tagName === 'input' && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || node.tagName === 'bdi') {\n        if (node.tagName === 'textarea') {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          node.tagName === 'input' &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          dirInferred = node.properties.value\n            ? dirBidi(String(node.properties.value))\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n    }\n  }\n\n  return reset\n\n  /**\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : undefined\n    }\n\n    if (\n      child !== node &&\n      child.type === 'element' &&\n      (child.tagName === 'bdi' ||\n        child.tagName === 'script' ||\n        child.tagName === 'style' ||\n        child.tagName === 'textare' ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * See `wooorm/direction`.\n *\n * @param {string} value\n *   Value to check.\n * @returns {Exclude<Direction, 'auto'> | undefined}\n *   Directionality.\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementContent} node\n *   Node to check.\n * @returns {Direction | undefined}\n *   Directionality.\n */\nfunction dirProperty(node) {\n  const value =\n    node.type === 'element' && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n","/**\n * @typedef {import('css-selector-parser').AstAttribute} AstAttribute\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find} from 'property-information'\nimport * as spaces from 'space-separated-tokens'\n\n/**\n * @param {AstAttribute} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {Schema} schema\n *   Schema of element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function attribute(query, element, schema) {\n  const info = find(schema, query.name)\n  const propertyValue = element.properties[info.property]\n  let value = normalizeValue(propertyValue, info)\n\n  // Exists.\n  if (!query.value) {\n    return value !== undefined\n  }\n\n  assert(query.value.type === 'String', 'expected plain string')\n  let key = query.value.value\n\n  // Case-sensitivity.\n  if (query.caseSensitivityModifier === 'i') {\n    key = key.toLowerCase()\n\n    if (value) {\n      value = value.toLowerCase()\n    }\n  }\n\n  if (value !== undefined) {\n    switch (query.operator) {\n      // Exact.\n      case '=': {\n        return key === value\n      }\n\n      // Ends.\n      case '$=': {\n        return key === value.slice(-key.length)\n      }\n\n      // Contains.\n      case '*=': {\n        return value.includes(key)\n      }\n\n      // Begins.\n      case '^=': {\n        return key === value.slice(0, key.length)\n      }\n\n      // Exact or prefix.\n      case '|=': {\n        return (\n          key === value ||\n          (key === value.slice(0, key.length) &&\n            value.charAt(key.length) === '-')\n        )\n      }\n\n      // Space-separated list.\n      case '~=': {\n        return (\n          // For all other values (including comma-separated lists), return whether this\n          // is an exact match.\n          key === value ||\n          // If this is a space-separated list, and the query is contained in it, return\n          // true.\n          spaces.parse(value).includes(key)\n        )\n      }\n      // Other values are not yet supported by CSS.\n      // No default\n    }\n  }\n\n  return false\n}\n\n/**\n *\n * @param {Properties[keyof Properties]} value\n * @param {Info} info\n * @returns {string | undefined}\n */\nfunction normalizeValue(value, info) {\n  if (value === null || value === undefined) {\n    // Empty.\n  } else if (typeof value === 'boolean') {\n    if (value) {\n      return info.attribute\n    }\n  } else if (Array.isArray(value)) {\n    if (value.length > 0) {\n      return (info.commaSeparated ? commas : spaces.stringify)(value)\n    }\n  } else {\n    return String(value)\n  }\n}\n","/**\n * @typedef {import('css-selector-parser').AstClassName} AstClassName\n * @typedef {import('hast').Element} Element\n */\n\n/** @type {Array<never>} */\nconst emptyClassNames = []\n\n/**\n * Check whether an element has all class names.\n *\n * @param {AstClassName} query\n *   AST rule (with `classNames`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function className(query, element) {\n  // Assume array.\n  const value = /** @type {Readonly<Array<string>>} */ (\n    element.properties.className || emptyClassNames\n  )\n\n  return value.includes(query.name)\n}\n","/**\n * @typedef {import('css-selector-parser').AstId} AstId\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has an ID.\n *\n * @param {AstId} query\n *   AST rule (with `ids`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function id(query, element) {\n  return element.properties.id === query.name\n}\n","/**\n * @typedef {import('css-selector-parser').AstTagName} AstTagName\n *\n * @typedef {import('hast').Element} Element\n */\n\n// Workaround to show references to above types in VS Code.\n''\n\n/**\n * Check whether an element has a tag name.\n *\n * @param {AstTagName} query\n *   AST rule (with `tag`).\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function name(query, element) {\n  return query.name === element.tagName\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more info on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n *   BCP-47 tag.\n * @typedef {Array<Tag>} Tags\n *   List of BCP-47 tags.\n * @typedef {string} Range\n *   RFC 4647 range.\n * @typedef {Array<Range>} Ranges\n *   List of RFC 4647 range.\n *\n * @callback Check\n *   An internal check.\n * @param {Tag} tag\n *   BCP-47 tag.\n * @param {Range} range\n *   RFC 4647 range.\n * @returns {boolean}\n *   Whether the range matches the tag.\n *\n * @typedef {FilterOrLookup<true>} Filter\n *   Filter: yields all tags that match a range.\n * @typedef {FilterOrLookup<false>} Lookup\n *   Lookup: yields the best tag that matches a range.\n */\n\n/**\n * @template {boolean} IsFilter\n *   Whether to filter or perform a lookup.\n * @callback FilterOrLookup\n *   A check.\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n *   Result.\n */\n\n/**\n * Factory to perform a filter or a lookup.\n *\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.\n * That way, earlier ranges matching any tag have precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n *   A check.\n * @param {IsFilter} filter\n *   Whether to filter or perform a lookup.\n * @returns {FilterOrLookup<IsFilter>}\n *   Filter or lookup.\n */\nfunction factory(check, filter) {\n  /**\n   * @param {Tag|Tags} tags\n   *   One or more BCP-47 tags.\n   * @param {Range|Ranges|undefined} [ranges='*']\n   *   One or more RFC 4647 ranges.\n   * @returns {IsFilter extends true ? Tags : Tag|undefined}\n   *   Result.\n   */\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tags}\n *   List of BCP-47 tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n *\n * @param {Tag|Tags} tags\n *   One or more BCP-47 tags.\n * @param {Range|Ranges|undefined} [ranges='*']\n *   One or more RFC 4647 ranges.\n * @returns {Tag|undefined}\n *   BCP-47 tag.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node` is an element and has a `name` property.\n *\n * @template {string} Key\n *   Type of key.\n * @param {Nodes} node\n *   Node to check (typically `Element`).\n * @param {Key} name\n *   Property name to check.\n * @returns {node is Element & {properties: Record<Key, Array<number | string> | number | string | true>}}}\n *   Whether `node` is an element that has a `name` property.\n *\n *   Note: see <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/27c9274/types/hast/index.d.ts#L37C29-L37C98>.\n */\nexport function hasProperty(node, name) {\n  const value =\n    node.type === 'element' &&\n    own.call(node.properties, name) &&\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n",null,null,null,"/**\n * @typedef {import('css-selector-parser').AstPseudoClass} AstPseudoClass\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {ok as assert, unreachable} from 'devlop'\nimport {hasProperty} from 'hast-util-has-property'\nimport {whitespace} from 'hast-util-whitespace'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\nimport {walk} from './walk.js'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error: types are broken.\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\n/** @type {(rule: AstPseudoClass, element: Element, index: number | undefined, parent: Parents | undefined, state: State) => boolean} */\nexport const pseudo = zwitch('name', {\n  handlers: {\n    'any-link': anyLink,\n    blank,\n    checked,\n    dir,\n    disabled,\n    empty,\n    enabled,\n    'first-child': firstChild,\n    'first-of-type': firstOfType,\n    has,\n    is,\n    lang,\n    'last-child': lastChild,\n    'last-of-type': lastOfType,\n    not,\n    'nth-child': nthChild,\n    'nth-last-child': nthLastChild,\n    'nth-last-of-type': nthLastOfType,\n    'nth-of-type': nthOfType,\n    'only-child': onlyChild,\n    'only-of-type': onlyOfType,\n    optional,\n    'read-only': readOnly,\n    'read-write': readWrite,\n    required,\n    root,\n    scope\n  },\n  invalid: invalidPseudo,\n  unknown: unknownPseudo\n})\n\n/**\n * Check whether an element matches an `:any-link` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction anyLink(_, element) {\n  return (\n    (element.tagName === 'a' ||\n      element.tagName === 'area' ||\n      element.tagName === 'link') &&\n    hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {State} state\n *   State.\n * @param {AstPseudoClass} query\n *   Query.\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * Check whether an element matches a `:blank` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * Check whether an element matches a `:checked` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction checked(_, element) {\n  if (element.tagName === 'input' || element.tagName === 'menuitem') {\n    return Boolean(\n      (element.properties.type === 'checkbox' ||\n        element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (element.tagName === 'option') {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * Check whether an element matches a `:dir()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction dir(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected plain text')\n  return state.direction === query.argument.value\n}\n\n/**\n * Check whether an element matches a `:disabled` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction disabled(_, element) {\n  return (\n    (element.tagName === 'button' ||\n      element.tagName === 'input' ||\n      element.tagName === 'select' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'optgroup' ||\n      element.tagName === 'option' ||\n      element.tagName === 'menuitem' ||\n      element.tagName === 'fieldset') &&\n    hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * Check whether an element matches an `:empty` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementContent} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * Check whether an element matches an `:enabled` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * Check whether an element matches a `:first-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * Check whether an element matches a `:first-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @returns {(value: number) => boolean}\n *   N.\n */\nfunction getCachedNthCheck(query) {\n  /** @type {(value: number) => boolean} */\n  // @ts-expect-error: cache.\n  let fn = query._cachedFn\n\n  if (!fn) {\n    const value = query.argument\n    assert(value, 'expected `argument`')\n\n    if (value.type !== 'Formula') {\n      throw new Error(\n        'Expected `nth` formula, such as `even` or `2n+1` (`of` is not yet supported)'\n      )\n    }\n\n    fn = nthCheck(value.a + 'n+' + value.b)\n    // @ts-expect-error: cache.\n    query._cachedFn = fn\n  }\n\n  return fn\n}\n\n/**\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction has(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, {type: 'root', children: element.children})\n\n  return childState.results.length > 0\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  unreachable('Invalid pseudo-selector')\n}\n\n/**\n * Check whether an element `:is` further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction is(query, element, _1, _2, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'Selector', 'expected selector')\n\n  /** @type {State} */\n  const childState = {\n    ...state,\n    // Not found yet.\n    found: false,\n    // One result is enough.\n    one: true,\n    results: [],\n    rootQuery: query.argument,\n    scopeElements: [element],\n    // Do walk deep.\n    shallow: false\n  }\n\n  walk(childState, element)\n\n  return childState.results[0] === element\n}\n\n/**\n * Check whether an element matches a `:lang()` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lang(query, _1, _2, _3, state) {\n  assert(query.argument, 'expected `argument`')\n  assert(query.argument.type === 'String', 'expected string')\n\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    extendedFilter(state.language, commas(query.argument.value)).length > 0\n  )\n}\n\n/**\n * Check whether an element matches a `:last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * Check whether an element matches a `:last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * Check whether an element does `:not` match further selectors.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction not(query, element, index, parent, state) {\n  return !is(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches an `:nth-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.elementIndex === 'number' && fn(state.elementIndex)\n}\n\n/**\n * Check whether an element matches an `:nth-last-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      fn(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * Check whether an element matches a `:nth-last-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    fn(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * Check whether an element matches an `:nth-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  const fn = getCachedNthCheck(query)\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && fn(state.typeIndex)\n}\n\n/**\n * Check whether an element matches an `:only-child` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * Check whether an element matches an `:only-of-type` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} _1\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * Check whether an element matches an `:optional` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * Check whether an element matches a `:read-only` pseudo.\n *\n * @param {AstPseudoClass} query\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * Check whether an element matches a `:read-write` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _1\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _2\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return element.tagName === 'input' || element.tagName === 'textarea'\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * Check whether an element matches a `:required` pseudo.\n *\n * @param {AstPseudoClass} _\n *   Query.\n * @param {Element} element\n *   Element.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction required(_, element) {\n  return (\n    (element.tagName === 'input' ||\n      element.tagName === 'textarea' ||\n      element.tagName === 'select') &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * Check whether an element matches a `:root` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction root(_1, element, _2, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      (element.tagName === 'html' || element.tagName === 'svg')\n  )\n}\n\n/**\n * Check whether an element matches a `:scope` pseudo.\n *\n * @param {AstPseudoClass} _1\n *   Query.\n * @param {Element} element\n *   Element.\n * @param {number | undefined} _2\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} _3\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nfunction scope(_1, element, _2, _3, state) {\n  return state.scopeElements.includes(element)\n}\n\n/**\n * Check children.\n *\n * @param {Element} element\n *   Element.\n * @param {(child: ElementContent) => boolean} check\n *   Check.\n * @returns {boolean}\n *   Whether a child of `element` matches `check`.\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n/**\n * @param {unknown} query_\n *   Query-like value.\n * @returns {never}\n *   Nothing.\n * @throws\n *   Exception.\n */\nfunction unknownPseudo(query_) {\n  // Runtime JS guarantees it has a `name`.\n  const query = /** @type {AstPseudoClass} */ (query_)\n  throw new Error('Unknown pseudo-selector `' + query.name + '`')\n}\n","/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\n\n/**\n * Test a rule.\n *\n * @param {AstRule} query\n *   AST rule (with `pseudoClasses`).\n * @param {Element} element\n *   Element.\n * @param {number | undefined} index\n *   Index of `element` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `element`.\n * @param {State} state\n *   State.\n * @returns {boolean}\n *   Whether `element` matches `query`.\n */\nexport function test(query, element, index, parent, state) {\n  for (const item of query.items) {\n    // eslint-disable-next-line unicorn/prefer-switch\n    if (item.type === 'Attribute') {\n      if (!attribute(item, element, state.schema)) return false\n    } else if (item.type === 'Id') {\n      if (!id(item, element)) return false\n    } else if (item.type === 'ClassName') {\n      if (!className(item, element)) return false\n    } else if (item.type === 'PseudoClass') {\n      if (!pseudo(item, element, index, parent, state)) return false\n    } else if (item.type === 'PseudoElement') {\n      throw new Error('Invalid selector: `::' + item.name + '`')\n    } else if (item.type === 'TagName') {\n      if (!name(item, element)) return false\n    } else {\n      // Otherwise `item.type` is `WildcardTag`, which matches.\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('css-selector-parser').AstRule} AstRule\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('./index.js').State} State\n */\n\n/**\n * @typedef Counts\n *   Info on elements in a parent.\n * @property {number} count\n *   Number of elements.\n * @property {Map<string, number>} types\n *   Number of elements by tag name.\n *\n * @typedef Nest\n *   Rule sets by nesting.\n * @property {Array<AstRule> | undefined} adjacentSibling\n *   `a + b`\n * @property {Array<AstRule> | undefined} descendant\n *   `a b`\n * @property {Array<AstRule> | undefined} directChild\n *   `a > b`\n * @property {Array<AstRule> | undefined} generalSibling\n *   `a ~ b`\n */\n\nimport {enterState} from './enter-state.js'\nimport {test} from './test.js'\n\n/** @type {Array<never>} */\nconst empty = []\n\n/**\n * Walk a tree.\n *\n * @param {State} state\n *   State.\n * @param {Nodes | undefined} tree\n *   Tree.\n */\nexport function walk(state, tree) {\n  if (tree) {\n    one(state, [], tree, undefined, undefined, tree)\n  }\n}\n\n/**\n * Add a rule to a nesting map.\n *\n * @param {Nest} nest\n *   Nesting.\n * @param {keyof Nest} field\n *   Field.\n * @param {AstRule} rule\n *   Rule.\n */\nfunction add(nest, field, rule) {\n  const list = nest[field]\n  if (list) {\n    list.push(rule)\n  } else {\n    nest[field] = [rule]\n  }\n}\n\n/**\n * Check in a parent.\n *\n * @param {State} state\n *   State.\n * @param {Nest} nest\n *   Nesting.\n * @param {Parents} node\n *   Parent.\n * @param {Nodes} tree\n *   Tree.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(state, nest, node, tree) {\n  const fromParent = combine(nest.descendant, nest.directChild)\n  /** @type {Array<AstRule> | undefined} */\n  let fromSibling\n  let index = -1\n  /**\n   * Total counts.\n   * @type {Counts}\n   */\n  const total = {count: 0, types: new Map()}\n  /**\n   * Counts of previous siblings.\n   * @type {Counts}\n   */\n  const before = {count: 0, types: new Map()}\n\n  while (++index < node.children.length) {\n    count(total, node.children[index])\n  }\n\n  index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name =\n      child.type === 'element' ? child.tagName.toUpperCase() : undefined\n    // Before counting further elements:\n    state.elementIndex = before.count\n    state.typeIndex = name ? before.types.get(name) || 0 : 0\n    // After counting all elements.\n    state.elementCount = total.count\n    state.typeCount = name ? total.types.get(name) : 0\n\n    // Only apply if this is a parent, this should be an element, but we check\n    // for parents so that we delve into custom nodes too.\n    if ('children' in child) {\n      const forSibling = combine(fromParent, fromSibling)\n      const nest = one(\n        state,\n        forSibling,\n        node.children[index],\n        index,\n        node,\n        tree\n      )\n      fromSibling = combine(nest.generalSibling, nest.adjacentSibling)\n    }\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    count(before, node.children[index])\n  }\n}\n\n/**\n * Apply selectors to an element.\n *\n * @param {State} state\n *   Current state.\n * @param {Array<AstRule>} rules\n *   Rules to apply.\n * @param {Element} node\n *   Element to apply rules to.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Nest}\n *   Further rules.\n */\nfunction applySelectors(state, rules, node, index, parent) {\n  /** @type {Nest} */\n  const nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n  let selectorIndex = -1\n\n  while (++selectorIndex < rules.length) {\n    const rule = rules[selectorIndex]\n\n    // We found one thing, and one is enough.\n    if (state.one && state.found) {\n      break\n    }\n\n    // When shallow, we don’t allow nested rules.\n    // Idea: we could allow a stack of parents?\n    // Might get quite complex though.\n    if (state.shallow && rule.nestedRule) {\n      throw new Error('Expected selector without nesting')\n    }\n\n    // If this rule matches:\n    if (test(rule, node, index, parent, state)) {\n      const nest = rule.nestedRule\n\n      // Are there more?\n      if (nest) {\n        /** @type {keyof Nest} */\n        const label =\n          nest.combinator === '+'\n            ? 'adjacentSibling'\n            : nest.combinator === '~'\n            ? 'generalSibling'\n            : nest.combinator === '>'\n            ? 'directChild'\n            : 'descendant'\n        add(nestResult, label, nest)\n      } else {\n        // We have a match!\n        state.found = true\n\n        if (!state.results.includes(node)) {\n          state.results.push(node)\n        }\n      }\n    }\n\n    // Descendant.\n    if (rule.combinator === undefined) {\n      add(nestResult, 'descendant', rule)\n    }\n    // Adjacent.\n    else if (rule.combinator === '~') {\n      add(nestResult, 'generalSibling', rule)\n    }\n    // Drop direct child (`>`), adjacent sibling (`+`).\n  }\n\n  return nestResult\n}\n\n/**\n * Combine two lists, if needed.\n *\n * This is optimized to create as few lists as possible.\n *\n * @param {Array<AstRule> | undefined} left\n *   Rules.\n * @param {Array<AstRule> | undefined} right\n *   Rules.\n * @returns {Array<AstRule>}\n *   Rules.\n */\nfunction combine(left, right) {\n  return left && right && left.length > 0 && right.length > 0\n    ? [...left, ...right]\n    : left && left.length > 0\n    ? left\n    : right && right.length > 0\n    ? right\n    : empty\n}\n\n/**\n * Count a node.\n *\n * @param {Counts} counts\n *   Counts.\n * @param {Nodes} node\n *   Node (we’re looking for elements).\n * @returns {undefined}\n *   Nothing.\n */\nfunction count(counts, node) {\n  if (node.type === 'element') {\n    // Uppercase to prevent prototype polution, injecting `constructor` or so.\n    // Normalize because HTML is insensitive.\n    const name = node.tagName.toUpperCase()\n    const count = (counts.types.get(name) || 0) + 1\n    counts.count++\n    counts.types.set(name, count)\n  }\n}\n\n/**\n * Check a node.\n *\n * @param {State} state\n *   State.\n * @param {Array<AstRule>} currentRules\n *   Rules.\n * @param {Nodes} node\n *   Node.\n * @param {number | undefined} index\n *   Index of `node` in `parent`.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @param {Nodes} tree\n *   Tree.\n * @returns {Nest}\n *   Nesting.\n */\nfunction one(state, currentRules, node, index, parent, tree) {\n  /** @type {Nest} */\n  let nestResult = {\n    adjacentSibling: undefined,\n    descendant: undefined,\n    directChild: undefined,\n    generalSibling: undefined\n  }\n\n  const exit = enterState(state, node)\n\n  if (node.type === 'element') {\n    let rootRules = state.rootQuery.rules\n\n    // Remove direct child rules if this is the root.\n    // This only happens for a `:has()` rule, which can be like\n    // `a:has(> b)`.\n    if (parent && parent !== tree) {\n      rootRules = state.rootQuery.rules.filter(\n        (d) =>\n          d.combinator === undefined ||\n          (d.combinator === '>' && parent === tree)\n      )\n    }\n\n    nestResult = applySelectors(\n      state,\n      // Try the root rules for this element too.\n      combine(currentRules, rootRules),\n      node,\n      index,\n      parent\n    )\n  }\n\n  // If this is a parent, and we want to delve into them, and we haven’t found\n  // our single result yet.\n  if ('children' in node && !state.shallow && !(state.one && state.found)) {\n    all(state, nestResult, node, tree)\n  }\n\n  exit()\n\n  return nestResult\n}\n","/**\n * @typedef {import('css-selector-parser').AstSelector} AstSelector\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {'html' | 'svg'} Space\n *   Name of namespace.\n *\n * @typedef {'auto' | 'ltr' | 'rtl'} Direction\n *   Direction.\n *\n * @typedef State\n *   Current state.\n * @property {Direction} direction\n *   Current direction.\n * @property {boolean} editableOrEditingHost\n *   Whether we’re in `contentEditable`.\n * @property {number | undefined} elementCount\n *   Track siblings: there are `n` siblings.\n * @property {number | undefined} elementIndex\n *   Track siblings: this current element has `n` elements before it.\n * @property {boolean} found\n *   Whether we found at least one match.\n * @property {string | undefined} language\n *   Current language.\n * @property {boolean} one\n *   Whether we can stop looking after we found one element.\n * @property {Array<Element>} results\n *   Matches.\n * @property {AstSelector} rootQuery\n *   Original root selectors.\n * @property {Schema} schema\n *   Current schema.\n * @property {Array<RootContent>} scopeElements\n *   Elements in scope.\n * @property {boolean} shallow\n *   Whether we only allow selectors without nesting.\n * @property {number | undefined} typeCount\n *   Track siblings: there are `n` siblings with this element’s tag name.\n * @property {number | undefined} typeIndex\n *   Track siblings: this current element has `n` elements with its tag name\n *   before it.\n */\n\nimport {html, svg} from 'property-information'\nimport {parse} from './parse.js'\nimport {walk} from './walk.js'\n\n/**\n * Check that the given `node` matches `selector`.\n *\n * This only checks the element itself, not the surrounding tree.\n * Thus, nesting in selectors is not supported (`p b`, `p > b`), neither are\n * selectors like `:first-child`, etc.\n * This only checks that the given element matches the selector.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [node]\n *   Node that might match `selector`, should be an element (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {boolean}\n *   Whether `node` matches `selector`.\n */\nexport function matches(selector, node, space) {\n  const state = createState(selector, node, space)\n  state.one = true\n  state.shallow = true\n  walk(state, node || undefined)\n  return state.results.length > 0\n}\n\n/**\n * Select the first element that matches `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Element | undefined}\n *   First element in `tree` that matches `selector` or `undefined` if nothing\n *   is found; this could be `tree` itself.\n */\nexport function select(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  state.one = true\n  walk(state, tree || undefined)\n  return state.results[0]\n}\n\n/**\n * Select all elements that match `selector` in the given `tree`.\n * Searches the tree in *preorder*.\n *\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {Array<Element>}\n *   Elements in `tree` that match `selector`.\n *   This could include `tree` itself.\n */\nexport function selectAll(selector, tree, space) {\n  const state = createState(selector, tree, space)\n  walk(state, tree || undefined)\n  return state.results\n}\n\n/**\n * @param {string} selector\n *   CSS selector, such as (`h1`, `a, b`).\n * @param {Nodes | null | undefined} [tree]\n *   Tree to search (optional).\n * @param {Space | null | undefined} [space='html']\n *   Name of namespace (default: `'html'`).\n * @returns {State} State\n *   State.\n */\nfunction createState(selector, tree, space) {\n  return {\n    direction: 'ltr',\n    editableOrEditingHost: false,\n    elementCount: undefined,\n    elementIndex: undefined,\n    found: false,\n    language: undefined,\n    one: false,\n    // State of the query.\n    results: [],\n    rootQuery: parse(selector),\n    schema: space === 'svg' ? svg : html,\n    scopeElements: tree ? (tree.type === 'root' ? tree.children : [tree]) : [],\n    shallow: false,\n    typeIndex: undefined,\n    typeCount: undefined\n  }\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Nodes} node\n *   Node to serialize.\n * @returns {string}\n *   Serialized node.\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Nodes} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Parents} node\n *   Node.\n * @returns {string}\n *   Serialized node.\n */\nfunction all(node) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name.\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector.\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: fine.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Content | Root} Node\n *   Any concrete `hast` node.\n * @typedef {Root | Element} HResult\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {string | number} HStyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, HStyleValue>} HStyle\n *   Supported value of a `style` prop.\n * @typedef {string | number | boolean | null | undefined} HPrimitiveValue\n *   Primitive property value.\n * @typedef {Array<string | number>} HArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {HPrimitiveValue | HArrayValue} HPropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: HPropertyValue | HStyle}} HProperties\n *   Acceptable value for element properties.\n *\n * @typedef {string | number | null | undefined} HPrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<Node | HPrimitiveChild>} HArrayChild\n *   List of children.\n * @typedef {Node | HPrimitiveChild | HArrayChild} HChild\n *   Acceptable child value.\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null | undefined, ...children: Array<HChild>): Root\n     *   (selector: string, properties?: HProperties, ...children: Array<HChild>): Element\n     *   (selector: string, ...children: Array<HChild>): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string | null} [selector]\n       * @param {HProperties | HChild} [properties]\n       * @param {Array<HChild>} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties | HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle | HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<string | number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<Content>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {HStyle} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child\n *   Acceptable child value.\n * @typedef {import('./core.js').HProperties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./core.js').HResult} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nconst unicodePunctuationInternal = regexCheck(/\\p{P}/u)\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/)\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function unicodePunctuation(code) {\n  return asciiPunctuation(code) || unicodePunctuationInternal(code)\n}\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/)\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   An element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   An element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | undefined, [prop: string]: Array<Child> | Child | Element | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element' || node.type === 'root') {\n    const parentSchema = state.schema\n    let schema = parentSchema\n\n    if (\n      node.type === 'element' &&\n      node.tagName.toLowerCase() === 'svg' &&\n      parentSchema.space === 'html'\n    ) {\n      schema = svg\n      state.schema = schema\n    }\n\n    state.ancestors.push(node)\n\n    let children = createChildren(state, node)\n    const props = createProperties(state, state.ancestors)\n    let type = state.Fragment\n\n    state.ancestors.pop()\n\n    if (node.type === 'element') {\n      if (children && tableElements.has(node.tagName)) {\n        children = children.filter(function (child) {\n          return typeof child === 'string' ? !whitespace(child) : true\n        })\n      }\n\n      if (own.call(state.components, node.tagName)) {\n        const key = /** @type {keyof JSX.IntrinsicElements} */ (node.tagName)\n        type = state.components[key]\n\n        // If this is swapped out for a component:\n        if (\n          typeof type !== 'string' &&\n          type !== state.Fragment &&\n          state.passNode\n        ) {\n          props.node = node\n        }\n      } else {\n        type = node.tagName\n      }\n    }\n\n    if (children.length > 0) {\n      const value = children.length > 1 ? children : children[0]\n\n      if (value) {\n        props.children = value\n      }\n    }\n\n    // Restore parent schema.\n    state.schema = parentSchema\n\n    return state.create(node, type, props, key)\n  }\n\n  if (node.type === 'text') {\n    return node.value\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByTagName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys && child.type === 'element') {\n      const count = countsByTagName.get(child.tagName) || 0\n      key = child.tagName + '-' + count\n      countsByTagName.set(child.tagName, count + 1)\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle properties.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Parents>} ancestors\n *   Stack of parents.\n * @returns {Props}\n *   Props for runtime.\n */\nfunction createProperties(state, ancestors) {\n  const node = ancestors[ancestors.length - 1]\n  /** @type {Props} */\n  const props = {}\n  /** @type {string} */\n  let prop\n\n  if ('properties' in node && node.properties) {\n    /** @type {string | undefined} */\n    let alignValue\n\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          state,\n          ancestors,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          const [key, value] = result\n\n          if (\n            state.tableCellAlignToStyle &&\n            key === 'align' &&\n            typeof value === 'string' &&\n            tableCellElement.has(node.tagName)\n          ) {\n            alignValue = value\n          } else {\n            props[key] = value\n          }\n        }\n      }\n    }\n\n    if (alignValue) {\n      // Assume style is an object.\n      const style = /** @type {Style} */ (props.style || (props.style = {}))\n      style[\n        state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'\n      ] = alignValue\n    }\n  }\n\n  return props\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Parents>} ancestors\n *   Stack of parents.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, ancestors, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object'\n        ? value\n        : parseStyle(state, ancestors, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Array<Nodes>} ancestors\n *   Stack of nodes.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, ancestors, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors,\n        cause,\n        source: 'hast-util-to-jsx-runtime',\n        ruleId: 'style'\n      })\n      message.file = state.filePath || undefined\n      message.url =\n        'https://github.com/syntax-tree/hast-util-to-jsx-runtime#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (toHast(tree, options))\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (toHast(tree, options || destination))\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","import type { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport type { RehypeAttrsOptions } from './index.js';\n\nexport const getURLParameters = (url: string = '') =>\n  ((url.match(/([^?=&]+)(=([^&]*))/g) || []) as string[]).reduce(\n      (a: Record<string, string | number | boolean>, v: string) => (\n        (a[v.slice(0, v.indexOf('=')) as keyof typeof a] = v.slice(v.indexOf('=') + 1)), a\n      ),\n      {}\n    )\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string, codeBlockParames?: boolean): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || element.type === 'element') return;\n      if (element.type === 'text' && element.value.replace(/(\\n|\\s)/g, '') !== '') return;\n      if (element.type && /^(comment|raw)$/ig.test(element.type)) {\n        if (element.value && !/^rehype:/.test(element.value.replace(/^(\\s+)?<!--(.*?)-->/, '$2') || '')) {\n          return\n        };\n        if (codeBlockParames) {\n          const nextNode = nextChild(data, i, 'pre', codeBlockParames)\n          if (nextNode) return;\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        } else {\n          element.value = (element.value || '').replace(/^(\\n|\\s)+/, '')\n          return element;\n        }\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^<!--(.*?)-->/, '$1').replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import type { Plugin } from 'unified';\nimport type { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils.js';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * 👇👇👇👇👇\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * 👇👇👇👇👇\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   * @default `data`\n   */\n  properties?: 'data' | 'string' | 'attr';\n  /**\n   * Code block passing parameters\n   */\n  codeBlockParames?: boolean;\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options = {}) => {\n  const { properties = 'data', codeBlockParames = true } = options;\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (codeBlockParames && node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index, '', codeBlockParames)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Parents} Parents\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is an element.\n * @param {unknown} this\n *   Context object (`this`) to call `test` with\n * @param {unknown} [element]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | null | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean}\n *   Whether this is an element and passes a test.\n *\n * @typedef {Array<TestFunction | string> | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary element.\n *\n *   * when `string`, checks that the element has that tag name\n *   * when `function`, see `TestFunction`\n *   * when `Array`, checks if one of the subtests pass\n *\n * @callback TestFunction\n *   Check if an element passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Element} element\n *   An element.\n * @param {number | undefined} [index]\n *   Position of `element` in its parent.\n * @param {Parents | undefined} [parent]\n *   Parent of `element`.\n * @returns {boolean | undefined | void}\n *   Whether this element passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `element` is an `Element` and whether it passes the given test.\n *\n * @param element\n *   Thing to check, typically `element`.\n * @param test\n *   Check for a specific element.\n * @param index\n *   Position of `element` in its parent.\n * @param parent\n *   Parent of `element`.\n * @param context\n *   Context object (`this`) to call `test` with.\n * @returns\n *   Whether `element` is an `Element` and passes a test.\n * @throws\n *   When an incorrect `test`, `index`, or `parent` is given; there is no error\n *   thrown when `element` is not a node or not an element.\n */\nexport const isElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(element: unknown, test: Condition, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((element?: null | undefined) => false) &\n   *   ((element: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((element: unknown, test?: Test, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [element]\n     * @param {Test | undefined} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parents | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (element, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== null &&\n        index !== undefined &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite `index`')\n      }\n\n      if (\n        parent !== null &&\n        parent !== undefined &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected valid `parent`')\n      }\n\n      if (\n        (index === null || index === undefined) !==\n        (parent === null || parent === undefined)\n      ) {\n        throw new Error('Expected both `index` and `parent`')\n      }\n\n      return looksLikeAnElement(element)\n        ? check.call(context, element, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate a check from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * an `element`, `index`, and `parent`.\n *\n * @param test\n *   A test for a specific element.\n * @returns\n *   A check.\n */\nexport const convertElement =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends TestFunction>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & Predicate<Condition, Element>) &\n   *   (<Condition extends string>(test: Condition) => (element: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element & {tagName: Condition}) &\n   *   ((test?: null | undefined) => (element?: unknown, index?: number | null | undefined, parent?: Parents | null | undefined, context?: unknown) => element is Element) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test | null | undefined} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      // Assume array.\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as `test`')\n    }\n  )\n\n/**\n * Handle multiple tests.\n *\n * @param {Array<TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn a string into a test for an element with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction tagNameFactory(check) {\n  return castFactory(tagName)\n\n  /**\n   * @param {Element} element\n   * @returns {boolean}\n   */\n  function tagName(element) {\n    return element.tagName === check\n  }\n}\n\n/**\n * Turn a custom test into a test for an element that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeAnElement(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\n/**\n * Make sure something is an element.\n *\n * @param {unknown} element\n * @returns {element is Element}\n */\nfunction element(element) {\n  return Boolean(\n    element &&\n      typeof element === 'object' &&\n      'type' in element &&\n      element.type === 'element' &&\n      'tagName' in element &&\n      typeof element.tagName === 'string'\n  )\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Element}\n */\nfunction looksLikeAnElement(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    'type' in value &&\n    'tagName' in value\n  )\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Root} Root\n *\n * @typedef {import('hast-util-is-element').Test} Test\n */\n\n/**\n * @typedef {'after' | 'append' | 'before' | 'prepend' | 'wrap'} Behavior\n *   Behavior.\n *\n * @callback Build\n *   Generate content.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Content.\n *\n * @callback BuildProperties\n *   Generate properties.\n * @param {Readonly<Element>} element\n *   Current heading.\n * @returns {Properties}\n *   Properties.\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior | null | undefined} [behavior='prepend']\n *   How to create links (default: `'prepend'`).\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [content]\n *   Content to insert in the link (default: if `'wrap'` then `undefined`,\n *   otherwise `<span class=\"icon icon-link\"></span>`);\n *   if `behavior` is `'wrap'` and `Build` is passed, its result replaces the\n *   existing content, otherwise the content is added after existing content.\n * @property {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build | null | undefined} [group]\n *   Content to wrap the heading and link with, if `behavior` is `'after'` or\n *   `'before'` (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [headingProperties]\n *   Extra properties to set on the heading (optional).\n * @property {Readonly<Properties> | BuildProperties | null | undefined} [properties]\n *   Extra properties to set on the link when injecting (default:\n *   `{ariaHidden: true, tabIndex: -1}` if `'append'` or `'prepend'`, otherwise\n *   `undefined`).\n * @property {Test | null | undefined} [test]\n *   Extra test for which headings are linked (optional).\n */\n\n/**\n * @template T\n *   Kind.\n * @typedef {(\n *   T extends Record<any, any>\n *     ? {-readonly [k in keyof T]: Cloneable<T[k]>}\n *     : T\n * )} Cloneable\n *   Deep clone.\n *\n *   See: <https://github.com/microsoft/TypeScript-DOM-lib-generator/issues/1237#issuecomment-1345515448>\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {SKIP, visit} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add links from headings back to themselves.\n *\n * ###### Notes\n *\n * This plugin only applies to headings with `id`s.\n * Use `rehype-slug` to generate `id`s for headings that don’t have them.\n *\n * Several behaviors are supported:\n *\n * *   `'prepend'` (default) — inject link before the heading text\n * *   `'append'` — inject link after the heading text\n * *   `'wrap'` — wrap the whole heading text with the link\n * *   `'before'` — insert link before the heading\n * *   `'after'` — insert link after the heading\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeAutolinkHeadings(options) {\n  const settings = options || emptyOptions\n  let properties = settings.properties\n  const headingOroperties = settings.headingProperties\n  const behavior = settings.behavior || 'prepend'\n  const content = settings.content\n  const group = settings.group\n  const is = convertElement(settings.test)\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  let method\n\n  if (behavior === 'after' || behavior === 'before') {\n    method = around\n  } else if (behavior === 'wrap') {\n    method = wrap\n  } else {\n    method = inject\n\n    if (!properties) {\n      properties = {ariaHidden: 'true', tabIndex: -1}\n    }\n  }\n\n  /**\n   * Transform.\n   *\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    visit(tree, 'element', function (node, index, parent) {\n      if (headingRank(node) && node.properties.id && is(node, index, parent)) {\n        Object.assign(node.properties, toProperties(headingOroperties, node))\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function inject(node) {\n    const children = toChildren(content || contentDefaults, node)\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, toProperties(properties, node), children)\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function around(node, index, parent) {\n    /* c8 ignore next -- uncommon */\n    if (typeof index !== 'number' || !parent) return\n\n    const children = toChildren(content || contentDefaults, node)\n    const link = create(node, toProperties(properties, node), children)\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit').Visitor<Element>} */\n  function wrap(node) {\n    /** @type {Array<ElementContent>} */\n    let before = node.children\n    /** @type {Array<ElementContent> | ElementContent} */\n    let after = []\n\n    if (typeof content === 'function') {\n      before = []\n      after = content(node)\n    } else if (content) {\n      after = clone(content)\n    }\n\n    node.children = [\n      create(\n        node,\n        toProperties(properties, node),\n        Array.isArray(after) ? [...before, ...after] : [...before, after]\n      )\n    ]\n\n    return [SKIP]\n  }\n}\n\n/**\n * Deep clone.\n *\n * @template T\n *   Kind.\n * @param {T} thing\n *   Thing to clone.\n * @returns {Cloneable<T>}\n *   Cloned thing.\n */\nfunction clone(thing) {\n  // Cast because it’s mutable now.\n  return /** @type {Cloneable<T>} */ (structuredClone(thing))\n}\n\n/**\n * Create an `a`.\n *\n * @param {Readonly<Element>} node\n *   Related heading.\n * @param {Properties | undefined} properties\n *   Properties to set on the link.\n * @param {Array<ElementContent>} children\n *   Content.\n * @returns {Element}\n *   Link.\n */\nfunction create(node, properties, children) {\n  return {\n    type: 'element',\n    tagName: 'a',\n    properties: {...properties, href: '#' + node.properties.id},\n    children\n  }\n}\n\n/**\n * Turn into children.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent>}\n *   Children.\n */\nfunction toChildren(value, node) {\n  const result = toNode(value, node)\n  return Array.isArray(result) ? result : [result]\n}\n\n/**\n * Turn into a node.\n *\n * @param {Readonly<ElementContent> | ReadonlyArray<ElementContent> | Build} value\n *   Content.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Array<ElementContent> | ElementContent}\n *   Node.\n */\nfunction toNode(value, node) {\n  if (typeof value === 'function') return value(node)\n  return clone(value)\n}\n\n/**\n * Turn into properties.\n *\n * @param {Readonly<Properties> | BuildProperties | null | undefined} value\n *   Properties.\n * @param {Readonly<Element>} node\n *   Related heading.\n * @returns {Properties}\n *   Properties.\n */\nfunction toProperties(value, node) {\n  if (typeof value === 'function') return value(node)\n  return value ? clone(value) : {}\n}\n","import type { Plugin, Pluggable } from 'unified';\nimport type { Root, RootContent, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\n\n/**\n * Raw string of HTML embedded into HTML AST.\n */\nexport interface Raw extends Literal {\n  /**\n   * Node type.\n   */\n  type: 'raw'\n}\n\n// Register nodes in content.\ndeclare module 'hast' {\n  interface RootContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n  interface ElementContentMap {\n    /**\n     * Raw string of HTML embedded into HTML AST.\n     */\n    raw: Raw\n  }\n}\n\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'raw' || item.type === 'comment') {\n            let str =  (item.value || '').trim();\n            str = str.replace(/^<!--(.*?)-->/, '$1')\n            if (str === openDelimiter) {\n                start = true;\n                return false;\n            }\n            if (str === closeDelimiter) {\n                start = false;\n                return false;\n            }\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [cascade=true]\n *   Whether to drop parent nodes if they had children, but all their children\n *   were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new `tree` of copies of all nodes that pass `test`.\n *\n * The tree is walked in *preorder* (NLR), visiting the node itself, then its\n * head, etc.\n *\n * @param tree\n *   Tree to filter.\n * @param options\n *   Configuration (optional).\n * @param test\n *   `unist-util-is` compatible test.\n * @returns\n *   New filtered tree.\n *\n *   `null` is returned if `tree` itself didn’t pass the test, or is cascaded\n *   away.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: Options | null | undefined, test: Check | null | undefined) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types.js').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: Options | null | undefined) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Options | Test | null | undefined} [options]\n     * @param {Test | null | undefined} [test]\n     * @returns {Node | null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      /** @type {boolean | null | undefined} */\n      const cascadeRaw =\n        options && typeof options === 'object' && 'cascade' in options\n          ? /** @type {boolean | null | undefined} */ (options.cascade)\n          : undefined\n      const cascade =\n        cascadeRaw === undefined || cascadeRaw === null ? true : cascadeRaw\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       *   Current node.\n       * @param {number | undefined} [index]\n       *   Index of `node` in `parent`.\n       * @param {Parent | undefined} [parent]\n       *   Parent node.\n       * @returns {Node | null}\n       *   Shallow copy of `node`.\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array<Node>} */\n        const children = []\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          let childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            const result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n        /** @type {string} */\n        let key\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n * @property {string} [defaultLanguage]\n *   Uses the specified language as the default if none is specified. Takes precedence over `ignoreMissing`.\n *   Note: The language must be registered with refractor.\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * @param {import('refractor/lib/core').Refractor} refractor\n * @param {string} defaultLanguage\n * @return {void}\n */\nconst checkIfLanguageIsRegistered = (refractor, defaultLanguage) => {\n  if (defaultLanguage && !refractor.registered(defaultLanguage)) {\n    throw new Error(`The default language \"${defaultLanguage}\" is not registered with refractor.`)\n  }\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 1 is needed to avoid error with @next/mdx\n            // https://github.com/timlrx/rehype-prism-plus/issues/44\n            start: { line: startLineNum, column: 1 },\n            end: { line: startLineNum, column: 1 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i, column: 1 },\n                end: { line: startLineNum + i, column: 1 },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 1 },\n          end: { line: startLineNum, column: 1 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    checkIfLanguageIsRegistered(refractor, options.defaultLanguage)\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = /** @type {string} */ (node?.data?.meta || node?.properties?.metastring || '')\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n\n      let lang = getLanguage(node)\n      // If no language is set on the code block, use defaultLanguage if specified\n      if (!lang && options.defaultLanguage) {\n        lang = options.defaultLanguage\n        node.properties.className.push(`language-${lang}`)\n      }\n      node.properties.className.push('code-highlight')\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          let rootLang\n          if (lang?.includes('diff-')) {\n            rootLang = lang.split('-')[1]\n          } else {\n            rootLang = lang\n          }\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), rootLang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + rootLang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '-'\n        ) {\n          line.properties.className.push('deleted')\n        } else if (\n          (lang === 'diff' || lang?.includes('diff-')) &&\n          toString(line).substring(0, 1) === '+'\n        ) {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nexport const regex = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08C8-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B54\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1AC1-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31C0-\\u31EF\\u3200-\\u33FF\\u4DC0-\\u4DFF\\u9FFD-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7CB-\\uA7F4\\uA828-\\uA82B\\uA82D-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB6A-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDE7F\\uDEAA\\uDEAD-\\uDEAF\\uDEB2-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFAF\\uDFC5-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD48-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC62-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD07\\uDD08\\uDD0A\\uDD0B\\uDD14\\uDD17\\uDD36\\uDD39\\uDD3A\\uDD44-\\uDD4F\\uDD5A-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFAF\\uDFB1-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD824-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D\\uD83F\\uD87B-\\uD87D\\uD87F\\uD885-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE5-\\uDFEF\\uDFF2-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD823[\\uDCD6-\\uDCFF\\uDD09-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD83E[\\uDC00-\\uDFEF\\uDFFA-\\uDFFF]|\\uD869[\\uDEDE-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uD884[\\uDF4B-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","import { regex } from './regex.js'\n\nconst own = Object.hasOwnProperty\n\n/**\n * Slugger.\n */\nexport default class BananaSlug {\n  /**\n   * Create a new slug class.\n   */\n  constructor () {\n    /** @type {Record<string, number>} */\n    // eslint-disable-next-line no-unused-expressions\n    this.occurrences\n\n    this.reset()\n  }\n\n  /**\n   * Generate a unique slug.\n  *\n  * Tracks previously generated slugs: repeated calls with the same value\n  * will result in different slugs.\n  * Use the `slug` function to get same slugs.\n   *\n   * @param  {string} value\n   *   String of text to slugify\n   * @param  {boolean} [maintainCase=false]\n   *   Keep the current case, otherwise make all lowercase\n   * @return {string}\n   *   A unique slug string\n   */\n  slug (value, maintainCase) {\n    const self = this\n    let result = slug(value, maintainCase === true)\n    const originalSlug = result\n\n    while (own.call(self.occurrences, result)) {\n      self.occurrences[originalSlug]++\n      result = originalSlug + '-' + self.occurrences[originalSlug]\n    }\n\n    self.occurrences[result] = 0\n\n    return result\n  }\n\n  /**\n   * Reset - Forget all previous slugs\n   *\n   * @return void\n   */\n  reset () {\n    this.occurrences = Object.create(null)\n  }\n}\n\n/**\n * Generate a slug.\n *\n * Does not track previously generated slugs: repeated calls with the same value\n * will result in the exact same slug.\n * Use the `GithubSlugger` class to get unique slugs.\n *\n * @param  {string} value\n *   String of text to slugify\n * @param  {boolean} [maintainCase=false]\n *   Keep the current case, otherwise make all lowercase\n * @return {string}\n *   A unique slug string\n */\nexport function slug (value, maintainCase) {\n  if (typeof value !== 'string') return ''\n  if (!maintainCase) value = value.toLowerCase()\n  return value.replace(regex, '').replace(/ /g, '-')\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string} [prefix='']\n *   Prefix to add in front of `id`s (default: `''`).\n */\n\nimport GithubSlugger from 'github-slugger'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\n/** @type {Options} */\nconst emptyOptions = {}\nconst slugs = new GithubSlugger()\n\n/**\n * Add `id`s to headings.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeSlug(options) {\n  const settings = options || emptyOptions\n  const prefix = settings.prefix || ''\n\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  return function (tree) {\n    slugs.reset()\n\n    visit(tree, 'element', function (node) {\n      if (headingRank(node) && !node.properties.id) {\n        node.properties.id = prefix + slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","import type { Plugin } from 'unified';\nimport type { Root, Element } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { detailsNode } from './detailsNode.js';\n\nexport type RehypeVideoOptions = {\n  /**\n   * URL suffix verification.\n   * @default /\\/(.*)(.mp4|.mov)$/\n   */\n  test?: RegExp;\n  /**\n   * Support `<details>` tag to wrap <video>.\n   * @default true\n   */\n  details?: boolean;\n}\n\nconst properties = { muted: 'muted', controls: 'controls', style: 'max-height:640px;' };\nconst queryStringToObject = (url: string) =>\n  [...new URLSearchParams(url.split('?!#')[1])].reduce(\n    (a: Record<string, string>, [k, v]) => ((a[k] = v), a),\n    {}\n  );\n\nfunction reElement(node: Element, details: boolean, href: string) {\n  const filename = href.split('/').pop()?.replace(/(\\?|!|\\#|$).+/, '');\n  node.properties = { ...properties, src: href };\n  node.tagName = 'video';\n  node.children = [];\n  const { title = filename }= queryStringToObject(href);\n  if (details) {\n    const reNode = detailsNode(title);\n    reNode.children.push({ ...node });\n    node.children = reNode.children;\n    node.tagName = reNode.tagName;\n    node.properties = reNode.properties;\n  }\n}\n\nconst RehypeVideo: Plugin<[RehypeVideoOptions?], Root> = (options) => {\n  const { test = /\\/(.*)(.mp4|.mov)$/, details = true } = options || {};\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      const isChecked = (str: string) => test.test(str.replace(/(\\?|!|\\#|$).+/g, '').toLocaleLowerCase())\n      const child = node.children[0];\n      const delimiter = /((?:https?:\\/\\/)(?:(?:[a-z0-9]?(?:[a-z0-9\\-]{1,61}[a-z0-9])?\\.[^\\.|\\s])+[a-z\\.]*[a-z]+|(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::\\d{1,5})*[a-z0-9.,_\\/~#&=;%+?\\-\\\\(\\\\)]*)/g;\n      // const delimiter = /((?:https?:\\/\\/)?(?:(?:[a-z0-9]?(?:[a-z0-9\\-]{1,61}[a-z0-9])?\\.[^\\.|\\s])+[a-z\\.]*[a-z]+|(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3})(?::\\d{1,5})*[a-z0-9.,_\\/~#&=;%+?\\-\\\\(\\\\)]*)/g;\n\n      if (node.tagName === 'p' && node.children.length === 1) {\n        if (child.type === 'text' && delimiter.test(child.value) && isChecked(child.value)) {\n          reElement(node, details, child.value);\n        }\n        if (child.type === 'element' && child.tagName === 'a' && child.properties && typeof child.properties.href === 'string' && isChecked(child.properties.href)) {\n          reElement(node, details, child.properties.href);\n        }\n      }\n    });\n  }\n}\n\nexport default RehypeVideo;\n","import type { Element } from 'hast';\n\nexport function detailsNode(title?: string): Element {\n  return {\n    type: 'element',\n    tagName: 'details',\n    properties: { open: true, className: 'octicon octicon-video' },\n    children: [\n      {\n        type: 'element',\n        tagName: 'summary',\n        properties: {},\n        children: [\n          {\n            type: 'element',\n            tagName: 'svg',\n            properties: {\n              'aria-hidden': true, height: 16, width: 16, viewBox: '0 0 16 16', version: '1.1', 'data-view-component': true,\n              className: 'octicon octicon-device-camera-video'\n            },\n            children: [\n              {\n                type: 'element',\n                tagName: 'path',\n                properties: {\n                  'fill-rule': 'evenodd',\n                  d: 'M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z'\n                },\n                children: [],\n              }\n            ]\n          },\n          {\n            type: 'element',\n            tagName: 'span',\n            properties: {\n              'aria-label': `Video description ${title || ''}`\n            },\n            children: [\n              {\n                type: 'text',\n                value: title || ''\n              }\n            ]\n          },\n          {\n            type: 'element',\n            tagName: 'span',\n            properties: {\n              className: 'dropdown-caret'\n            },\n            children: []\n          }\n        ]\n      }\n    ]\n  }\n}","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is PhrasingContent} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      'link',\n      'linkReference',\n      'strong',\n      'text'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {finish} = options || {}\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\"\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\")\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>, ?{nonce: ?string})\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  //\n  // If a Content Security Policy nonce is provided, it is added to\n  // the `<style>` tag generated by the library.\n  static mount(root, modules, options) {\n    let set = root[SET], nonce = options && options.nonce\n    if (!set) set = new StyleSet(root, nonce)\n    else if (nonce) set.setNonce(nonce)\n    set.mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = new Map //<Document, StyleSet>\n\nclass StyleSet {\n  constructor(root, nonce) {\n    let doc = root.ownerDocument || root, win = doc.defaultView\n    if (!root.head && root.adoptedStyleSheets && win.CSSStyleSheet) {\n      let adopted = adoptedSet.get(doc)\n      if (adopted) {\n        root.adoptedStyleSheets = [adopted.sheet, ...root.adoptedStyleSheets]\n        return root[SET] = adopted\n      }\n      this.sheet = new win.CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet, ...root.adoptedStyleSheets]\n      adoptedSet.set(doc, this)\n    } else {\n      this.styleTag = doc.createElement(\"style\")\n      if (nonce) this.styleTag.setAttribute(\"nonce\", nonce)\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n\n  setNonce(nonce) {\n    if (this.styleTag && this.styleTag.getAttribute(\"nonce\") != nonce)\n      this.styleTag.setAttribute(\"nonce\", nonce)\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\"\n}\n\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // On macOS, keys held with Shift and Cmd don't reflect the effect of Shift in `.key`.\n  // On IE, shift effect is never included in `.key`.\n  var ignoreKey = mac && event.metaKey && event.shiftKey && !event.ctrlKey && !event.altKey ||\n      ie && event.shiftKey && event.key && event.key.length == 1 ||\n      event.key == \"Unidentified\"\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n"],"names":["t","document","e","s","o","h","r","n","arguments","length","undefined","Object","defineProperty","enumerable","get","this","getAttribute","set","setAttribute","a","HTMLElement","observedAttributes","constructor","super","_defineProperty","connectedCallback","hasAttribute","removeAttribute","c","localStorage","getItem","includes","mode","permanent","setItem","l","window","matchMedia","matches","onchange","MutationObserver","documentElement","dataset","colorMode","i","colorScheme","observe","attributes","attributeChangedCallback","removeItem","icon","textContent","text","parentElement","removeChild","attachShadow","label","createElement","onclick","appendChild","getElementById","id","head","dispatchEvent","CustomEvent","bubbles","composed","detail","customElements","define","module","exports","trueFunc","falseFunc","hasOwn","prototype","hasOwnProperty","toStr","toString","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","setProperty","target","options","name","configurable","value","newValue","writable","getProperty","extend","src","copy","copyIsArray","clone","deep","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","replace","style","TypeError","lineno","column","updatePosition","lines","match","lastIndexOf","position","start","line","node","Position","whitespace","end","source","content","errorsList","error","msg","err","Error","reason","filename","silent","push","re","m","exec","slice","comments","rules","comment","pos","charAt","type","declaration","prop","val","ret","property","decl","decls","declarations","parsePart","string","res","split","map","test","parseInt","_","lhs","sep","rhs","incr","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","replaceClassName","origClass","classToRemove","RegExp","React","forceReflow","scrollTop","UNMOUNTED","EXITED","ENTERING","ENTERED","EXITING","Transition","_React$Component","props","context","_this","initialStatus","appear","isMounting","enter","appearStatus","in","unmountOnExit","mountOnEnter","state","status","nextCallback","getDerivedStateFromProps","_ref","prevState","_proto","componentDidMount","updateStatus","componentDidUpdate","prevProps","nextStatus","componentWillUnmount","cancelNextCallback","getTimeouts","exit","timeout","mounting","nodeRef","current","ReactDOM","performEnter","performExit","setState","_this2","appearing","_ref2","maybeNode","maybeAppearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","onExited","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","_ref3","maybeNextCallback","setTimeout","render","_this$props","children","childProps","_objectWithoutPropertiesLoose","TransitionGroupContext","Provider","only","noop","contextType","propTypes","defaultProps","removeClass","classes","forEach","className","element","classList","remove","baseVal","CSSTransition","_len","args","_key","apply","concat","appliedClasses","_this$resolveArgument","resolveArguments","removeClasses","addClass","_this$resolveArgument2","_this$resolveArgument3","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","done","_extends","parse","require","StyleToObject","iterator","output","hasIterator","len","toPropertyKey","__esModule","_typeof","input","hint","prim","Symbol","toPrimitive","String","Number","arg","asyncGeneratorStep","gen","resolve","reject","_next","_throw","info","Promise","then","_asyncToGenerator","fn","self","DefaultBufferLength","nextPropID","Range","from","to","NodeProp","perNode","deserialize","RangeError","NodeType","result","closedBy","openedBy","group","contextHash","lookAhead","mounted","MountedTree","tree","overlay","parser","noProps","flags","spec","top","skipped","isTop","isSkipped","isError","isAnonymous","is","direct","groups","found","none","NodeSet","types","newTypes","newProps","assign","CachedNode","WeakMap","CachedInnerNode","IterMode","Tree","positions","ch","JSON","stringify","cursor","TreeCursor","topNode","cursorAt","side","scope","moveTo","_tree","TreeNode","resolveNode","resolveInner","resolveStack","inner","layers","scan","parent","index","mount","root","iterStack","stackIterator","iterate","leave","anon","IncludeAnonymous","entered","firstChild","nextSibling","propValues","balance","balanceRange","makeTree","build","data","_a","buffer","nodeSet","maxBufferLength","reused","minRepeatType","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","depth","size","lookAheadAtStart","next","startPos","findBufferSize","Uint16Array","skip","endPos","copyToBuffer","TreeBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","takeFlatNode","reverse","make","makeBalanced","nodes","nodeCount","stopAt","j","last","lookAheadProp","lastI","pop","pair","maxSize","fork","minStart","nodeSize","localSkipped","nodeStart","bufferStart","startIndex","topID","buildTree","empty","childString","join","endIndex","findChild","dir","pick","checkSide","startI","endI","b","Math","max","overlays","IgnoreOverlays","BaseNode","getChild","getChildren","matchContext","matchNodeContext","enterUnfinishedNodesBefore","childBefore","lastChild","prevSibling","_parent","nextChild","ExcludeBuffers","BufferNode","BufferContext","hasChild","IgnoreMounts","childAfter","rPos","nextSignificantParent","toTree","before","after","cur","child","externalSibling","heads","picked","newHeads","splice","StackIterator","stack","bufferNode","yieldNode","unshift","yieldBuf","yield","enterChild","sibling","d","atLastNode","move","prev","cache","mustLeave","some","nodeSizeCache","balanceType","mkTop","mkTree","total","maxChild","ceil","divide","offset","groupFrom","groupStart","groupSize","nextSize","NodeWeakMap","setBuffer","Map","getBuffer","cursorSet","cursorGet","TreeFragment","openStart","openEnd","open","addTree","fragments","partial","f","applyChanges","changes","minGap","fI","nextF","cI","off","nextC","nextPos","fromA","cut","fFrom","fTo","min","toA","toB","Parser","startParse","ranges","StringInput","createParse","advance","chunk","lineChunks","read","parseMixed","nest","MixedParse","InnerParse","checkRanges","ActiveOverlay","predicate","mounts","stoppedInner","innerDone","baseTree","stoppedAt","baseParse","startInner","parsedPos","fragmentCursor","FragmentCursor","covered","isCovered","range","hasNode","find","frag","checkCover","materialize","oldMounts","findMounts","punchRanges","enterFragments","sliceBuf","buf","newStack","innerOffset","stackPos","targetI","StructureCursor","curTo","fragI","first","curFrag","nextFrag","outer","gapFrom","gapTo","findCoverChanges","iA","iB","inA","inB","nextA","nextB","space","isAlpha","identifiers","ExternalTokenizer","inside","dashes","peek","acceptToken","canShift","descendant","unitToken","cssHighlighting","styleTags","tags","definitionKeyword","keyword","NamespaceName","namespace","KeyframeName","labelName","KeyframeRangeName","operatorKeyword","TagName","tagName","ClassName","PseudoClassName","constant","IdName","propertyName","AttributeName","attributeName","NumberLiteral","number","KeywordQuery","UnaryQueryOp","atom","VariableName","variableName","Callee","Unit","unit","definitionOperator","MatchOp","compareOperator","logicOperator","BinOp","arithmeticOperator","Important","modifier","Comment","blockComment","ColorLiteral","color","punctuation","derefOperator","separator","paren","squareBracket","brace","spec_callee","lang","url","domain","regexp","selector","spec_AtKeyword","spec_identifier","not","LRParser","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","LocalTokenGroup","topRules","specialized","term","tokenPrec","nextTagID","Tag","modified","tag","defineModifier","mod","Modifier","sort","nextModifierID","instances","mods","exists","every","x","configs","array","sets","powerSet","byName","part","pieces","rest","rule","Rule","ruleNodeProp","opaque","inherit","other","tagHighlighter","class","all","cls","sub","tagClass","highlightTree","highlighter","putStyle","builder","HighlightBuilder","highlightRange","highlighters","flush","at","span","startSpan","inheritedClass","filter","getStyleTags","tagCls","highlightTags","innerHighlighters","rangeFrom","rangeTo","typeName","literal","heading","operator","bracket","meta","lineComment","docComment","macroName","docString","character","attributeValue","integer","float","bool","escape","null","controlKeyword","moduleKeyword","bitwiseOperator","updateOperator","typeOperator","controlOperator","angleBracket","heading1","heading2","heading3","heading4","heading5","heading6","contentSeparator","list","quote","emphasis","strong","link","monospace","strikethrough","inserted","deleted","changed","invalid","documentMeta","annotation","processingInstruction","definition","function","standard","local","special","Element","Attribute","AttributeValue","UnquotedAttributeValue","ScriptText","StyleText","TextareaText","CloseTag","selfClosers","area","br","col","command","embed","frame","hr","img","keygen","param","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","rp","rt","tbody","td","tfoot","th","tr","closeOnOpen","dt","address","article","aside","blockquote","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","table","ul","thead","isSpace","cachedName","cachedInput","cachedPos","tagNameAfter","fromCharCode","toLowerCase","question","bang","ElementContext","hash","charCodeAt","startTagTerms","elementContext","ContextTracker","shift","reduce","reuse","strict","tagStart","close","dialectEnabled","cx","contextual","commentContent","endTag","selfClosing","inForeignElement","contentTokenizer","textToken","endToken","lastState","matchedLen","scriptTokens","styleTokens","textareaTokens","htmlHighlighting","Is","ProcessingInst","DoctypeDecl","dialects","noMatch","getAttrs","openTag","attrs","att","findTagName","tagNameNode","maybeNest","configureNesting","script","textarea","attr","nameNode","trackNewline","insertSemicolon","fallback","noSemicolon","incdecToken","mayPostfix","jsHighlight","TemplateString","BooleanLiteral","Star","VariableDefinition","Label","PropertyName","PrivatePropertyName","PropertyDefinition","PrivatePropertyDefinition","UpdateOp","BlockComment","Escape","ArithOp","LogicOp","BitOp","CompareOp","Equals","Arrow","TypeName","TypeDefinition","JSXAttributeValue","JSXText","export","as","default","async","extends","true","false","void","typeof","new","delete","await","public","private","protected","readonly","instanceof","satisfies","const","import","keyof","unique","infer","abstract","implements","let","var","using","interface","enum","declare","global","for","of","while","with","do","if","else","switch","case","try","catch","finally","return","throw","break","continue","debugger","spec_word","static","override","accessor","spec_LessThan","jsx","ts","dynamicPrecedences","jsonHighlighting","Null","Stack","reducePos","score","bufferBase","curContext","StackContext","pushState","action","dPrec","dynamicPrecedence","getGoto","minRepeatTerm","storeNode","reduceContext","lastBigReductionStart","bigReductionCount","lastBigReductionSize","count","stateFlag","baseStateID","isReduce","maxNode","shiftContext","nextStart","nextEnd","useNode","updateContext","tracker","stream","reset","recoverByDelete","isNode","sim","SimulatedStack","stateSlot","hasAction","recoverByInsert","nextStates","best","v","forceReduce","validAction","backup","findForcedReduction","seen","explore","allActions","rDepth","forceAll","deadEnd","restart","sameState","dialectID","dialect","emitContext","emitLookAhead","newCx","setLookAhead","StackBufferCursor","maybeNext","decodeArray","Type","out","stop","digit","CachedToken","extended","mask","nullToken","InputStream","chunkOff","chunk2","chunk2Pos","token","rangeIndex","chunkPos","readNext","resolveOffset","assoc","clipPos","idx","resolved","endOffset","getChunk","nextChunk","setDone","TokenGroup","readToken","tokenPrecTable","precTable","elseToken","atEof","precOffset","groupMask","accEnd","allows","overrides","low","high","mid","findOffset","tableData","tableOffset","iPrev","verbose","process","LOG","stackIDs","cutAt","fragment","safeFrom","safeTo","trees","nextFragment","fr","nodeAt","TokenCache","tokens","mainToken","actions","getActions","actionIndex","main","tokenizer","updateCachedToken","addActions","eofTerm","getMainToken","specializers","putAction","Parse","recovering","nextStackID","minStackPos","topTerm","stacks","bufferLength","stopped","stoppedTokens","newStacks","advanceStack","tok","finished","findFinished","console","log","stackID","stackToTree","getName","SyntaxError","runRecovery","maxRemaining","strictCx","cxHash","cached","defaultReduce","localStack","advanceFully","pushStackDedup","restarted","tokenEnd","force","forceBase","insert","fromCodePoint","Dialect","disabled","wrappers","topTerms","keys","setProp","nodeID","propSpec","tokenArray","specializerSpecs","getSpecializer","Uint32Array","termNames","parseDialect","w","loose","groupTag","terminal","slot","flag","deflt","configure","external","contextTracker","wrap","hasWrappers","prec","values","Uint8Array","nameChar","_stack","startTag","scanTo","piContent","cdataContent","xmlHighlighting","Text","Cdata","env","globalThis","serialized","deserializer","$","unpair","has","object","Date","Set","message","BigInt","EMPTY","typeOf","asString","shouldSkip","TYPE","serialize","json","lossy","serializer","entry","valueOf","toJSON","entries","toISOString","structuredClone","any","settings","padRight","padLeft","crelt","elt","nodeType","createTextNode","decodeNamedCharacterReference","characterReference","innerHTML","char","ok","unreachable","headingRank","code","decodeMap","codePoint","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isEntityInAttributeInvalidEnd","EQUALS","UPPER_A","UPPER_Z","LOWER_A","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","consumed","treeIndex","excess","decodeMode","Strict","startEntity","write","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","startIdx","UPPER_F","LOWER_F","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","decoder","lastIndex","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","midVal","htmlDecodeTree","xmlDecodeTree","xmlCodeMap","codePointAt","getEscaper","regex","lastIdx","substring","emptyMulticharIndex","emptyRegularIndex","extendIndex","item","currentIndex","isLast","charIndex","chars","createMulticharIndex","items","_i","items_1","createRegularIndex","items_2","emptyPseudoSignatures","defaultPseudoSignature","optional","calculatePseudoSignature","setResultType","types_1","ofSelector","calculatePseudoSignatures","definitions","pseudoClassesToArgumentTypes","category","_b","_c","inverseCategories","pseudoClass","argumentTypes","__assign","emptyXmlOptions","defaultXmlOptions","wildcard","withPositive","positive","merge","extension","mergeSection","mergeSchema","replaceValueIfSpecified","concatArray","mergeDefinitions","baseValue","migration","extendSyntaxDefinition","withNoNegative","baseSyntax","ids","combinators","operators","caseSensitivityModifiers","unknownCaseSensitivityModifiers","pseudoClasses","unknown","pseudoElements","notation","NoArgument","css1SyntaxDefinition","css2SyntaxDefinition","selectors3SyntaxDefinition","Formula","Selector","selectors4SyntaxDefinition","FormulaOfSelector","cssSyntaxDefinitions","css1","css2","css3","latest","progressive","isIdentStart","isHex","stringEscapeChars","whitespaceChars","quoteChars","digitsChars","errorPrefix","astMethods","generatorName","checkerName","entity","cssSelectorParse","syntax","substitutes","syntaxDefinition","Boolean","tagNameEnabled","tagNameWildcardEnabled","idEnabled","classNamesEnabled","namespaceEnabled","namespaceWildcardEnabled","substitutesEnabled","combinatorsIndex","_d","attributesEnabled","attributesOperatorsIndex","attributesCaseSensitivityModifiers","attributesAcceptUnknownCaseSensitivityModifiers","attributesCaseSensitivityModifiersEnabled","_e","pseudoClassesEnabled","pseudoClassesDefinitions","pseudoClassesAcceptUnknown","_f","pseudoElementsEnabled","pseudoElementsSingleColonNotationEnabled","pseudoElementsDoubleColonNotationEnabled","pseudoElementsDefinitions","pseudoElementsAcceptUnknown","chr","comparison","isTagStart","rewind","newPos","readAndNext","fail","errorMessage","assert","condition","assertNonEof","isEof","pass","matchMulticharIndex","matchMulticharIndexPos","subPos","subMatch","parseHex","hex","parseString","esc","parseIdentifier","parsePseudoClassString","skipWhitespace","parseSelector","relative","parseRule","parseAttribute","name_1","name_2","identifier","savedPos","name_3","name_4","caseSensitivityModifier","parseNumber","isNumberStart","parsePseudoArgument","pseudoName","signature","argument","name_5","ident","firstNumber","firstNumberMultiplier","sign","parseFormula","parseTagName","name_6","parseTagNameWithNamespace","combinator","idName","isDoubleColon","pseudoElement","nestedRule","createParser","rtlRange","ltrRange","rtl","ltr","dirBidi","direction","dirProperty","properties","attribute","query","schema","commaSeparated","commas","spaces","normalizeValue","emptyClassNames","factory","check","left","cast","right","rightIndex","leftIndex","extendedFilter","own","hasProperty","nthCheck","formula","parsed","boolbase","absA","abs","bMod","compile","readSign","readNumber","fauxEsmNthCheck","pseudo","zwitch","handlers","blank","someChildren","checked","_1","_2","_3","enabled","assertDeep","elementIndex","typeIndex","childState","one","results","rootQuery","scopeElements","shallow","walk","language","elementCount","typeCount","getCachedNthCheck","required","readWrite","query_","_cachedFn","editableOrEditingHost","field","combine","counts","toUpperCase","currentRules","nestResult","adjacentSibling","directChild","generalSibling","currentDirection","dirInferred","xmlLang","contentEditable","svg","visit","EXIT","SKIP","enterState","rootRules","selectorIndex","applySelectors","fromParent","fromSibling","selectAll","createState","html","thing","search","buttonTypes","addProperty","isNaN","spaceSeparated","commaOrSpaceSeparated","parsePrimitive","finalResult","addChild","boolean","overloadedBoolean","normalize","defaultTagName","caseSensitive","adjust","createAdjustMap","previous","subvalue","isProperties","core","emptyOptions","includeImageAlt","includeHtml","alt","blankLine","tokenize","effects","nok","markdownSpace","factorySpace","markdownLineEnding","limit","POSITIVE_INFINITY","prefix","consume","unicodePunctuationInternal","regexCheck","asciiAlpha","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEndingOrSpace","unicodePunctuation","unicodeWhitespace","parameters","chunkStart","classifyCharacter","combineExtensions","extensions","syntaxExtension","hook","constructs","existing","normalizeIdentifier","resolveAll","events","called","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","messages","parseEntities","additional","point","indent","queue","now","following","begin","characterReferenceCharacters","characters","terminated","namedReference","diff","reference","nonTerminated","warning","referenceCode","disallowed","referenceContext","warningContext","textContext","Schema","normal","DefinedInfo","transform","mustUseProperty","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","cite","cols","colSpan","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dirName","download","draggable","encType","enterKeyHint","fetchPriority","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","href","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inert","inputMode","integrity","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","loading","loop","manifest","maxLength","media","method","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","reversed","rows","rowSpan","sandbox","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","shape","sizes","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","title","translate","typeMustMatch","useMap","width","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","compact","face","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filterRes","filterUnits","focusable","focusHighlight","format","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","order","orient","orientation","origin","overflow","path","pathLength","patternContentUnits","patternTransform","patternUnits","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","rotate","rx","ry","scale","seed","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Info","camelcase","kebab","$0","checks","mark","defined","powers","increment","hastToReact","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","ruleId","fatal","file","actual","expected","note","emptyMap","dashSomething","tableElements","tableCellElement","toJsxRuntime","Fragment","filePath","development","jsxDEV","isStaticChildren","pointStart","columnNumber","fileName","lineNumber","developmentCreate","jsxs","productionCreate","components","elementAttributeNameCase","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","parentSchema","countsByTagName","createChildren","alignValue","createProperty","createProperties","styleObject","styleToObject","replacer","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","toDash","$1","urlAttributes","subtokenize","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","startPosition","startPositions","childEvents","gaps","breaks","sliceStream","defineSkip","_gfmTasklistFirstContentOfListItem","contentStart","attempt","contentInitial","lineStart","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","flowContinue","writeToChild","eof","disable","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","expectedCode","startBufferIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","factoryWhitespace","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","contentBefore","beforeContentChunk","contentChunk","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","resolveText","decodeNumericCharacterReference","characterEscapeOrReference","decode","$2","fromMarkdown","encoding","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","setextHeadingSlurpLineEnding","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","characterReferenceType","ordered","spread","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","TextDecoder","preprocess","combined","remarkParse","doc","normalizeUri","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","trimLine","patch","applyData","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","listLoose","firstRow","tableContent","body","pointEnd","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","handle","passThrough","unknownHandler","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","dataFootnoteBackref","tailTail","dataFootnotes","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","middlewareIndex","_len2","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","_len4","_key4","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","segments","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","stored","assertNonEmpty","assertPart","stem","CallableInstance","proto","func","names","getOwnPropertyNames","descriptor","Processor","Compiler","attachers","freezeIndex","frozen","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","assertCompiler","executor","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","changelog","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","codeBlockParames","getCommentObject","getURLParameters","keyName","propertiesHandle","defaultAttrs","rehyp","prevChild","convertElement","castFactory","tagNameFactory","tests","anyFactory","testFunction","looksLikeAnElement","contentDefaults","rehypeAutolinkHeadings","headingOroperties","headingProperties","behavior","toChildren","toProperties","grouping","toNode","openDelimiter","closeDelimiter","convert","typeFactory","propsFactory","visitParents","visitor","parents","subresult","grandparents","toResult","registered","defaultLanguage","metastring","u","g","highlight","ignoreMissing","N","cascadeRaw","cascade","preorder","childIndex","showLineNumbers","O","createH","webNamespaces","mathml","fromParse5","location","nodeName","quirksMode","childNodes","loc","indices","toPoint","toOffset","namespaceURI","sourceCodeLocation","createLocation","opening","closing","startLine","startCol","endLine","endCol","currentSchema","parentNode","doctype","publicId","systemId","htmlVoidElements","knownMdxNames","parseOptions","sourceCodeLocationInfo","scriptingEnabled","documentMode","handleRaw","getFragmentParser","stitches","resetTokenizer","getFragment","stitch","TokenizerMode","PLAINTEXT","openElements","ns","toParse5","Token","START_TAG","tagID","ackSelfClosing","createParse5Location","currentToken","_processToken","lastStartTagName","inForeignNode","END_TAG","RCDATA","RAWTEXT","SCRIPT_DATA","DATA","CHARACTER","DOCTYPE","forceQuirks","cloneWithoutChildren","fakeRoot","COMMENT","preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","setPoint","_runParsingLoop","cp","_consume","_callState","node_","extra","currentCharacterToken","paused","inLoop","charRefCode","consumedAfterSnapshot","currentLocation","currentAttr","lineStartPos","droppedBufferSize","rehypeRaw","slugs","occurrences","slug","maintainCase","originalSlug","rehypeSlug","reElement","details","_href$split$pop","URLSearchParams","reNode","detailsNode","isChecked","toLocaleLowerCase","delimiter","ccount","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","createTracker","subexit","safe","associationId","indentLines","containerFlow","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","unsafe","checkQuote","checkEmphasis","expression","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","replacement","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","EditMap","editMap","addImpl","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","COUNT","SET","floor","random","StyleModule","finish","splitSelector","selectors","isKeyframes","isAt","keyframes","sel","getRules","newName","modules","setNonce","StyleSet","adoptedSet","ownerDocument","win","defaultView","adoptedStyleSheets","CSSStyleSheet","adopted","sheet","styleTag","insertBefore","insertRule","checkAsRecord","nodeAsRecord","looksLikeANode","CONTINUE","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","mac","navigator","platform","ie","userAgent","metaKey","shiftKey","ctrlKey","altKey","keyCode"],"sourceRoot":""}