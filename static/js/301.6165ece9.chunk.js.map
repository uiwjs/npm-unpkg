{"version":3,"sources":["../node_modules/prismjs/components/prism-pascal.min.js"],"names":["Prism","languages","pascal","comment","string","pattern","greedy","keyword","lookbehind","number","operator","punctuation","objectpascal"],"mappings":"iGAAAA,MAAMC,UAAUC,OAAO,CAACC,QAAQ,CAAC,mBAAmB,eAAe,UAAUC,OAAO,CAACC,QAAQ,wDAAwDC,QAAO,GAAIC,QAAQ,CAAC,CAACF,QAAQ,iTAAiTG,YAAW,GAAI,CAACH,QAAQ,+CAA+CG,YAAW,GAAI,CAACH,QAAQ,mKAAmKG,YAAW,GAAI,CAACH,QAAQ,mhBAAmhBG,YAAW,IAAKC,OAAO,CAAC,0BAA0B,kCAAkCC,SAAS,CAAC,gDAAgD,CAACL,QAAQ,0EAA0EG,YAAW,IAAKG,YAAY,0BAA0BX,MAAMC,UAAUW,aAAaZ,MAAMC,UAAUC","file":"static/js/301.6165ece9.chunk.js","sourcesContent":["Prism.languages.pascal={comment:[/\\(\\*[\\s\\S]+?\\*\\)/,/\\{[\\s\\S]+?\\}/,/\\/\\/.*/],string:{pattern:/(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,greedy:!0},keyword:[{pattern:/(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,lookbehind:!0},{pattern:/(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,lookbehind:!0}],number:[/(?:[&%]\\d+|\\$[a-f\\d]+)/i,/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],operator:[/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,{pattern:/(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,lookbehind:!0}],punctuation:/\\(\\.|\\.\\)|[()\\[\\]:;,.]/},Prism.languages.objectpascal=Prism.languages.pascal;"],"sourceRoot":""}