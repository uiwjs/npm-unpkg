{"version":3,"sources":["../node_modules/prismjs/components/prism-stan.js"],"names":["Prism","languages","stan","pattern","greedy","lookbehind","alias","inside","constraint","expression"],"mappings":"iGAEAA,MAAMC,UAAUC,KAAO,CACtB,QAAW,yCACX,OAAU,CAGTC,QAAS,kCACTC,QAAQ,GAET,UAAa,CACZD,QAAS,yBACTE,YAAY,EACZC,MAAO,YAGR,eAAgB,CACfH,QAAS,qHACTE,YAAY,EACZC,MAAO,YAER,WAAc,CACbH,QAAS,uDACTE,YAAY,EACZE,OAAQ,CACP,WAAc,CACbJ,QAAS,6CACTE,YAAY,EACZE,OAAQ,MAET,SAAY,sBACZ,SAAY,IACZ,YAAe,cAGjB,QAAW,CACV,iTAEA,mGAED,SAAY,uBACZ,OAAU,+CACV,QAAW,qBAEX,SAAY,8CACZ,YAAe,gBAGhBP,MAAMC,UAAUC,KAAKM,WAAWD,OAAOE,WAAWF,OAASP,MAAMC,UAAUC","file":"static/js/404.db8db2fe.chunk.js","sourcesContent":["// https://mc-stan.org/docs/2_24/reference-manual/bnf-grammars.html\n\nPrism.languages.stan = {\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n\t'string': {\n\t\t// String literals can contain spaces and any printable ASCII characters except for \" and \\\n\t\t// https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n\t\tpattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n\t\tgreedy: true\n\t},\n\t'directive': {\n\t\tpattern: /^([ \\t]*)#include\\b.*/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n\n\t'function-arg': {\n\t\tpattern: /(\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\s*\\(\\s*)[a-zA-Z]\\w*/,\n\t\tlookbehind: true,\n\t\talias: 'function'\n\t},\n\t'constraint': {\n\t\tpattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'expression': {\n\t\t\t\tpattern: /(=\\s*)(?:(?!\\s*(?:>$|,\\s*\\w+\\s*=))[\\s\\S])+/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'property': /\\b[a-z]\\w*(?=\\s*=)/i,\n\t\t\t'operator': /=/,\n\t\t\t'punctuation': /^<|>$|[,]/\n\t\t}\n\t},\n\t'keyword': [\n\t\t/\\b(?:break|cholesky_factor_corr|cholesky_factor_cov|continue|corr_matrix|cov_matrix|data|else|for|functions|generated|if|in|increment_log_prob|int|matrix|model|ordered|parameters|positive_ordered|print|quantities|real|reject|return|row_vector|simplex|target|transformed|unit_vector|vector|void|while)\\b/,\n\t\t// these are functions that are known to take another function as their first argument.\n\t\t/\\b(?:algebra_solver|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect)\\b/\n\t],\n\t'function': /\\b[a-z]\\w*(?=\\s*\\()/i,\n\t'number': /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?\\b/i,\n\t'boolean': /\\b(?:false|true)\\b/,\n\n\t'operator': /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n\t'punctuation': /[()\\[\\]{},;]/\n};\n\nPrism.languages.stan.constraint.inside.expression.inside = Prism.languages.stan;\n"],"sourceRoot":""}