{"version":3,"sources":["../node_modules/prismjs/components/prism-peoplecode.js"],"names":["Prism","languages","peoplecode","RegExp","source","join","pattern","greedy","lookbehind","alias","inside","pcode"],"mappings":"iGAAAA,MAAMC,UAAUC,WAAa,CAC5B,QAAWC,OAAO,CAEjB,mBAAmBC,OAEnB,cAAcA,OAEd,4DAA4DA,OAE5D,mBAAmBA,QAClBC,KAAK,MACP,OAAU,CACTC,QAAS,kDACTC,QAAQ,GAET,SAAY,OACZ,sBAAuB,CACtBD,QAAS,2CACTE,YAAY,EACZC,MAAO,YAER,aAAc,CACbH,QAAS,iIACTE,YAAY,EACZE,OAAQ,CACP,YAAe,MAGjB,QAAW,gYACX,mBAAoB,CACnBJ,QAAS,sBACTG,MAAO,YAER,SAAY,sBAEZ,QAAW,sBACX,OAAU,oBACV,SAAY,8BACZ,YAAe,eAGhBT,MAAMC,UAAUU,MAAQX,MAAMC,UAAUC","file":"static/js/306.9cd14587.chunk.js","sourcesContent":["Prism.languages.peoplecode = {\n\t'comment': RegExp([\n\t\t// C-style multiline comments\n\t\t/\\/\\*[\\s\\S]*?\\*\\//.source,\n\t\t// REM comments\n\t\t/\\bREM[^;]*;/.source,\n\t\t// Nested <* *> comments\n\t\t/<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source,\n\t\t// /+ +/ comments\n\t\t/\\/\\+[\\s\\S]*?\\+\\//.source,\n\t].join(\"|\")),\n\t'string': {\n\t\tpattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n\t\tgreedy: true\n\t},\n\t'variable': /%\\w+/,\n\t'function-definition': {\n\t\tpattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n\t\tlookbehind: true,\n\t\talias: 'function'\n\t},\n\t'class-name': {\n\t\tpattern: /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /:/\n\t\t}\n\t},\n\t'keyword': /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|implements|import|instance|if|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n\t'operator-keyword': {\n\t\tpattern: /\\b(?:and|not|or)\\b/i,\n\t\talias: 'operator'\n\t},\n\t'function': /[_a-z]\\w*(?=\\s*\\()/i,\n\n\t'boolean': /\\b(?:false|true)\\b/i,\n\t'number': /\\b\\d+(?:\\.\\d+)?\\b/,\n\t'operator': /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n\t'punctuation': /[:.;,()[\\]]/\n};\n\nPrism.languages.pcode = Prism.languages.peoplecode;\n"],"sourceRoot":""}