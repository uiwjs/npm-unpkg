{"version":3,"sources":["../node_modules/prismjs/components/prism-ocaml.js"],"names":["Prism","languages","ocaml","pattern","greedy","alias"],"mappings":"iGAAAA,MAAMC,UAAUC,MAAQ,CACvB,QAAW,mBACX,OAAU,CACT,CACCC,QAAS,wBACTC,QAAQ,GAET,CACCD,QAAS,qDACTC,QAAQ,IAGV,OAAU,yEACV,UAAa,CACZD,QAAS,SACTE,MAAO,aAER,MAAS,CACRF,QAAS,SACTE,MAAO,YAER,cAAiB,CAChBF,QAAS,SACTE,MAAO,YAER,QAAW,CACVF,QAAS,OACTE,MAAO,YAER,OAAU,CACTF,QAAS,aACTE,MAAO,YAIR,QAAW,gSACX,QAAW,qBAEX,SAAY,8FACZ,YAAe","file":"static/js/290.60cbbe76.chunk.js","sourcesContent":["Prism.languages.ocaml = {\n\t'comment': /\\(\\*[\\s\\S]*?\\*\\)/,\n\t'string': [\n\t\t{\n\t\t\tpattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(['`])(?:\\\\(?:\\d+|x[\\da-f]+|.)|(?!\\1)[^\\\\\\r\\n])\\1/i,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'number': /\\b(?:0x[\\da-f][\\da-f_]+|(?:0[bo])?\\d[\\d_]*\\.?[\\d_]*(?:e[+-]?[\\d_]+)?)/i,\n\t'directive': {\n\t\tpattern: /\\B#\\w+/,\n\t\talias: 'important'\n\t},\n\t'label': {\n\t\tpattern: /\\B~\\w+/,\n\t\talias: 'function'\n\t},\n\t'type_variable': {\n\t\tpattern: /\\B'\\w+/,\n\t\talias: 'function'\n\t},\n\t'variant': {\n\t\tpattern: /`\\w+/,\n\t\talias: 'variable'\n\t},\n\t'module': {\n\t\tpattern: /\\b[A-Z]\\w+/,\n\t\talias: 'variable'\n\t},\n\t// For the list of keywords and operators,\n\t// see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n\t'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t// Custom operators are allowed\n\t'operator': /:=|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n\t'punctuation': /[(){}\\[\\]|.,:;]|\\b_\\b/\n};\n"],"sourceRoot":""}