{"version":3,"sources":["../node_modules/prismjs/components/prism-lilypond.js"],"names":["Prism","schemeExpression","source","i","replace","lilypond","languages","pattern","RegExp","lookbehind","greedy","inside","alias","rest","scheme","ly"],"mappings":"kGAAC,SAAUA,GAMV,IAJA,IAAIC,EAAmB,mGAAmGC,OAIjHC,EAAI,EAAGA,EADQ,EACeA,IACtCF,EAAmBA,EAAiBG,QAAQ,WAAW,WAAc,OAAOH,KAE7EA,EAAmBA,EAAiBG,QAAQ,UAAW,UAAUF,QAGjE,IAAIG,EAAWL,EAAMM,UAAUD,SAAW,CACzC,QAAW,8BACX,kBAAmB,CAClBE,QAASC,OAAO,8DAA8DN,OAAOE,QAAQ,WAAW,WAAc,OAAOH,KAAsB,KACnJQ,YAAY,EACZC,QAAQ,EACRC,OAAQ,CACP,OAAU,CACTJ,QAAS,eACTE,YAAY,EACZG,MAAO,kBACPD,OAAQ,CACP,oBAAqB,CACpBJ,QAAS,iBACTG,QAAQ,EACRC,OAAQ,CACP,YAAe,YACf,SAAY,CACXJ,QAAS,UACTK,MAAO,oBACPD,OAAQ,QAIXE,KAAMb,EAAMM,UAAUQ,SAGxB,YAAe,MAGjB,OAAU,CACTP,QAAS,oBACTG,QAAQ,GAET,aAAc,CACbH,QAAS,mBACTE,YAAY,GAEb,QAAW,CACVF,QAAS,iBACTI,OAAQ,CACP,YAAe,QAGjB,SAAY,aACZ,YAAe,CACdJ,QAAS,uGACTE,YAAY,GAEb,OAAU,qBAGXJ,EAAS,mBAAmBM,OAA5B,OAA6CA,OAAO,qBAAqBA,OAAzE,SAA4FA,OAASN,EAErGL,EAAMM,UAAUS,GAAKV,EAlErB,CAoECL","file":"static/js/235.cce6c8b2.chunk.js","sourcesContent":["(function (Prism) {\n\n\tvar schemeExpression = /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/.source;\n\t// allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n\t// For some reason, this can't be 4\n\tvar recursivenessLog2 = 5;\n\tfor (var i = 0; i < recursivenessLog2; i++) {\n\t\tschemeExpression = schemeExpression.replace(/<expr>/g, function () { return schemeExpression; });\n\t}\n\tschemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source);\n\n\n\tvar lilypond = Prism.languages.lilypond = {\n\t\t'comment': /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n\t\t'embedded-scheme': {\n\t\t\tpattern: RegExp(/(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(/<expr>/g, function () { return schemeExpression; }), 'm'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'scheme': {\n\t\t\t\t\tpattern: /^(#)[\\s\\S]+$/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'language-scheme',\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'embedded-lilypond': {\n\t\t\t\t\t\t\tpattern: /#\\{[\\s\\S]*?#\\}/,\n\t\t\t\t\t\t\tgreedy: true,\n\t\t\t\t\t\t\tinside: {\n\t\t\t\t\t\t\t\t'punctuation': /^#\\{|#\\}$/,\n\t\t\t\t\t\t\t\t'lilypond': {\n\t\t\t\t\t\t\t\t\tpattern: /[\\s\\S]+/,\n\t\t\t\t\t\t\t\t\talias: 'language-lilypond',\n\t\t\t\t\t\t\t\t\tinside: null // see below\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\trest: Prism.languages.scheme\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t'punctuation': /#/\n\t\t\t}\n\t\t},\n\t\t'string': {\n\t\t\tpattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': {\n\t\t\tpattern: /(\\\\new\\s+)[\\w-]+/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'keyword': {\n\t\t\tpattern: /\\\\[a-z][-\\w]*/i,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /^\\\\/\n\t\t\t}\n\t\t},\n\t\t'operator': /[=|]|<<|>>/,\n\t\t'punctuation': {\n\t\t\tpattern: /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'number': /\\b\\d+(?:\\/\\d+)?\\b/\n\t};\n\n\tlilypond['embedded-scheme'].inside['scheme'].inside['embedded-lilypond'].inside['lilypond'].inside = lilypond;\n\n\tPrism.languages.ly = lilypond;\n\n}(Prism));\n"],"sourceRoot":""}