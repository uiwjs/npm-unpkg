{"version":3,"sources":["components/Search.tsx","components/Search.module.less","pages/Preview/DirectoryTrees.module.less","pages/Preview/Content.module.less","pages/Preview/index.module.less","pages/Preview/DirectoryTrees.tsx","pages/Preview/Content.tsx","pages/Preview/index.tsx"],"names":["Search","props","dispatch","useDispatch","useState","value","setValue","to","label","links","className","styles","input","size","preIcon","onChange","e","target","addonAfter","onClick","global","update","showSearch","history","push","icon","basic","type","placeholder","egLink","map","item","index","persist","preventDefault","module","exports","prettyBytes","num","precision","addSpace","UNITS","Math","abs","exponent","min","floor","log10","length","n","Number","toPrecision","MeunItemView","useMemo","Item","tagName","NavLink","title","filepath","path","color","tags","text","replace","DirectoryTrees","useSelector","loading","effects","getDirectoryTrees","files","pkgname","style","width","theme","bordered","renderMenuItem","data","menuItems","forEach","idx","SubMenu","getFileContent","content","extname","contentView","ext","padding","source","npmPkgName","pkg","JSON","parse","name","version","devDependencies","Object","keys","key","dependencies","error","rehypePlugins","rehypeRewrite","node","parent","test","includes","children","properties","href","code","loader","Header","Layout","Content","Preview","notFindPkg","package","Info","params","useParams","urlPkgName","org","useEffect","setPkgname","getPackageJSON","document","filename","nameView","fontSize","header","isOpen","useButton","onConfirm","console","log","onCancel","onClosed","homepage","repository","url","license","description","warpper","height","minWidth","overflow","backgroundColor","flex","position"],"mappings":"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","file":"static/js/3.66499459.chunk.js","sourcesContent":["import React, {useState, Fragment} from 'react';\nimport Input from '@uiw/react-input';\nimport Button from '@uiw/react-button';\nimport { useDispatch } from 'react-redux';\nimport { DefaultProps } from '@uiw-admin/router-control';\nimport { Dispatch } from '../models';\nimport { Link }from 'react-router-dom';\nimport styles from './Search.module.less';\n\nexport default function Search(props = {} as DefaultProps) {\n  const dispatch = useDispatch<Dispatch>();\n  const [value, setValue] = useState<string>();\n  const [links] = useState<{to: string, label: string}[]>([\n    {\n      to: '/pkg/uiw',\n      label: 'uiw'\n    },\n    {\n      to: '/pkg/vue',\n      label: 'vue'\n    },\n    {\n      to: '/pkg/react',\n      label: 'react'\n    },\n    {\n      to: '/pkg/react@17',\n      label: 'react@17'\n    },\n    {\n      to: '/pkg/react@17.0.1',\n      label: 'react@17.0.1'\n    },\n  ]);\n  return (\n    <Fragment>\n      <Input\n        className={styles.input}\n        size=\"large\"\n        preIcon=\"search\"\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n        addonAfter={\n          <Button onClick={() => {\n            if (value) {\n              dispatch.global.update({ showSearch: false });\n              props.history.push(`/pkg/${value}`);\n            }\n          }} icon=\"arrow-right\" size=\"small\" basic type=\"light\" />\n        }\n        placeholder=\"package or package@version\"\n      />\n      <div className={styles.egLink}>\n        <span>E.g.</span>\n        {links.map((item, index) => {\n          return (\n            <Link\n              key={index}\n              to={item.to}\n              onClick={(e) => {\n                e.persist();\n                e.preventDefault();\n                dispatch.global.update({ showSearch: false });\n                props.history.push(item.to);\n              }}\n            >\n              {item.label}\n            </Link>\n          )\n        })}\n      </div>\n    </Fragment>\n  );\n}\n\n// const searchView = connect(mapState, mapDispatch)(Search);\n// type SearchView = typeof Search;\n// export default searchView as SearchView;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Search_input__2SGdB\",\"egLink\":\"Search_egLink__WQ6Jl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"DirectoryTrees_tags__2C7q_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"Content_code__2BDSE\",\"loader\":\"Content_loader__v-POL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warpper\":\"index_warpper__1T8JF\",\"header\":\"index_header__3hMT2\"};","import React, { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport Menu from '@uiw/react-menu';\nimport Tag from '@uiw/react-tag';\nimport Loader from '@uiw/react-loader';\nimport { NavLink } from 'react-router-dom';\nimport { RootState } from '../../models';\nimport { Files } from '../../models/global';\nimport styles from './DirectoryTrees.module.less';\n\nconst prettyBytes = (num: number, precision = 3, addSpace = true) => {\n  const UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  if (Math.abs(num) < 1) return num + (addSpace ? ' ' : '') + UNITS[0];\n  const exponent = Math.min(Math.floor(Math.log10(num < 0 ? -num : num) / 3), UNITS.length - 1);\n  const n = Number(((num < 0 ? -num : num) / 1000 ** exponent).toPrecision(precision));\n  return (num < 0 ? '-' : '') + n + (addSpace ? ' ' : '') + UNITS[exponent];\n};\n\nfunction MeunItemView(props: { path?: string, filepath?: string; size?: number } = {}) {\n  return useMemo(() => (\n    <Menu.Item\n      tagName={NavLink}\n      title={props.filepath}\n      to={`/pkg/${props.path}`}\n      addonAfter={\n        <Tag color=\"#e0e0e0\" title={(props.size && prettyBytes(props.size)) || ''} className={styles.tags} />\n      }\n      icon=\"file-text\"\n      text={props.filepath!.replace(/^\\//, '')}\n    />\n  ), [props.path, props.size, props.filepath]);\n}\n\nexport default function DirectoryTrees() {\n  const { loading, files, pkgname } = useSelector(({ global, loading }: RootState) => ({\n    loading: loading.effects.global.getDirectoryTrees,\n    files: global.files,\n    pkgname: global.pkgname,\n  }));\n\n  function renderMenuItem(data: Files[] = [], menuItems: any = []) {\n    data.forEach((item, idx) => {\n      if (item.type === 'directory') {\n        menuItems.push(\n          <Menu.SubMenu key={idx} icon=\"folder\" text={item.path.replace(/^\\//, '')} >\n            {renderMenuItem(item.files)}\n          </Menu.SubMenu>\n        );\n      } else if (item.type === 'file') {\n        menuItems.push(\n          <MeunItemView key={idx} path={`${pkgname}/file${item.path}`} filepath={item.path} size={item.size} />\n        );\n      }\n    });\n    return menuItems;\n  }\n  return (\n    <Loader loading={loading} style={{ width: '100%'}}>\n      <Menu theme=\"light\" bordered={false}>\n        {renderMenuItem(files)}\n      </Menu>\n    </Loader>\n  );\n}\n","import { useMemo, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport Loader from '@uiw/react-loader';\nimport rehypeRewrite from 'rehype-rewrite';\nimport { Parent, NodeData } from 'unist';\nimport MarkdownPreview from '@uiw/react-markdown-preview';\nimport { RootState } from '../../models';\nimport styles from './Content.module.less';\n\nexport default function DirectoryTrees() {\n  const { loading, content, extname } = useSelector(({ global, loading }: RootState) => ({\n    loading: loading.effects.global.getFileContent,\n    content: global.content,\n    extname: global.extname,\n    global,\n  }));\n  const contentView = useMemo(() => {\n    let ext = extname;\n    switch (extname) {\n      case 'tsx': ext = 'typescript'; break;\n      case 'ts': ext = 'typescript'; break;\n      case 'map': ext = 'json'; break;\n      case 'markdown': ext = 'md'; break;\n      default: break;\n    }\n    if (!content) return <Fragment />\n    if (extname === 'md') {\n      return <MarkdownPreview style={{ padding: 25 }} source={content || ''} />\n    }\n    if (extname === 'json') {\n      const npmPkgName: string[] = []\n      try {\n        const pkg = JSON.parse(content || '{}')\n        if (pkg.name && pkg.version) {\n          if (pkg.devDependencies && Object.keys(pkg.devDependencies).length > 0) {\n            Object.keys(pkg.devDependencies).forEach(key => npmPkgName.push(key))\n          }\n          if (pkg.dependencies && Object.keys(pkg.dependencies).length > 0) {\n            Object.keys(pkg.dependencies).forEach(key => npmPkgName.push(key))\n          }\n        }\n      } catch (error) { }\n      return (\n        <MarkdownPreview\n          rehypePlugins={[[rehypeRewrite, ((node: NodeData<Parent>, index: number, parent: NodeData<Parent>) => {\n            if (\n              node.type as any === 'text'\n              && /\"([\\s\\S]*?)(\\s.+)?\"/.test(node.value as string)\n              && npmPkgName.includes((node.value as string).replace(/\"/g, ''))\n            ) {\n              parent.children = [{\n                type: 'element' as any,\n                tagName: 'span',\n                properties: {},\n                children: [\n                  {\n                    type: 'element' as any,\n                    tagName: 'a',\n                    properties: {\n                      href: `#/pkg/${(node.value as string).replace(/\"/g, '')}`,\n                      style: {\n                        color: '#0080ff',\n                        'text-decoration': 'underline'\n                      }\n                    },\n                    children: [\n                      {type: 'text', value: node.value}\n                    ]\n                  }\n                ]\n              }]\n            }\n          })]]}\n          className={styles.code} source={`\\`\\`\\`${ext}\\n${content}\\n\\`\\`\\``}\n        />\n      )\n    }\n    if (extname) {\n      return <MarkdownPreview className={styles.code} source={`\\`\\`\\`${ext}\\n${content}\\n\\`\\`\\``} />\n    }\n    return <pre style={{ padding: 25 }}>{content}</pre>;\n  }, [extname, content]);\n  return (\n    <Fragment>\n      <Loader loading={loading} className={styles.loader}>\n        {contentView}\n      </Loader>\n    </Fragment>\n  );\n}\n\n// export default connect(mapState, mapDispatch)(DirectoryTrees);","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, Fragment, useMemo } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Divider from '@uiw/react-divider';\nimport Layout from '@uiw/react-layout';\nimport Button from '@uiw/react-button';\nimport Split from '@uiw/react-split';\nimport Modal from '@uiw/react-modal';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { DefaultProps } from '@uiw-admin/router-control';\nimport DirectoryTrees from './DirectoryTrees';\nimport ContentView from './Content';\nimport Search from '../../components/Search';\nimport { Params } from '../../models/global';\nimport { RootState, Dispatch } from '../../models';\nimport { PackageJSON } from '../../models/global';\nimport styles from './index.module.less';\n\nconst { Header, Content } = Layout;\n\nexport default function Preview(props = {} as DefaultProps) {\n  const { showSearch, notFindPkg, package: Info, pkgname } = useSelector(({ global, loading }: RootState) => ({\n    loading: loading.effects.global.getDirectoryTrees,\n    pkgname: global.pkgname,\n    notFindPkg: global.notFindPkg,\n    package: (global.package || {}) as PackageJSON,\n    showSearch: global.showSearch,\n  }));\n\n  const dispatch = useDispatch<Dispatch>();\n\n  const params = useParams<Params>();\n  const urlPkgName = `${params.org ? `${params.org}/` : ''}${params.name}`;\n  useEffect(() => {\n    if (!pkgname || urlPkgName !== pkgname) {\n      dispatch.global.setPkgname(params);\n      dispatch.global.getDirectoryTrees();\n      dispatch.global.getPackageJSON();\n    }\n  }, [pkgname, urlPkgName, pkgname]);\n  useEffect(() => {\n    document.title = `${params.org ? `${params.org}/` : ''}${params.name} - NPM UNPKG`;\n  }, [params.org, params.name]);\n  useEffect(() => {\n    dispatch.global.getFileContent(params.filename);\n  }, [params.filename]);\n  const nameView = useMemo(() => (\n    <Button size=\"small\" type=\"link\" onClick={() => dispatch.global.update({ showSearch: true })} style={{ fontSize: 21 }}>\n      {Info && Info.name ? `${Info.name}@${Info.version}` : urlPkgName}\n    </Button>\n  ), [Info.name, Info.version, params.org]);\n  return (\n    <Layout>\n      <Header className={styles.header}>\n        <Modal\n          title=\"Select package\"\n          isOpen={showSearch}\n          icon=\"information\"\n          type=\"primary\"\n          useButton={false}\n          onConfirm={() => console.log('您点击了确定按钮！')}\n          onCancel={() => console.log('您点击了取消按钮！')}\n          onClosed={() => dispatch.global.update({ showSearch: false })}\n        >\n          <Search {...props} />\n        </Modal>\n        {nameView}\n        {Info.name && (\n          <Fragment>\n            <Divider type=\"vertical\" />\n            <a href={`https://www.npmjs.com/package/${Info.name}/v/${Info.version}`} target=\"__blank\">npm</a>\n            {Info.homepage && (\n              <Fragment>\n                <Divider type=\"vertical\" />\n                <a href={Info.homepage} target=\"__blank\">homepage</a>\n              </Fragment>\n            )}\n            {Info.repository && (\n              <Fragment>\n                <Divider type=\"vertical\" />\n                <a href={typeof Info.repository === 'string' ? Info.repository : (Info.repository.url || '')} target=\"__blank\">repository</a>\n              </Fragment>\n            )}\n            {Info.license && (\n              <Fragment>\n                <Divider type=\"vertical\" />\n                <span>{Info.license}</span>\n              </Fragment>\n            )}\n            {Info.description && (\n              <Fragment>\n                <Divider type=\"vertical\" />\n                <span title={Info.description}>{Info.description}</span>\n              </Fragment>\n            )}\n          </Fragment>\n        )}\n        {notFindPkg && (\n          <Fragment>\n            <Divider type=\"vertical\" />\n            <span>Cannot find package {urlPkgName}.</span>\n          </Fragment>\n        )}\n      </Header>\n      <Layout className={styles.warpper}>\n        <Split className={styles.warpper} style={{ height: 100 }}>\n          <div style={{ minWidth: 210, width: 210, overflow: 'auto', backgroundColor: '#fff' }}>\n            <DirectoryTrees />\n          </div>\n          <Content style={{ minWidth: 100, flex: 1, overflow: 'auto', position: 'relative' }}>\n            <ContentView />\n          </Content>\n        </Split>\n      </Layout>\n    </Layout>\n  );\n}\n"],"sourceRoot":""}