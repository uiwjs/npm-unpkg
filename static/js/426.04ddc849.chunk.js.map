{"version":3,"sources":["../node_modules/prismjs/components/prism-tt2.js"],"names":["Prism","languages","tt2","extend","insertBefore","pattern","alias","greedy","inside","string","hooks","add","env","buildPlaceholders","tokenizePlaceholders"],"mappings":"kGAAC,SAASA,GAETA,EAAMC,UAAUC,IAAMF,EAAMC,UAAUE,OAAO,QAAS,CACrD,QAAW,sBACX,QAAW,0NACX,YAAe,eAGhBH,EAAMC,UAAUG,aAAa,MAAO,SAAU,CAC7C,SAAY,iDACZ,SAAY,CACXC,QAAS,mDAIXL,EAAMC,UAAUG,aAAa,MAAO,UAAW,CAC9C,UAAa,CACZC,QAAS,sBACTC,MAAO,iBAITN,EAAMC,UAAUG,aAAa,MAAO,SAAU,CAC7C,uBAAwB,CACvBC,QAAS,gCACTE,QAAQ,EACRD,MAAO,UAER,uBAAwB,CACvBD,QAAS,gCACTE,QAAQ,EACRD,MAAO,SACPE,OAAQ,CACP,SAAY,CACXH,QAAS,wDAONL,EAAMC,UAAUC,IAAIO,OAE3BT,EAAMU,MAAMC,IAAI,mBAAmB,SAASC,GAE3CZ,EAAMC,UAAU,qBAAqBY,kBAAkBD,EAAK,MAD3C,sBAIlBZ,EAAMU,MAAMC,IAAI,kBAAkB,SAASC,GAC1CZ,EAAMC,UAAU,qBAAqBa,qBAAqBF,EAAK,UAjDhE,CAoDCZ","file":"static/js/426.04ddc849.chunk.js","sourcesContent":["(function(Prism) {\n\n\tPrism.languages.tt2 = Prism.languages.extend('clike', {\n\t\t'comment': /#.*|\\[%#[\\s\\S]*?%\\]/,\n\t\t'keyword': /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n\t\t'punctuation': /[[\\]{},()]/\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'number', {\n\t\t'operator': /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n\t\t'variable': {\n\t\t\tpattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'keyword', {\n\t\t'delimiter': {\n\t\t\tpattern: /^(?:\\[%|%%)-?|-?%]$/,\n\t\t\talias: 'punctuation'\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('tt2', 'string', {\n\t\t'single-quoted-string': {\n\t\t\tpattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'double-quoted-string': {\n\t\t\tpattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string',\n\t\t\tinside: {\n\t\t\t\t'variable': {\n\t\t\t\t\tpattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// The different types of TT2 strings \"replace\" the C-like standard string\n\tdelete Prism.languages.tt2.string;\n\n\tPrism.hooks.add('before-tokenize', function(env) {\n\t\tvar tt2Pattern = /\\[%[\\s\\S]+?%\\]/g;\n\t\tPrism.languages['markup-templating'].buildPlaceholders(env, 'tt2', tt2Pattern);\n\t});\n\n\tPrism.hooks.add('after-tokenize', function(env) {\n\t\tPrism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2');\n\t});\n\n}(Prism));\n"],"sourceRoot":""}