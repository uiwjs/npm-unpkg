{"version":3,"sources":["../node_modules/prismjs/components/prism-kotlin.js"],"names":["Prism","languages","kotlin","extend","pattern","lookbehind","insertBefore","alias","interpolation","inside","rest","kt","kts"],"mappings":"kGAAC,SAAUA,GACVA,EAAMC,UAAUC,OAASF,EAAMC,UAAUE,OAAO,QAAS,CACxD,QAAW,CAEVC,QAAS,2bACTC,YAAY,GAEb,SAAY,CACX,eACA,CACCD,QAAS,mBACTC,YAAY,IAGd,OAAU,kIACV,SAAY,gHAGNL,EAAMC,UAAUC,OAAO,cAE9BF,EAAMC,UAAUK,aAAa,SAAU,SAAU,CAChD,aAAc,CACbF,QAAS,sBACTG,MAAO,YAITP,EAAMC,UAAUK,aAAa,SAAU,UAAW,CACjD,WAAc,CACbF,QAAS,sCACTG,MAAO,aAGTP,EAAMC,UAAUK,aAAa,SAAU,WAAY,CAClD,MAAS,CACRF,QAAS,YACTG,MAAO,YAIT,IAAIC,EAAgB,CACnB,CACCJ,QAAS,cACTK,OAAQ,CACP,UAAa,CACZL,QAAS,YACTG,MAAO,YAERG,KAAMV,EAAMC,UAAUC,SAGxB,CACCE,QAAS,QACTG,MAAO,aAITP,EAAMC,UAAUC,OAAhB,OAAiCO,OAAST,EAAMC,UAAUC,OAAO,cAAcO,OAAS,CACvFD,cAAeA,GAGhBR,EAAMC,UAAUU,GAAKX,EAAMC,UAAUC,OACrCF,EAAMC,UAAUW,IAAMZ,EAAMC,UAAUC,OA9DtC,CA+DCF","file":"static/js/227.83810b6e.chunk.js","sourcesContent":["(function (Prism) {\n\tPrism.languages.kotlin = Prism.languages.extend('clike', {\n\t\t'keyword': {\n\t\t\t// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n\t\t\tpattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'function': [\n\t\t\t/\\w+(?=\\s*\\()/,\n\t\t\t{\n\t\t\t\tpattern: /(\\.)\\w+(?=\\s*\\{)/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n\t\t'operator': /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n\t});\n\n\tdelete Prism.languages.kotlin[\"class-name\"];\n\n\tPrism.languages.insertBefore('kotlin', 'string', {\n\t\t'raw-string': {\n\t\t\tpattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n\t\t\talias: 'string'\n\t\t\t// See interpolation below\n\t\t}\n\t});\n\tPrism.languages.insertBefore('kotlin', 'keyword', {\n\t\t'annotation': {\n\t\t\tpattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n\t\t\talias: 'builtin'\n\t\t}\n\t});\n\tPrism.languages.insertBefore('kotlin', 'function', {\n\t\t'label': {\n\t\t\tpattern: /\\w+@|@\\w+/,\n\t\t\talias: 'symbol'\n\t\t}\n\t});\n\n\tvar interpolation = [\n\t\t{\n\t\t\tpattern: /\\$\\{[^}]+\\}/,\n\t\t\tinside: {\n\t\t\t\t'delimiter': {\n\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\talias: 'variable'\n\t\t\t\t},\n\t\t\t\trest: Prism.languages.kotlin\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpattern: /\\$\\w+/,\n\t\t\talias: 'variable'\n\t\t}\n\t];\n\n\tPrism.languages.kotlin['string'].inside = Prism.languages.kotlin['raw-string'].inside = {\n\t\tinterpolation: interpolation\n\t};\n\n\tPrism.languages.kt = Prism.languages.kotlin;\n\tPrism.languages.kts = Prism.languages.kotlin;\n}(Prism));\n"],"sourceRoot":""}