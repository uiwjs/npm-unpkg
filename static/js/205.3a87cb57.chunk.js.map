{"version":3,"sources":["../node_modules/prismjs/components/prism-jq.js"],"names":["Prism","interpolation","source","string","RegExp","replace","stringInterpolation","pattern","lookbehind","inside","jq","languages","greedy","alias","content"],"mappings":"kGAAC,SAAUA,GAEV,IAAIC,EAAgB,8BAA8BC,OAC9CC,EAASC,OAAO,kCAAkCF,OAAOG,QAAQ,OAAO,WAAc,OAAOJ,MAC7FK,EAAsB,CACzB,cAAiB,CAChBC,QAASH,OAAO,0BAA0BF,OAASD,GACnDO,YAAY,EACZC,OAAQ,CACP,QAAW,CACVF,QAAS,wBACTC,YAAY,EACZC,OAAQ,MAET,YAAe,eAKdC,EAAKV,EAAMW,UAAUD,GAAK,CAC7B,QAAW,MACX,SAAY,CACXH,QAASH,OAAOD,EAAOD,OAAS,gBAAgBA,QAChDU,QAAQ,EACRH,OAAQH,GAET,OAAU,CACTC,QAASJ,EACTS,QAAQ,EACRH,OAAQH,GAGT,SAAY,CACXC,QAAS,uBACTC,YAAY,GAGb,SAAY,UACZ,mBAAoB,CACnBD,QAAS,4BACTM,MAAO,YAER,QAAW,wHACX,QAAW,qBACX,OAAU,4CAEV,SAAY,CACX,CACCN,QAAS,OACTM,MAAO,QAER,kEAED,mBAAoB,CACnBN,QAAS,wBACTM,MAAO,YAER,YAAe,oCACf,IAAO,CACNN,QAAS,KACTM,MAAO,cAITP,EAAoBL,cAAcQ,OAAOK,QAAQL,OAASC,EAhE1D,CAkECV","file":"static/js/205.3a87cb57.chunk.js","sourcesContent":["(function (Prism) {\n\n\tvar interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source;\n\tvar string = RegExp(/\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(/__/g, function () { return interpolation; }));\n\tvar stringInterpolation = {\n\t\t'interpolation': {\n\t\t\tpattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'content': {\n\t\t\t\t\tpattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\tinside: null // see below\n\t\t\t\t},\n\t\t\t\t'punctuation': /^\\\\\\(|\\)$/\n\t\t\t}\n\t\t}\n\t};\n\n\tvar jq = Prism.languages.jq = {\n\t\t'comment': /#.*/,\n\t\t'property': {\n\t\t\tpattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n\t\t\tgreedy: true,\n\t\t\tinside: stringInterpolation\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true,\n\t\t\tinside: stringInterpolation\n\t\t},\n\n\t\t'function': {\n\t\t\tpattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n\t\t\tlookbehind: true\n\t\t},\n\n\t\t'variable': /\\B\\$\\w+/,\n\t\t'property-literal': {\n\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n\t\t\talias: 'property'\n\t\t},\n\t\t'keyword': /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n\t\t'boolean': /\\b(?:true|false)\\b/,\n\t\t'number': /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n\n\t\t'operator': [\n\t\t\t{\n\t\t\t\tpattern: /\\|=?/,\n\t\t\t\talias: 'pipe'\n\t\t\t},\n\t\t\t/\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|or|not)\\b/\n\t\t],\n\t\t'c-style-function': {\n\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n\t\t\talias: 'function'\n\t\t},\n\t\t'punctuation': /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n\t\t'dot': {\n\t\t\tpattern: /\\./,\n\t\t\talias: 'important'\n\t\t}\n\t}\n\n\tstringInterpolation.interpolation.inside.content.inside = jq;\n\n}(Prism));\n"],"sourceRoot":""}