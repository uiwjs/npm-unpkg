{"version":3,"sources":["../node_modules/prismjs/components/prism-mongodb.js"],"names":["Prism","operators","operatorsSource","map","operator","replace","join","languages","mongodb","extend","insertBefore","pattern","greedy","inside","RegExp","string","url","entity","alias"],"mappings":"kGAAC,SAAUA,GAEV,IAAIC,EAAY,CAEf,MAAO,MAAO,OAAQ,MAAO,MAAO,OAAQ,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,MACnF,UAAW,QAAS,QAAS,cAAe,OAAQ,SAAU,QAAS,SAAU,iBACjF,aAAc,QAAS,cAAe,OAAQ,aAAc,QAAS,gBAAiB,cACtF,gBAAiB,cAAe,WAAY,aAAc,QAAS,SAGnE,eAAgB,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,OAAQ,eAAgB,SACnF,YAAa,OAAQ,QAAS,QAAS,WAAY,QAAS,YAAa,SAAU,QAAS,OAG5F,aAAc,UAAW,cAAe,aAAc,SAAU,aAAc,SAAU,WACxF,eAAgB,SAAS,cAAe,SAAU,qBAAsB,gBAAiB,UACzF,SAAU,SAAU,OAAQ,kBAAmB,WAAY,UAAW,eAAgB,eACtF,UAAW,OAAQ,QAAS,QAAS,eAAgB,aAAc,SAAU,UAG7E,OAAQ,eAAgB,QAAS,SAAU,OAAQ,YAAa,mBAAoB,OACpF,kBAAmB,eAAgB,iBAAkB,QAAS,SAAU,QAAS,SACjF,SAAU,OAAQ,cAAe,YAAa,QAAS,OAAQ,UAAW,gBAAiB,QAC3F,WAAY,OAAQ,iBAAkB,eAAgB,kBAAmB,gBAAiB,cAC1F,aAAc,aAAc,oBAAqB,UAAW,MAAO,OAAQ,UAAW,SACtF,SAAU,YAAa,MAAO,OAAQ,QAAS,UAAW,MAAO,gBAAiB,gBAClF,aAAc,WAAY,YAAa,gBAAiB,WAAY,eAAgB,QACpF,QAAS,OAAQ,WAAY,MAAO,OAAQ,SAAU,MAAO,OAAQ,SAAU,OAAQ,OACvF,gBAAiB,QAAS,OAAQ,eAAgB,UAAW,OAAQ,SAAU,YAAa,MAC5F,OAAQ,iBAAkB,MAAO,OAAQ,QAAS,oBAAqB,SAAU,UACjF,aAAc,gBAAiB,cAAe,cAAe,cAAe,gBAAiB,SAC7F,SAAU,UAAW,iBAAkB,aAAc,mBAAoB,eAAgB,YACzF,QAAS,OAAQ,SAAU,SAAU,QAAS,aAAc,cAAe,cAAe,eAC1F,YAAa,UAAW,eAAgB,YAAa,YAAa,OAAQ,UAAW,OACrF,UAAW,UAAW,aAAc,YAAa,SAAU,UAAW,cAAe,YACrF,WAAY,WAAY,QAAS,SAAU,QAAS,QAAS,QAAS,OAGtE,WAAY,WAAY,QAAS,OAAQ,aAAc,OAAQ,WAAY,SAC3E,aAAc,eAAgB,YAsB3BC,EAAkB,OAJtBD,EAAYA,EAAUE,KAAI,SAASC,GAClC,OAAOA,EAASC,QAAQ,IAAK,WAGUC,KAAK,KAAO,OAEpDN,EAAMO,UAAUC,QAAUR,EAAMO,UAAUE,OAAO,aAAc,IAE/DT,EAAMO,UAAUG,aAAa,UAAW,SAAU,CACjD,SAAY,CACXC,QAAS,oGACTC,QAAQ,EACRC,OAAQ,CACP,QAAWC,OAAO,YAAcZ,EAAkB,iBAKrDF,EAAMO,UAAUC,QAAQO,OAAOF,OAAS,CACvCG,IAAK,CAEJL,QAAS,yEACTC,QAAQ,GAETK,OAAQ,CAEPN,QAAS,gGACTC,QAAQ,IAIVZ,EAAMO,UAAUG,aAAa,UAAW,WAAY,CACnD,QAAW,CACVC,QAASG,OAAO,SAhDK,CACtB,WACA,OACA,UACA,QACA,YACA,aACA,gBACA,SACA,SACA,SACA,UACA,QAoC6CR,KAAK,KAAO,QACxDY,MAAO,aA3FT,CA+FClB","file":"static/js/262.e0fabf32.chunk.js","sourcesContent":["(function (Prism) {\n\n\tvar operators = [\n\t\t// query and projection\n\t\t'$eq', '$gt', '$gte', '$in', '$lt', '$lte', '$ne', '$nin', '$and', '$not', '$nor', '$or', \n\t\t'$exists', '$type', '$expr', '$jsonSchema', '$mod', '$regex', '$text', '$where', '$geoIntersects', \n\t\t'$geoWithin', '$near', '$nearSphere', '$all', '$elemMatch', '$size', '$bitsAllClear', '$bitsAllSet', \n\t\t'$bitsAnyClear', '$bitsAnySet', '$comment', '$elemMatch', '$meta', '$slice',\n\t\t\n\t\t// update\n\t\t'$currentDate', '$inc', '$min', '$max', '$mul', '$rename', '$set', '$setOnInsert', '$unset',\n\t\t'$addToSet', '$pop', '$pull', '$push', '$pullAll', '$each', '$position', '$slice', '$sort', '$bit',\n\t\t\n\t\t// aggregation pipeline stages\n\t\t'$addFields', '$bucket', '$bucketAuto', '$collStats', '$count', '$currentOp', '$facet', '$geoNear', \n\t\t'$graphLookup', '$group','$indexStats', '$limit', '$listLocalSessions', '$listSessions', '$lookup', \n\t\t'$match', '$merge', '$out', '$planCacheStats', '$project', '$redact', '$replaceRoot', '$replaceWith', \n\t\t'$sample', '$set', '$skip', '$sort', '$sortByCount', '$unionWith', '$unset', '$unwind',\n\n\t\t// aggregation pipeline operators\n\t\t'$abs', '$accumulator', '$acos', '$acosh', '$add', '$addToSet', '$allElementsTrue', '$and', \n\t\t'$anyElementTrue', '$arrayElemAt', '$arrayToObject', '$asin', '$asinh', '$atan', '$atan2',\n\t\t'$atanh', '$avg', '$binarySize', '$bsonSize', '$ceil', '$cmp', '$concat', '$concatArrays', '$cond', \n\t\t'$convert', '$cos', '$dateFromParts', '$dateToParts', '$dateFromString', '$dateToString', '$dayOfMonth', \n\t\t'$dayOfWeek', '$dayOfYear', '$degreesToRadians', '$divide', '$eq', '$exp', '$filter', '$first',\n\t\t'$floor', '$function', '$gt', '$gte', '$hour', '$ifNull', '$in', '$indexOfArray', '$indexOfBytes', \n\t\t'$indexOfCP', '$isArray', '$isNumber', '$isoDayOfWeek', '$isoWeek', '$isoWeekYear', '$last',\n\t\t'$last', '$let', '$literal', '$ln', '$log', '$log10', '$lt', '$lte', '$ltrim', '$map', '$max',\n\t\t'$mergeObjects', '$meta', '$min', '$millisecond', '$minute', '$mod', '$month', '$multiply', '$ne', \n\t\t'$not', '$objectToArray', '$or', '$pow', '$push', '$radiansToDegrees', '$range', '$reduce',\n\t\t'$regexFind', '$regexFindAll', '$regexMatch', '$replaceOne', '$replaceAll', '$reverseArray', '$round', \n\t\t'$rtrim', '$second', '$setDifference', '$setEquals', '$setIntersection', '$setIsSubset', '$setUnion', \n\t\t'$size', '$sin', '$slice', '$split', '$sqrt', '$stdDevPop', '$stdDevSamp', '$strcasecmp', '$strLenBytes',\n\t\t'$strLenCP', '$substr', '$substrBytes', '$substrCP', '$subtract', '$sum', '$switch', '$tan',\n\t\t'$toBool', '$toDate', '$toDecimal', '$toDouble', '$toInt', '$toLong', '$toObjectId', '$toString',\n\t\t'$toLower', '$toUpper', '$trim', '$trunc', '$type', '$week', '$year', '$zip',\n\n\t\t// aggregation pipeline query modifiers\n\t\t'$comment', '$explain', '$hint', '$max', '$maxTimeMS', '$min', '$orderby', '$query',\n\t\t'$returnKey', '$showDiskLoc', '$natural',\n\t];\n\n\tvar builtinFunctions = [\n\t\t'ObjectId',\n\t\t'Code',\n\t\t'BinData',\n\t\t'DBRef',\n\t\t'Timestamp',\n\t\t'NumberLong',\n\t\t'NumberDecimal',\n\t\t'MaxKey',\n\t\t'MinKey',\n\t\t'RegExp',\n\t\t'ISODate',\n\t\t'UUID',\n\t];\n\n\toperators = operators.map(function(operator) { \n\t\treturn operator.replace('$', '\\\\$');\n\t});\n\n\tvar operatorsSource = '(?:' + operators.join('|') + ')\\\\b';\n\n\tPrism.languages.mongodb = Prism.languages.extend('javascript', {});\n\n\tPrism.languages.insertBefore('mongodb', 'string', {\n\t\t'property': {\n\t\t\tpattern: /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)(?=\\s*:)/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'keyword': RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.mongodb.string.inside = {\n\t\turl: {\n\t\t\t// url pattern\n\t\t\tpattern: /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i, \n\t\t\tgreedy: true\n\t\t},\n\t\tentity: {\n\t\t\t// ipv4\n\t\t\tpattern: /\\b(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\b/,  \n\t\t\tgreedy: true\n\t\t}\n\t};\n\n\tPrism.languages.insertBefore('mongodb', 'constant', {\n\t\t'builtin': {\n\t\t\tpattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n\t\t\talias: 'keyword'\n\t\t}\n\t});\n\n}(Prism));\n"],"sourceRoot":""}